PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %taint = alloca i8*, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a = alloca i8*, align 8, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %b = alloca i8*, align 8, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17

Got store instruction
[TRACK]:i32 0
[TRACK]: srcMemLocation: 0
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %taint, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25

getNormalFlowFunction()
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26

Got store instruction
[TRACK]:  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
[TRACK]: srcMemLocation: 0
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %a, metadata !27, metadata !21), !dbg !28, !phasar.instruction.id !29

getNormalFlowFunction()
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31

Got load instruction
getNormalFlowFunction()
  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32

Got store instruction
[TRACK]:  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
[TRACK]: srcMemLocation: 1
[TRACK]   %taint = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %taint = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Destination:
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !15
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35

getNormalFlowFunction()
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37

Got load instruction
getNormalFlowFunction()
  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38

Got store instruction
[TRACK]:  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]: srcMemLocation: 1
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK] Destination:
[TRACK]   %b = alloca i8*, align 8, !phasar.instruction.id !16
getNormalFlowFunction()
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %a, align 8, !dbg !39, !phasar.instruction.id !40

Got store instruction
[TRACK]:i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0)
[TRACK]: srcMemLocation: 0
getNormalFlowFunction()
  %2 = load i8*, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42

Got load instruction
getNormalFlowFunction()
  store i8* %2, i8** %b, align 8, !dbg !43, !phasar.instruction.id !44

Got store instruction
[TRACK]:  %2 = load i8*, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42
[TRACK]: srcMemLocation: 1
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK]:i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0)
[TRACK]: srcMemLocation: 0
[TRACK]:  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]: srcMemLocation: 1
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !15
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35

[TRACK]:  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]: srcMemLocation: 1
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK]:i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0)
[TRACK]: srcMemLocation: 0
[TRACK]:  %2 = load i8*, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42
[TRACK]: srcMemLocation: 1
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK]:  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
[TRACK]: srcMemLocation: 1
[TRACK]   %taint = alloca i8*, align 8, !phasar.instruction.id !14
getCallToRetFlowFunction()
getCallToRetFlowFunction()
[TRACK]:  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
[TRACK]: srcMemLocation: 0
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %a, metadata !27, metadata !21), !dbg !28, !phasar.instruction.id !29

[TRACK]:  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
[TRACK]: srcMemLocation: 1
[TRACK]   %taint = alloca i8*, align 8, !phasar.instruction.id !14
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35

[TRACK]:  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]: srcMemLocation: 1
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK]:i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0)
[TRACK]: srcMemLocation: 0
[TRACK]:  %2 = load i8*, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42
[TRACK]: srcMemLocation: 1
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !15
getCallToRetFlowFunction()
getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %taint, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %a, metadata !27, metadata !21), !dbg !28, !phasar.instruction.id !29

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %b = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 12 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %taint, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %a, metadata !27, metadata !21), !dbg !28, !phasar.instruction.id !29, ID: 10 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35, ID: 13 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%a = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37, ID: 14 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%a = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38, ID: 15 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%a = alloca i8*, align 8, !phasar.instruction.id !15, ID:

 4

D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %a, align 8, !dbg !39, !phasar.instruction.id !40, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%a = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%b = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 17 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%b = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %b, align 8, !dbg !43, !phasar.instruction.id !44, ID: 18 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%b = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !45, !phasar.instruction.id !46, ID: 19 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!