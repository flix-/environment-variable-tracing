PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !23, metadata !24), !dbg !25, !phasar.instruction.id !26, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %c = alloca i32, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b12 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !22, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %c8 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b6 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %taint, metadata !27, metadata !24), !dbg !28, !phasar.instruction.id !29, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a4 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !34, ID: 16 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog13, !dbg !94, !phasar.instruction.id !95, ID: 45 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog13, !dbg !88, !phasar.instruction.id !89, ID: 42 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: switch i32 %0, label %sw.default11 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !35, !phasar.instruction.id !36, ID: 17 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog9, !dbg !82, !phasar.instruction.id !83, ID: 39 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38
A:	%c8 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog9, !dbg !76, !phasar.instruction.id !77, ID: 36 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34

D:	store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35
A:	%b6 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

--- IFDS START RESULT RECORD ---
N: switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !64, !phasar.instruction.id !65, ID: 30 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28

D:	store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
A:	%c = alloca i32, align 4, !phasar.instruction.id !17, ID: 6

D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

--- IFDS START RESULT RECORD ---
N: %3 = load i32, i32* %rc, align 4, !dbg !96, !phasar.instruction.id !97, ID: 46 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34

D:	store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38
A:	%c8 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35
A:	%b6 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32
A:	%a4 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31

D:	store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
A:	%c = alloca i32, align 4, !phasar.instruction.id !17, ID: 6

D:	store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !58, !phasar.instruction.id !59, ID: 27 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25

D:	store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21 in function: main
D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !52, !phasar.instruction.id !53, ID: 24 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26 in function: main
D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

--- IFDS START RESULT RECORD ---
N: store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29 in function: main
D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28

D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
A:	%c = alloca i32, align 4, !phasar.instruction.id !17, ID: 6

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28

D:	store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25

D:	store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32 in function: main
D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31

D:	store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
A:	%c = alloca i32, align 4, !phasar.instruction.id !17, ID: 6

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28

D:	store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog9, !dbg !70, !phasar.instruction.id !71, ID: 33 in function: main
D:	store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32
A:	%a4 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31

D:	store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
A:	%c = alloca i32, align 4, !phasar.instruction.id !17, ID: 6

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25

D:	store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog13, !dbg !84, !phasar.instruction.id !85, ID: 40 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38
A:	%c8 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35
A:	%b6 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34

D:	store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32
A:	%a4 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31

D:	store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
A:	%c = alloca i32, align 4, !phasar.instruction.id !17, ID: 6

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25

D:	store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
L:	sw.epilog9

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !86, !phasar.instruction.id !87, ID: 41 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b12, metadata !90, metadata !24), !dbg !91, !phasar.instruction.id !92, ID: 43 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %b12, align 4, !dbg !91, !phasar.instruction.id !93, ID: 44 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: ret i32 %3, !dbg !98, !phasar.instruction.id !99, ID: 47 in function: main
D:	store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38
A:	%c8 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35
A:	%b6 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34

D:	store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32
A:	%a4 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31

D:	store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
A:	%c = alloca i32, align 4, !phasar.instruction.id !17, ID: 6

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28

D:	store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25

D:	store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruc[TRACK] Checking end of switch label for: sw.bb
[TRACK] End of switch label: sw.epilog9
[TRACK] Checking end of switch label for: sw.bb
[TRACK] End of switch label: sw.epilog9
[TRACK] Checking end of switch label for: sw.bb1
[TRACK] End of switch label: sw.epilog
[TRACK] Checking end of switch label for: sw.bb1
[TRACK] End of switch label: sw.epilog
[TRACK] Checking end of switch label for: sw.bb1
[TRACK] End of switch label: sw.epilog
[TRACK] Checking end of switch label for: sw.bb
[TRACK] End of switch label: sw.epilog9
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549795353-trace.txt
tion.id !50, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


