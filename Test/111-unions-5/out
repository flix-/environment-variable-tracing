PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45
[TRACK] Destination:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45
[TRACK] Destination:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %u6 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %u6 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72
[TRACK] Destination:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !14### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !17, metadata !39), !dbg !40, !phasar.instruction.id !41, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !48, metadata !39), !dbg !49, !phasar.instruction.id !50, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

--- IFDS START RESULT RECORD ---
N: %taint1 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %taint1, align 8, !dbg !51, !phasar.instruction.id !53, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %tainted, align 8, !dbg !49, !phasar.instruction.id !54, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !55, metadata !39), !dbg !56, !phasar.instruction.id !57, ID: 14 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

--- IFDS START RESULT RECORD ---
N: %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !58, !phasar.instruction.id !59, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %u2 = bitcast %union.u1* %u to %union.u2*, !dbg !60, !phasar.instruction.id !61, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %u3 = bitcast %union.u2* %u2 to %union.u3*, !dbg !62, !phasar.instruction.id !63, ID: 17 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted4 = bitcast %union.u3* %u3 to i8**, !dbg !64, !phasar.instruction.id !65, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %tainted4, align 8, !dbg !64, !phasar.instruction.id !66, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %not_tainted, align 8, !dbg !56, !phasar.instruction.id !67, ID: 20 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

--- IFDS START RESULT RECORD ---
N: %taint5 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !68, !phasar.instruction.id !69, ID: 21 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %taint5, align 8, !dbg !68, !phasar.instruction.id !70, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %u6 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 23 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint7 = bitcast %union.u1* %u6 to i8**, !dbg !73, !phasar.instruction.id !74, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %taint7, align 8, !dbg !75, !phasar.instruction.id !76, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %u8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78, ID: 26 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%u6 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 23

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

--- IFDS START RESULT RECORD ---
N: %taint9 = bitcast %union.u1* %u8 to i8**, !dbg !79, !phasar.instruction.id !80, ID: 27 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%u6 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 23

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %taint9, align 8, !dbg !79, !phasar.instruction.id !81, ID: 28 in function: main
D:	%taint9 = bitcast %union.u1* %u8 to i8**, !dbg !79, !phasar.instruction.id !80, ID: 27

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.ins
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550311276-trace.txt
truction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%u6 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 23

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %tainted, align 8, !dbg !82, !phasar.instruction.id !83, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%u6 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 23

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%taint9 = bitcast %union.u1* %u8 to i8**, !dbg !79, !phasar.instruction.id !80, ID: 27

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !84, !phasar.instruction.id !85, ID: 30 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 7

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%taint = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%u6 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 23

D:	store i8* %call, i8** %taint, align 8, !dbg !46, !phasar.instruction.id !47, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3


