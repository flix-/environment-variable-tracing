PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37
[TRACK] Destination:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37
[TRACK] Destination:
[TRACK] %struct.s2* %s2
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] %struct.s2* %s2
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37
[TRACK] Destination:
[TRACK]   %s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37
[TRACK] Destination:
[TRACK]   %also_tainted = alloca i8*, align 8, !phasar.instruction.id !26
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37
[TRACK] Destination:
[TRACK] %struct.s2* %s2
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s2* %s2, ID: foo.0
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s2** %s2.addr, metadata !31, metadata !32), !dbg !33, !phasar.instruction.id !34, ID: 7 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %nt2 = alloca i32*, align 8, !phasar.instruction.id !28, ID: 4 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s2* %s2, ID: foo.0
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s2* %s2, ID: foo.0
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %nt1 = alloca i8*, align 8, !phasar.instruction.id !27, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s2* %s2, ID: foo.0
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !35, metadata !32), !dbg !36, !phasar.instruction.id !37, ID: 8 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: store %struct.s2* %s2, %struct.s2** %s2.addr, align 8, !phasar.instruction.id !30, ID: 6 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s2* %s2, ID: foo.0
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %nt3 = alloca i32*, align 8, !phasar.instruction.id !29, ID: 5 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s2* %s2, ID: foo.0
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 32 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load %struct.s2*, %struct.s2** %s2.addr, align 8, !dbg !38, !phasar.instruction.id !39, ID: 9 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %s3 = getelementptr inbounds %struct.s2, %struct.s2* %0, i32 0, i32 1, !dbg !40, !phasar.instruction.id !41, ID: 10 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !42, !phasar.instruction.id !43, ID: 11 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %t1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 12 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %also_tainted, align 8, !dbg !36, !phasar.instruction.id !45, ID: 13 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	%1 = load i8*, i8** %t1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 12

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %nt1, metadata !46, metadata !32), !dbg !47, !phasar.instruction.id !48, ID: 14 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: %2 = load %struct.s2*, %struct.s2** %s2.addr, align 8, !dbg !49, !phasar.instruction.id !50, ID: 15 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %t11 = getelementptr inbounds %struct.s2, %struct.s2* %2, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 16 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %t11, align 8, !dbg !51, !phasar.instruction.id !53, ID: 17 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %nt1, align 8, !dbg !47, !phasar.instruction.id !54, ID: 18 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32** %nt2, metadata !55, metadata !32), !dbg !56, !phasar.instruction.id !57, ID: 19 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: %4 = load %struct.s2*, %struct.s2** %s2.addr, align 8, !dbg !58, !phasar.instruction.id !59, ID: 20 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %s32 = getelementptr inbounds %struct.s2, %struct.s2* %4, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61, ID: 21 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: %a = getelementptr inbounds %struct.s3, %struct.s3* %s32, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63, ID: 22 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: %5 = load i32*, i32** %a, align 8, !dbg !62, !phasar.instruction.id !64, ID: 23 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32* %5, i32** %nt2, align 8, !dbg !56, !phasar.instruction.id !65, ID: 24 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32** %nt3, metadata !66, metadata !32), !dbg !67, !phasar.instruction.id !68, ID: 25 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %6 = load %struct.s2*, %struct.s2** %s2.addr, align 8, !dbg !69, !phasar.instruction.id !70, ID: 26 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: %s33 = getelementptr inbounds %struct.s2, %struct.s2* %6, i32 0, i32 1, !dbg !71, !phasar.instruction.id !72, ID: 27 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: %b = getelementptr inbounds %struct.s3, %struct.s3* %s33, i32 0, i32 1, !dbg !73, !phasar.instruction.id !74, ID: 28 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: %7 = load i32*, i32** %b, align 8, !dbg !73, !phasar.instruction.id !75, ID: 29 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32* %7, i32** %nt3, align 8, !dbg !67, !phasar.instruction.id !76, ID: 30 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !77, !phasar.instruction.id !78, ID: 31 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2.addr = alloca %struct.s2*, align 8, !phasar.instruction.id !25, ID: 1
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !26, ID: 2

--- IFDS START RESULT RECORD ---
N: %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 33 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 34 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 35 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s2* %s2, metadata !86, metadata !32), !dbg !87, !phasar.instruction.id !88, ID: 36 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !97, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 41 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 33
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50, ID: 42 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 33
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: store %struct.s2* %s2, %struct.s2** %s21, align 8, !dbg !51, !phasar.instruction.id !52, ID: 43 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 33
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: %s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !53, !phasar.instruction.id !54, ID: 44 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 33
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 34
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50, ID: 42
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load %struct.s2*, %struct.s2** %s22, align 8, !dbg !53, !phasar.instruction.id !55, ID: 45 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 33
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 34
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50, ID: 42
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: call void @foo(%struct.s2* %0), !dbg !56, !phasar.instruction.id !57, ID: 46 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 33
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 34
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50, ID: 42
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !58, !phasar.instruction.id !59, ID: 47 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 37

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 33
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39

D:	store i8* %call, i8** %t1, align 8, !dbg !38, !phasar.instruction.id !39, ID: 40
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 34
A:	%s21
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549967442-trace.txt
 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50, ID: 42
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 38
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !36, !phasar.instruction.id !37, ID: 39


