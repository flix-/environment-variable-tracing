PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !20, metadata !23), !dbg !24, !phasar.instruction.id !25, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %nt = alloca i8*, align 8, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !19, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i8* %0, null, !dbg !29, !phasar.instruction.id !32, ID: 13 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !31, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !31, ID: 12 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%tobool = icmp ne i8* %0, null, !dbg !29, !phasar.instruction.id !32, ID: 13

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !31, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !35, metadata !23), !dbg !37, !phasar.instruction.id !38, ID: 15 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !31, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !37, !phasar.instruction.id !39, ID: 16 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !31, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !35, metadata !23), !dbg !37, !phasar.instruction.id !38, ID: 15

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !40, metadata !23), !dbg !41, !phasar.instruction.id !42, ID: 17 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !35, metadata !23), !dbg !37, !phasar.instruction.id !38, ID: 15

D:	store i32 0, i32* %a, align 4, !dbg !37, !phasar.instruction.id !39, ID: 16
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #4, !dbg !43, !phasar.instruction.id !44, ID: 18 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !35, metadata !23), !dbg !37, !phasar.instruction.id !38, ID: 15

D:	store i32 0, i32* %a, align 4, !dbg !37, !phasar.instruction.id !39, ID: 16
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i8** %t1, metadata !40, metadata !23), !dbg !41, !phasar.instruction.id !42, ID: 17

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !45, ID: 19 in function: main
D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #4, !dbg !43, !phasar.instruction.id !44, ID: 18

D:	call void @llvm.dbg.declare(metadata i8** %t1, metadata !40, metadata !23), !dbg !41, !phasar.instruction.id !42, ID: 17

D:	store i32 0, i32* %a, align 4, !dbg !37, !phasar.instruction.id !39, ID: 16
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !35, metadata !23), !dbg !37, !phasar.instruction.id !38, ID: 15

--- IFDS START RESULT RECORD ---
N: call void @abort() #5, !dbg !46, !phasar.instruction.id !47, ID: 20 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !37, !phasar.instruction.id !39, ID: 16
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i8* %call1, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !45, ID: 19
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #4, !dbg !43, !phasar.instruction.id !44, ID: 18

D:	call void @llvm.dbg.declare(metadata i8** %t1, metadata !40, metadata !23), !dbg !41, !phasar.instruction.id !42, ID: 17

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !35, metadata !23), !dbg !37, !phasar.instruction.id !38, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: unreachable, !dbg !46, !phasar.instruction.id !48, ID: 21 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	call void @abort() #5, !dbg !46, !phasar.instruction.id !47, ID: 20

D:	store i8* %call1, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !45, ID: 19
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #4, !dbg !43, !phasar.instruction.id !44, ID: 18

D:	call void @llvm.dbg.declare(metadata i8** %t1, metadata !40, metadata !23), !dbg !41, !phasar.instruction.id !42, ID: 17

D:	store i32 0, i32* %a, align 4, !dbg !37, !phasar.instruction.id !39, ID: 16
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !35, metadata !23), !dbg !37, !phasar.instruction.id !38, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52, ID: 22 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !31, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 23 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !31, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	@zero_value = constant i2 0,[TRACK] Checking end of branch bb for: entry
[TRACK] End of branch bb: unknown
[TRACK] No end of tainted branch label found! Unreachable or algorithm incomplete?
[TRACK] Checking end of branch bb for: entry
[TRACK] End of branch bb: unknown
[TRACK] No end of tainted branch label found! Unreachable or algorithm incomplete?
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549913120-trace.txt
 align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52, ID: 22

--- IFDS START RESULT RECORD ---
N: call void @abort() #5, !dbg !54, !phasar.instruction.id !55, ID: 24 in function: main
D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	store i32 1, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !17, ID: 6

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: unreachable, !dbg !54, !phasar.instruction.id !56, ID: 25 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !26, !phasar.instruction.id !27, ID: 10

D:	br i1 %tobool, label %if.then, label %if.else, !dbg !33, !phasar.instruction.id !34, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52, ID: 22

D:	store i32 1, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !17, ID: 6

D:	call void @abort() #5, !dbg !54, !phasar.instruction.id !55, ID: 24


