PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Checking end of switch bb for: land.end
[TRACK] End of switch label: sw.epilog9
[TRACK] Checking end of switch bb for: land.end
[TRACK] End of switch label: sw.epilog9
[TRACK] Checking end of switch bb for: sw.bb
[TRACK] End of switch label: sw.epilog
[TRACK] Checking end of switch bb for: sw.bb
[TRACK] End of switch label: sw.epilog
[TRACK] Checking end of switch bb for: sw.bb
[TRACK] End of switch label: sw.epilog
[TRACK] Checking end of switch bb for: sw.bb
[TRACK] End of switch label: sw.epilog
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %rc = alloca i32, align 4, !phasar.instruction.id !15
[TRACK] Destination:
[TRACK]   %retval = alloca i32, align 4, !phasar.instruction.id !14
[TRACK] Checking end of switch bb for: land.end
[TRACK] End of switch label: sw.epilog9
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %rc = alloca i32, align 4, !phasar.instruction.id !15
[TRACK] Destination:
[TRACK]   %retval = alloca i32, align 4, !phasar.instruction.id !14### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %c = alloca i32, align 4, !phasar.instruction.id !18, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t = alloca i32, align 4, !phasar.instruction.id !19, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !17, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !26, metadata !23), !dbg !27, !phasar.instruction.id !28, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !21, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut = alloca i32, align 4, !phasar.instruction.id !20, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %land.rhs, label %lor.lhs.false, !dbg !38, !phasar.instruction.id !39, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !29, metadata !23), !dbg !30, !phasar.instruction.id !31, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %c, metadata !32, metadata !23), !dbg !33, !phasar.instruction.id !34, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %a, align 4, !dbg !35, !phasar.instruction.id !36, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %0, 0, !dbg !35, !phasar.instruction.id !37, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %b, align 4, !dbg !40, !phasar.instruction.id !41, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool1 = icmp ne i32 %1, 0, !dbg !40, !phasar.instruction.id !42, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %c, align 4, !dbg !45, !phasar.instruction.id !46, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool1, label %land.lhs.true, label %land.end, !dbg !43, !phasar.instruction.id !44, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool2 = icmp ne i32 %2, 0, !dbg !45, !phasar.instruction.id !47, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool2, label %land.rhs, label %land.end, !dbg !48, !phasar.instruction.id !49, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %land.end, !phasar.instruction.id !54, ID: 24 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %6 = load i32, i32* %retval, align 4, !dbg !101, !phasar.instruction.id !102, ID: 49 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 -1, i32* %retval, align 4, !dbg !89, !phasar.instruction.id !90, ID: 42
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 1, i32* %t, align 4, !dbg !86, !phasar.instruction.id !88, ID: 41
A:	%t = alloca i32, align 4, !phasar.instruction.id !19, ID: 6

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !85, metadata !23), !dbg !86, !phasar.instruction.id !87, ID: 40

D:	store i32 3, i32* %rc, align 4, !dbg !81, !phasar.instruction.id !82, ID: 38
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

--- IFDS START RESULT RECORD ---
N: %4 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 28 in function: main
D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog9, !dbg !79, !phasar.instruction.id !80, ID: 37 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %sw.default8, !dbg !83, !phasar.instruction.id !84, ID: 39 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 3, i32* %rc, align 4, !dbg !81, !phasar.instruction.id !82, ID: 38
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27 in function: main
D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !71, !phasar.instruction.id !72, ID: 33 in function: main
D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	%4 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 28

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %4, label %sw.default [
    i32 0, label %sw.bb3
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
  ], !dbg !62, !phasar.instruction.id !63, ID: 29

--- IFDS START RESULT RECORD ---
N: %5 = load i32, i32* %rc, align 4, !dbg !96, !phasar.instruction.id !97, ID: 46 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !67, !phasar.instruction.id !68, ID: 31 in function: main
D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	%4 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 28

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %4, label %sw.default [
    i32 0, label %sw.bb3
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
  ], !dbg !62, !phasar.instruction.id !63, ID: 29

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !69, !phasar.instruction.id !70, ID: 32 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	switch i32 %4, label %sw.default [
    i32 0, label %sw.bb3
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
  ], !dbg !62, !phasar.instruction.id !63, ID: 29

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	%4 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 28

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

--- IFDS START RESULT RECORD ---
N: switch i32 %4, label %sw.default [
    i32 0, label %sw.bb3
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
  ], !dbg !62, !phasar.instruction.id !63, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%4 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 28

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !64, !phasar.instruction.id !66, ID: 30 in function: main
D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	%4 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 28

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %4, label %sw.default [
    i32 0, label %sw.bb3
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
  ], !dbg !62, !phasar.instruction.id !63, ID: 29

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34 in function: main
D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	switch i32 %4, label %sw.default [
    i32 0, label %sw.bb3
    i32 1, label %sw.bb4
    i32 2, label %sw.bb5
  ], !dbg !62, !phasar.instruction.id !63, ID: 29

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	%4 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 28

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog9, !dbg !75, !phasar.instruction.id !76, ID: 35 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

--- IFDS START RESULT RECORD ---
N: store i32 3, i32* %rc, align 4, !dbg !81, !phasar.instruction.id !82, ID: 38 in function: main
D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %t, metadata !85, metadata !23), !dbg !86, !phasar.instruction.id !87, ID: 40 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	store i32 3, i32* %rc, align 4, !dbg !81, !phasar.instruction.id !82, ID: 38
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %t, align 4, !dbg !86, !phasar.instruction.id !88, ID: 41 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !85, metadata !23), !dbg !86, !phasar.instruction.id !87, ID: 40

D:	store i32 3, i32* %rc, align 4, !dbg !81, !phasar.instruction.id !82, ID: 38
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	%cmp = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !53, ID: 23

D:	%3 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp, %land.rhs ], !phasar.instruction.id !55, ID: 25

D:	%land.ext = zext i1 %3 to i32, !dbg !48, !phasar.instruction.id !56, ID: 26

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

--- IFDS START RESULT RECORD ---
N: store i32 -1, i32* %retval, align 4, !dbg !89, !phasar.instruction.id !90, ID: 42 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 3, i32* %rc, align 4, !dbg !81, !phasar.instruction.id !82, ID: 38
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !85, metadata !23), !dbg !86, !phasar.instruction.id !87, ID: 40

D:	store i32 1, i32* %t, align 4, !dbg !86, !phasar.instruction.id !88, ID: 41
A:	%t = alloca i32, align 4, !phasar.instruction.id !19, ID: 6

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !89, !phasar.instruction.id !91, ID: 43 in function: main
D:	store i32 3, i32* %rc, align 4, !dbg !81, !phasar.instruction.id !82, ID: 38
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 -1, i32* %retval, align 4, !dbg !89, !phasar.instruction.id !90, ID: 42
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 1, i32* %t, align 4, !dbg !86, !phasar.instruction.id !88, ID: 41
A:	%t = alloca i32, align 4, !phasar.instruction.id !19, ID: 6

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !85, metadata !23), !dbg !86, !phasar.instruction.id !87, ID: 40

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut, metadata !92, metadata !23), !dbg !93, !phasar.instruction.id !94, ID: 44 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	switch i32 %land.ext, label %sw.default8 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb7
  ], !dbg !57, !phasar.instruction.id !58, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %ut, align 4, !dbg !93, !phasar.instruction.id !95, ID: 45 in function: main
D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%rc
[TRACK] Checking end of switch bb for: land.end
[TRACK] End of switch label: sw.epilog9
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550131594-trace.txt
 = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 %5, i32* %retval, align 4, !dbg !98, !phasar.instruction.id !99, ID: 47 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !98, !phasar.instruction.id !100, ID: 48 in function: main
D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

--- IFDS START RESULT RECORD ---
N: ret i32 %6, !dbg !101, !phasar.instruction.id !103, ID: 50 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !50, !phasar.instruction.id !51, ID: 22

D:	%6 = load i32, i32* %retval, align 4, !dbg !101, !phasar.instruction.id !102, ID: 49

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 2, i32* %rc, align 4, !dbg !77, !phasar.instruction.id !78, ID: 36
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 3, i32* %rc, align 4, !dbg !81, !phasar.instruction.id !82, ID: 38
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !85, metadata !23), !dbg !86, !phasar.instruction.id !87, ID: 40

D:	store i32 1, i32* %t, align 4, !dbg !86, !phasar.instruction.id !88, ID: 41
A:	%t = alloca i32, align 4, !phasar.instruction.id !19, ID: 6

D:	store i32 -1, i32* %retval, align 4, !dbg !89, !phasar.instruction.id !90, ID: 42
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1


