PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %arr_decay = alloca i8**, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %ut1 = alloca i8*, align 8, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %t1 = alloca i8*, align 8, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !18, metadata !32), !dbg !33, !phasar.instruction.id !34

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36

getNormalFlowFunction()
  %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38

Got GEP instruction
getNormalFlowFunction()
  %strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40

Got GEP instruction
getNormalFlowFunction()
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42

Got GEP instruction
getNormalFlowFunction()
  store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8*** %arr_decay, metadata !45, metadata !32), !dbg !47, !phasar.instruction.id !48

getNormalFlowFunction()
  %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50

Got GEP instruction
getNormalFlowFunction()
  %strings2 = getelementptr inbounds %struct.s2, %struct.s2* %s21, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52

Got GEP instruction
getNormalFlowFunction()
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings2, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54

Got GEP instruction
getNormalFlowFunction()
  store i8** %arraydecay, i8*** %arr_decay, align 8, !dbg !47, !phasar.instruction.id !55

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38
[TRACK]   %strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40
[TRACK]   %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42
[TRACK] Destination:
[TRACK]   %arr_decay = alloca i8**, align 8, !phasar.instruction.id !14
[TRACK]   %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut1, metadata !56, metadata !32), !dbg !57, !phasar.instruction.id !58

getNormalFlowFunction()
  %0 = load i8**, i8*** %arr_decay, align 8, !dbg !59, !phasar.instruction.id !60

Got load instruction
getNormalFlowFunction()
  %arrayidx3 = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !59, !phasar.instruction.id !61

Got GEP instruction
getNormalFlowFunction()
  %1 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !phasar.instruction.id !62

Got load instruction
getNormalFlowFunction()
  store i8* %1, i8** %ut1, align 8, !dbg !57, !phasar.instruction.id !63

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !64, metadata !32), !dbg !65, !phasar.instruction.id !66

getNormalFlowFunction()
  %2 = load i8**, i8*** %arr_decay, align 8, !dbg !67, !phasar.instruction.id !68

Got load instruction
getNormalFlowFunction()
  %arrayidx4 = getelementptr inbounds i8*, i8** %2, i64 1, !dbg !67, !phasar.instruction.id !69

Got GEP instruction
getNormalFlowFunction()
  %3 = load i8*, i8** %arrayidx4, align 8, !dbg !67, !phasar.instruction.id !70

Got load instruction
getNormalFlowFunction()
  store i8* %3, i8** %t1, align 8, !dbg !65, !phasar.instruction.id !71

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %arr_decay = alloca i8**, align 8, !phasar.instruction.id !14
[TRACK]   %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !16
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut1, metadata !56, metadata !32), !dbg !57, !phasar.instruction.id !58

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !64, metadata !32), !dbg !65, !phasar.instruction.id !66

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8*** %arr_decay, metadata !45, metadata !32), !dbg !47, !phasar.instruction.id !48

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut1, metadata !56, metadata !32), !dbg !57, !phasar.instruction.id !58

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !64, metadata !32), !dbg !65, !phasar.instruction.id !66

getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !18, metadata !32), !dbg !33, !phasar.instruction.id !34

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8*** %arr_decay, metadata !45, metadata !32), !dbg !47, !phasar.instruction.id !48

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut1, metadata !56, metadata !32), !dbg !57, !phasar.instruction.id !58

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !64, metadata !32), !dbg !65, !phasar.instruction.id !66### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx3 = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !59, !phasar.instruction.id !61, ID: 20 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8** %arraydecay, i8*** %arr_decay, align 8, !dbg !47, !phasar.instruction.id !55, ID: 17 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !18, metadata !32), !dbg !33, !phasar.instruction.id !34, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8*** %arr_decay, metadata !45, metadata !32), !dbg !47, !phasar.instruction.id !48, ID: 13 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !49, !phasar.instruction.id !50, ID: 14 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %strings2 = getelementptr inbounds %struct.s2, %struct.s2* %s21, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings2, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54, ID: 16 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %ut1, metadata !56, metadata !32), !dbg !57, !phasar.instruction.id !58, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

--- IFDS START RESULT RECORD ---
N: %0 = load i8**, i8*** %arr_decay, align 8, !dbg !59, !phasar.instruction.id !60, ID: 19 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !phasar.instruction.id !62, ID: 21 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %ut1, align 8, !dbg !57, !phasar.instruction.id !63, ID: 22 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !64, metadata !32), !dbg !65, !phasar.instruction.id !66, ID: 23 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i8**, i8*** %arr_decay, align 8, !dbg !67, !phasar.instruction.id !68, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

--- IFDS START RESULT RECORD ---
N: %arrayidx4 = getelementptr inbounds i8*, i8** %2, i64 1, !dbg !67, !phasar.instruction.id !69, ID: 25 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %arrayidx4, align 8, !dbg !67, !phasar.instruction.id !70, ID: 26 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %t1, align 8, !dbg !65, !phasar.instruction.id !71, ID: 27 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.i

nstruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	%3 = load i8*, i8** %arrayidx4, align 8, !dbg !67, !phasar.instruction.id !70, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !72, !phasar.instruction.id !73, ID: 28 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !43, !phasar.instruction.id !44, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%strings = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 1, !dbg !41, !phasar.instruction.id !42, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!