PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %rc = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %taint = alloca i32, align 4, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a = alloca i32, align 4, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a5 = alloca i32, align 4, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17

Got store instruction
[TRACK]:i32 0
[TRACK]: srcMemLocation: 0
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %taint, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24

getSummaryFlowFunction()
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26

getNormalFlowFunction()
  store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27

Got store instruction
[TRACK]:  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26
[TRACK]: srcMemLocation: 0
getNormalFlowFunction()
  %0 = load i32, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !29

Got load instruction
getNormalFlowFunction()
  switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31

Got switch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !54, metadata !19), !dbg !55, !phasar.instruction.id !56

getNormalFlowFunction()
  store i32 0, i32* %a5, align 4, !dbg !55, !phasar.instruction.id !57

Got store instruction
[TRACK]:i32 0
[TRACK]: srcMemLocation: 0
getNormalFlowFunction()
  %2 = load i32, i32* %rc, align 4, !dbg !58, !phasar.instruction.id !59

Got load instruction
getCallToRetFlowFunction()
getNormalFlowFunction()
  switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31

Got switch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !19), !dbg !34, !phasar.instruction.id !35

getNormalFlowFunction()
  store i32 1, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36

Got store instruction
[TRACK]:i32 1
[TRACK]: srcMemLocation: 0
getNormalFlowFunction()
  br label %sw.epilog4, !dbg !37, !phasar.instruction.id !38

Got branch instruction
getCallToRetFlowFunction()
getNormalFlowFunction()
  switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31

Got switch instruction
getNormalFlowFunction()
  %1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40

Got load instruction
getNormalFlowFunction()
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !41, !phasar.instruction.id !42

Got switch instruction
getNormalFlowFunction()
  br label %sw.epilog4, !dbg !52, !phasar.instruction.id !53

Got branch instruction
getNormalFlowFunction()
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !41, !phasar.instruction.id !42

Got switch instruction
getNormalFlowFunction()
  store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45

Got store instruction
[TRACK]:i32 1
[TRACK]: srcMemLocation: 0
getNormalFlowFunction()
  br label %sw.epilog, !dbg !46, !phasar.instruction.id !47

Got branch instruction
getNormalFlowFunction()
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !41, !phasar.instruction.id !42

Got switch instruction
getNormalFlowFunction()
  store i32 2, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !49

Got store instruction
[TRACK]:i32 2
[TRACK]: srcMemLocation: 0
getNormalFlowFunction()
  br label %sw.epilog, !dbg !50, !phasar.instruction.id !51

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !54, metadata !19), !dbg !55, !phasar.instruction.id !56

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !19), !dbg !34, !phasar.instruction.id !35

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !54, metadata !19), !dbg !55, !phasar.instruction.id !56

[TRACK]:i32 0
[TRACK]: srcMemLocation: 0
[TRACK]:i32 1
[TRACK]: srcMemLocation: 0
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !54, metadata !19), !dbg !55, !phasar.instruction.id !56

[TRACK]:i32 0
[TRACK]: srcMemLocation: 0
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !54, metadata !19), !dbg !55, !phasar.instruction.id !56

[TRACK]:i32 0
[TRACK]: srcMemLocation: 0
getCallToRetFlowFunction()
[TRACK]:  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26
[TRACK]: srcMemLocation: 0
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !54, metadata !19), !dbg !55, !phasar.instruction.id !56

[TRACK]:i32 0
[TRACK]: srcMemLocation: 0
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !19), !dbg !34, !phasar.instruction.id !35

[TRACK]:i32 1
[TRACK]: srcMemLocation: 0
[TRACK]:i32 1
[TRACK]: srcMemLocation: 0
[TRACK]:i32 2
[TRACK]: srcMemLocation: 0
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21

getCallFlowFunction()
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %taint, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !19), !dbg !34, !phasar.instruction.id !35

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a5, metadata !54, metadata !19), !dbg !55, !phasar.instruction.id !56### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %a5 = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

D:	switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !41, !phasar.instruction.id !42, ID: 17
L:	sw.epilog

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36, ID: 14 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !19), !dbg !34, !phasar.instruction.id !35, ID: 13

--- IFDS START RESULT RECORD ---
N: store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !29, ID: 11 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %taint, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %rc, align 4, !dbg !58, !phasar.instruction.id !59, ID: 25 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 2, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !49, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36, ID: 14
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog4, !dbg !37, !phasar.instruction.id !38, ID: 15 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36, ID: 14
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 16 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

--- IFDS START RESULT RECORD ---
N: switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i32, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !29, ID: 11

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !19), !dbg !34, !phasar.instruction.id !35, ID: 13 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog4, !dbg !52, !phasar.instruction.id !53, ID: 22 in function: main
D:	store i32 2, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !49, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !41, !phasar.instruction.id !42, ID: 17
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

D:	store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !46, !phasar.instruction.id !47, ID: 19 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

D:	switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !41, !phasar.instruction.id !42, ID: 17
L:	sw.epilog

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !50, !phasar.instruction.id !51, ID: 21 in function: main
D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

D:	store i32 2, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !49, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !41, !phasar.instruction.id !42, ID: 17
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !41, !phasar.instruction.id !42, ID: 17 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 16

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !49, ID: 20 in function: main
D:	switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !41, !phasar.instruction.id !42, ID: 17
L:	sw.epilog

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a5, metadata !54, metadata !19), !dbg !55, !phasar.instruction.id !56, ID: 23 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36, ID: 14
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %0, label %sw.epilog4 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !30, !phasar.instruction.id !31, ID: 12
L:	sw.epilog4

D:	store i32 2, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !49, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a5, align 4, !dbg !55, !phasar.instruction.id !57, ID: 24 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36, ID: 14
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 2, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !49, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: ret i32 %2, !dbg !60, !phasar.instruction.id !61, ID: 26 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !34, 

!phasar.instruction.id !36, ID: 14
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %call, i32* %taint, align 4, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%2 = load i32, i32* %rc, align 4, !dbg !58, !phasar.instruction.id !59, ID: 25

D:	store i32 2, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !49, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2


No IFDS report available!