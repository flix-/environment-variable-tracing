PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %u = alloca %union.u1, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !14### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !16, metadata !33), !dbg !34, !phasar.instruction.id !35, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !40, !phasar.instruction.id !41, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6

--- IFDS START RESULT RECORD ---
N: %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !38, !phasar.instruction.id !39, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = bitcast %union.u3* %u2 to i8**, !dbg !42, !phasar.instruction.id !43, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !46, metadata !33), !dbg !47, !phasar.instruction.id !48, ID: 11 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6

--- IFDS START RESULT RECORD ---
N: %taint3 = bitcast %union.u1* %u to i8**, !dbg !49, !phasar.instruction.id !50, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6

D:	store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %taint3, align 8, !dbg !49, !phasar.instruction.id !51, ID: 13 in function: main
D:	%taint3 = bitcast %union.u1* %u to i8**, !dbg !49, !phasar.instruction.id !50, ID: 12

D:	store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6

D:	@zero_value = constant i2 0, al
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550069426-trace.txt
ign 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %tainted, align 8, !dbg !47, !phasar.instruction.id !52, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6

D:	store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%taint3 = bitcast %union.u1* %u to i8**, !dbg !49, !phasar.instruction.id !50, ID: 12

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !53, !phasar.instruction.id !54, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6

D:	store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3


