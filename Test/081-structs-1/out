PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !40, !phasar.instruction.id !41
[TRACK]   %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43
[TRACK]   %a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !15, metadata !28), !dbg !29, !phasar.instruction.id !30, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %foo = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 6 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %a, align 8, !dbg !35, !phasar.instruction.id !36, ID: 7 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 8 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !35, !phasar.instruction.id !36, ID: 7
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %a1, align 8, !dbg !37, !phasar.instruction.id !39, ID: 9 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !35, !phasar.instruction.id !36, ID: 7
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !40, !phasar.instruction.id !41, ID: 10 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !35, !phasar.instruction.id !36, ID: 7
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5

--- IFDS START RESULT RECORD ---
N: %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43, ID: 11 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !35, !phasar.instruction.id !36, ID: 7
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550168582-trace.txt
32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 12 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !35, !phasar.instruction.id !36, ID: 7
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %a3, align 8, !dbg !46, !phasar.instruction.id !47, ID: 13 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !35, !phasar.instruction.id !36, ID: 7
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !48, !phasar.instruction.id !49, ID: 14 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !35, !phasar.instruction.id !36, ID: 7
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !35, !phasar.instruction.id !36, ID: 7
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !40, !phasar.instruction.id !41, ID: 10
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43, ID: 11
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1


