PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %t = alloca i8*, align 8, !phasar.instruction.id !17
[TRACK] Destination:
[TRACK]   %pt = alloca i8**, align 8, !phasar.instruction.id !18
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %pt = alloca i8**, align 8, !phasar.instruction.id !18
[TRACK] Destination:
[TRACK]   %ppt = alloca i8***, align 8, !phasar.instruction.id !19
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %ppt = alloca i8***, align 8, !phasar.instruction.id !19
[TRACK] Destination:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !20### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %u, metadata !23, metadata !26), !dbg !27, !phasar.instruction.id !28, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ppu = alloca i8***, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %pu = alloca i8**, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !22, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ppt = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8** %u, align 8, !dbg !27, !phasar.instruction.id !29, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted = alloca i8*, align 8, !phasar.instruction.id !21, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8*** %pu, metadata !30, metadata !26), !dbg !32, !phasar.instruction.id !33, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8** %u, i8*** %pu, align 8, !dbg !32, !phasar.instruction.id !34, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8**** %ppu, metadata !35, metadata !26), !dbg !37, !phasar.instruction.id !38, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8*** %pu, i8**** %ppu, align 8, !dbg !37, !phasar.instruction.id !39, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t, metadata !40, metadata !26), !dbg !41, !phasar.instruction.id !42, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8*** %pt, metadata !46, metadata !26), !dbg !47, !phasar.instruction.id !48, ID: 21 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8** %t, i8*** %pt, align 8, !dbg !47, !phasar.instruction.id !49, ID: 22 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8**** %ppt, metadata !50, metadata !26), !dbg !51, !phasar.instruction.id !52, ID: 23 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

--- IFDS START RESULT RECORD ---
N: store i8*** %pt, i8**** %ppt, align 8, !dbg !51, !phasar.instruction.id !53, ID: 24 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !54, metadata !26), !dbg !55, !phasar.instruction.id !56, ID: 25 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%ppt = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8***, i8**** %ppt, align 8, !dbg !57, !phasar.instruction.id !58, ID: 26 in function: main
D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%ppt = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

--- IFDS START RESULT RECORD ---
N: %1 = load i8**, i8*** %0, align 8, !dbg !59, !phasar.instruction.id !60, ID: 27 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%ppt = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	%0 = load i8***, i8**** %ppt, align 8, !dbg !57, !phasar.instruction.id !58, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %1, align 8, !dbg !61, !phasar.instruction.id !62, ID: 28 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8**, i8*** %0, align 8, !dbg !59, !phasar.instruction.id !60, ID: 27

D:	%0 = load i8***, i8**** %ppt, align 8, !dbg !57, !phasar.instruction.id !58, ID: 26

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%ppt = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %tainted, align 8, !dbg !55, !phasar.instruction.id !63, ID: 29 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%ppt = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	%0 = load i8***, i8**** %ppt, align 8, !dbg !57, !phasar.instruction.id !58, ID: 26

D:	%1 = load i8**, i8*** %0, align 8, !dbg !59, !phasar.instruction.id !60, ID: 27

D:	%2 = load i8*, i8** %1, align 8, !dbg !61, !phasar.instruction.id !62, ID: 28

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load i8***, i8**** %ppu, align 8, !dbg !64, !phasar.instruction.id !65, ID: 30 in function: main
D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%ppt = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

--- IFDS START RESULT RECORD ---
N: store i8*** %3, i8**** %ppt, align 8, !dbg !66, !phasar.instruction.id !67, ID: 31 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%ppt = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !68, metadata !26), !dbg !69, !phasar.instruction.id !70, ID: 32 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9

--- IFDS START RESULT RECORD ---
N: %4 = load i8***, i8**** %ppt, align 8, !dbg !71, !phasar.instruction.id !72, ID: 33 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = load i8**, i8*** %4, align 8, !dbg !73, !phasar.instruction.id !74, ID: 34 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %6 = load i8*, i8** %5, align 8, !dbg !75, !phasar.instruction.id !76, ID: 35 in function: main
D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

--- IFDS START RESULT RECORD ---
N: store i8* %6, i8** %not_tainted, align 8, !dbg !69, !phasar.instruction.id !77, ID: 36 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT 
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549913767-trace.txt
RECORD ---
N: ret i32 0, !dbg !78, !phasar.instruction.id !79, ID: 37 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9

D:	store i8* %call, i8** %t, align 8, !dbg !41, !phasar.instruction.id !45, ID: 20
A:	%pt = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1


