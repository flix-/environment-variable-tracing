PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %d = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %e = alloca i32, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %c = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !25, metadata !26), !dbg !27, !phasar.instruction.id !28, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !24, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !29, metadata !26), !dbg !30, !phasar.instruction.id !31, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut = alloca i32, align 4, !phasar.instruction.id !23, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %end2 = alloca i32, align 4, !phasar.instruction.id !22, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %c, metadata !32, metadata !26), !dbg !33, !phasar.instruction.id !34, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %d, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %e, metadata !38, metadata !26), !dbg !39, !phasar.instruction.id !40, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %a, align 4, !dbg !41, !phasar.instruction.id !43, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %0, 0, !dbg !41, !phasar.instruction.id !44, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !154, !phasar.instruction.id !155, ID: 75 in function: main
D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.end27, !dbg !45, !phasar.instruction.id !46, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %do.body, !dbg !47, !llvm.loop !49, !phasar.instruction.id !51, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23 in function: main
D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

--- IFDS START RESULT RECORD ---
N: %tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26 in function: main
D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: %4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35 in function: main
D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

--- IFDS START RESULT RECORD ---
N: %tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27 in function: main
D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29 in function: main
D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

--- IFDS START RESULT RECORD ---
N: br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28 in function: main
D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

--- IFDS START RESULT RECORD ---
N: %tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

--- IFDS START RESULT RECORD ---
N: %3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

--- IFDS START RESULT RECORD ---
N: %tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33 in function: main
D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

--- IFDS START RESULT RECORD ---
N: %5 = load i32, i32* %a, align 4, !dbg !79, !phasar.instruction.id !82, ID: 38 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

--- IFDS START RESULT RECORD ---
N: br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34 in function: main
D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: %tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

--- IFDS START RESULT RECORD ---
N: %6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

--- IFDS START RESULT RECORD ---
N: br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: %tobool9 = icmp ne i32 %5, 0, !dbg !79, !phasar.instruction.id !83, ID: 39 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%5 = load i32, i32* %a, align 4, !dbg !79, !phasar.instruction.id !82, ID: 38

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

--- IFDS START RESULT RECORD ---
N: br label %if.end27, !dbg !148, !phasar.instruction.id !149, ID: 72 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end, !phasar.instruction.id !105, ID: 48 in function: main
D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40 in function: main
D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool9 = icmp ne i32 %5, 0, !dbg !79, !phasar.instruction.id !83, ID: 39

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	%5 = load i32, i32* %a, align 4, !dbg !79, !phasar.instruction.id !82, ID: 38

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

--- IFDS START RESULT RECORD ---
N: br label %do.body11, !dbg !86, !llvm.loop !88, !phasar.instruction.id !90, ID: 41 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%tobool9 = icmp ne i32 %5, 0, !dbg !79, !phasar.instruction.id !83, ID: 39

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	%5 = load i32, i32* %a, align 4, !dbg !79, !phasar.instruction.id !82, ID: 38

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42 in function: main
D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool9 = icmp ne i32 %5, 0, !dbg !79, !phasar.instruction.id !83, ID: 39

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	%5 = load i32, i32* %a, align 4, !dbg !79, !phasar.instruction.id !82, ID: 38

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43 in function: main
D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool9 = icmp ne i32 %5, 0, !dbg !79, !phasar.instruction.id !83, ID: 39

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	%5 = load i32, i32* %a, align 4, !dbg !79, !phasar.instruction.id !82, ID: 38

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: br label %do.end, !dbg !96, !phasar.instruction.id !97, ID: 44 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

--- IFDS START RESULT RECORD ---
N: br label %if.end, !dbg !98, !phasar.instruction.id !99, ID: 45 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46 in function: main
D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool9 = icmp ne i32 %5, 0, !dbg !79, !phasar.instruction.id !83, ID: 39

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%5 = load i32, i32* %a, align 4, !dbg !79, !phasar.instruction.id !82, ID: 38

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47 in function: main
D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	%tobool9 = icmp ne i32 %5, 0, !dbg !79, !phasar.instruction.id !83, ID: 39

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%5 = load i32, i32* %a, align 4, !dbg !79, !phasar.instruction.id !82, ID: 38

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: br label %if.end23, !dbg !106, !phasar.instruction.id !107, ID: 49 in function: main
D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

--- IFDS START RESULT RECORD ---
N: %tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51 in function: main
D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

--- IFDS START RESULT RECORD ---
N: %9 = load i32, i32* %a, align 4, !dbg !128, !phasar.instruction.id !129, ID: 60 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	%8 = load i32, i32* %c, align 4, !dbg !119, !phasar.instruction.id !120, ID: 56

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	%tobool19 = icmp ne i32 %8, 0, !dbg !119, !phasar.instruction.id !121, ID: 57

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

--- IFDS START RESULT RECORD ---
N: %7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

--- IFDS START RESULT RECORD ---
N: br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: %tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: %8 = load i32, i32* %c, align 4, !dbg !119, !phasar.instruction.id !120, ID: 56 in function: main
D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55 in function: main
D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

--- IFDS START RESULT RECORD ---
N: %tobool19 = icmp ne i32 %8, 0, !dbg !119, !phasar.instruction.id !121, ID: 57 in function: main
D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	%8 = load i32, i32* %c, align 4, !dbg !119, !phasar.instruction.id !120, ID: 56

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: br label %if.end23, !phasar.instruction.id !133, ID: 63 in function: main
D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	%8 = load i32, i32* %c, align 4, !dbg !119, !phasar.instruction.id !120, ID: 56

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	%tobool19 = icmp ne i32 %8, 0, !dbg !119, !phasar.instruction.id !121, ID: 57

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

--- IFDS START RESULT RECORD ---
N: br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	%8 = load i32, i32* %c, align 4, !dbg !119, !phasar.instruction.id !120, ID: 56

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	%tobool19 = icmp ne i32 %8, 0, !dbg !119, !phasar.instruction.id !121, ID: 57

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	%8 = load i32, i32* %c, align 4, !dbg !119, !phasar.instruction.id !120, ID: 56

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	%tobool19 = icmp ne i32 %8, 0, !dbg !119, !phasar.instruction.id !121, ID: 57

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61 in function: main
D:	%8 = load i32, i32* %c, align 4, !dbg !119, !phasar.instruction.id !120, ID: 56

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	%9 = load i32, i32* %a, align 4, !dbg !128, !phasar.instruction.id !129, ID: 60

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	%tobool19 = icmp ne i32 %8, 0, !dbg !119, !phasar.instruction.id !121, ID: 57

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

--- IFDS START RESULT RECORD ---
N: br label %if.end22, !dbg !131, !phasar.instruction.id !132, ID: 62 in function: main
D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	%8 = load i32, i32* %c, align 4, !dbg !119, !phasar.instruction.id !120, ID: 56

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	%tobool19 = icmp ne i32 %8, 0, !dbg !119, !phasar.instruction.id !121, ID: 57

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !108, !phasar.instruction.id !111, ID: 51

D:	%7 = load i32, i32* %b, align 4, !dbg !114, !phasar.instruction.id !115, ID: 53

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	%tobool17 = icmp ne i32 %7, 0, !dbg !114, !phasar.instruction.id !116, ID: 54

D:	%8 = load i32, i32* %c, align 4, !dbg !119, !phasar.instruction.id !120, ID: 56

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	%tobool19 = icmp ne i32 %8, 0, !dbg !119, !phasar.instruction.id !121, ID: 57

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	%tobool1 = icmp ne i8* %call, null, !dbg !52, !phasar.instruction.id !56, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	%1 = load i32, i32* %a, align 4, !dbg !59, !phasar.instruction.id !60, ID: 26

D:	%4 = load i32, i32* %e, align 4, !dbg !74, !phasar.instruction.id !75, ID: 35

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%tobool2 = icmp ne i32 %1, 0, !dbg !59, !phasar.instruction.id !61, ID: 27

D:	%2 = load i32, i32* %b, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	%3 = load i32, i32* %c, align 4, !dbg !69, !phasar.instruction.id !70, ID: 32

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	%tobool6 = icmp ne i32 %3, 0, !dbg !69, !phasar.instruction.id !71, ID: 33

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	%tobool7 = icmp ne i32 %4, 0, !dbg !74, !phasar.instruction.id !76, ID: 36

D:	%6 = load i32, i32* %a, align 4, !dbg !108, !phasar.instruction.id !110, ID: 50

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	%tobool4 = icmp ne i32 %2, 0, !dbg !64, !phasar.instruction.id !66, ID: 30

--- IFDS START RESULT RECORD ---
N: br label %do.cond, !dbg !138, !phasar.instruction.id !139, ID: 66 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: %call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67 in function: main
D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

--- IFDS START RESULT RECORD ---
N: %tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %end2, metadata !144, metadata !26), !dbg !145, !phasar.instruction.id !146, ID: 70 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !112, !phasar.instruction.id !113, ID: 52

D:	br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !117, !phasar.instruction.id !118, ID: 55

D:	br i1 %tobool19, label %if.then20, label %if.end22, !dbg !122, !phasar.instruction.id !123, ID: 58

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	br i1 %tobool25, label %do.body, label %do.end26, !dbg !138, !llvm.loop !49, !phasar.instruction.id !143, ID: 69

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !57, !phasar.instruction.id !58, ID: 25

D:	br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false, !dbg !62, !phasar.instruction.id !63, ID: 28

D:	br i1 %tobool4, label %land.lhs.true5, label %lor.lhs.false, !dbg !67, !phasar.instruction.id !68, ID: 31

D:	br i1 %tobool6, label %if.then8, label %lor.lhs.false, !dbg !72, !phasar.instruction.id !73, ID: 34

D:	br i1 %tobool7, label %if.then8, label %if.else14, !dbg !77, !phasar.instruction.id !78, ID: 37

D:	br i1 %tobool9, label %if.then10, label %if.else, !dbg !84, !phasar.instruction.id !85, ID: 40

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %end2, align 4, !dbg !145, !phasar.instruction.id !147, ID: 71 in function: main
D:	%tobool25 = icmp ne i8* %call24, null, !dbg !138, !phasar.instruction.id !142, ID: 68

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, [TRACK] Checking end of branch bb for: do.body
[TRACK] End of branch bb: if.end23
[TRACK] Checking end of branch bb for: land.lhs.true
[TRACK] End of branch bb: if.end23
[TRACK] Checking end of branch bb for: land.lhs.true3
[TRACK] End of branch bb: if.end23
[TRACK] Checking end of branch bb for: land.lhs.true5
[TRACK] End of branch bb: if.end23
[TRACK] Checking end of branch bb for: if.then8
[TRACK] End of branch bb: if.end
[TRACK] Checking end of branch bb for: lor.lhs.false
[TRACK] End of branch bb: if.end23
[TRACK] Checking end of branch bb for: if.else14
[TRACK] End of branch bb: if.end22
[TRACK] Checking end of branch bb for: lor.lhs.false16
[TRACK] End of branch bb: if.end22
[TRACK] Checking end of branch bb for: lor.lhs.false18
[TRACK] End of branch bb: if.end22
[TRACK] Checking end of branch bb for: do.cond
[TRACK] End of branch bb: do.end26
[TRACK] Checking end of branch bb for: do.cond
[TRACK] End of branch bb: do.end26
[TRACK] Checking end of branch bb for: lor.lhs.false18
[TRACK] End of branch bb: if.end22
[TRACK] Checking end of branch bb for: lor.lhs.false16
[TRACK] End of branch bb: if.end22
[TRACK] Checking end of branch bb for: if.else14
[TRACK] End of branch bb: if.end22
[TRACK] Checking end of branch bb for: lor.lhs.false
[TRACK] End of branch bb: if.end23
[TRACK] Checking end of branch bb for: if.then8
[TRACK] End of branch bb: if.end
[TRACK] Checking end of branch bb for: land.lhs.true5
[TRACK] End of branch bb: if.end23
[TRACK] Checking end of branch bb for: land.lhs.true3
[TRACK] End of branch bb: if.end23
[TRACK] Checking end of branch bb for: land.lhs.true
[TRACK] End of branch bb: if.end23
[TRACK] Checking end of branch bb for: do.body
[TRACK] End of branch bb: if.end23
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550069413-trace.txt
!phasar.instruction.id !127, ID: 59

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut, metadata !150, metadata !26), !dbg !151, !phasar.instruction.id !152, ID: 73 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %ut, align 4, !dbg !151, !phasar.instruction.id !153, ID: 74 in function: main
D:	%call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !140, !phasar.instruction.id !141, ID: 67

D:	store i32 1, i32* %end1, align 4, !dbg !135, !phasar.instruction.id !137, ID: 65
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !134, metadata !26), !dbg !135, !phasar.instruction.id !136, ID: 64

D:	store i32 %9, i32* %d21, align 4, !dbg !126, !phasar.instruction.id !130, ID: 61
A:	%d21 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %d21, metadata !124, metadata !26), !dbg !126, !phasar.instruction.id !127, ID: 59

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %b13, align 4, !dbg !102, !phasar.instruction.id !104, ID: 47
A:	%b13 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b13, metadata !100, metadata !26), !dbg !102, !phasar.instruction.id !103, ID: 46

D:	store i32 0, i32* %a12, align 4, !dbg !93, !phasar.instruction.id !95, ID: 43
A:	%a12 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %a12, metadata !91, metadata !26), !dbg !93, !phasar.instruction.id !94, ID: 42

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !52, !phasar.instruction.id !55, ID: 23


