PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s = alloca [42 x i8*], align 16, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !14

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata [42 x i8*]* %s, metadata !47, metadata !19), !dbg !51, !phasar.instruction.id !52

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25

getNormalFlowFunction()
  %arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27

Got GEP instruction
getNormalFlowFunction()
  store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29

Got store instruction
getNormalFlowFunction()
  %arraydecay = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31

Got GEP instruction
getSummaryFlowFunction()
  call void @foo(i8** %arraydecay), !dbg !32, !phasar.instruction.id !33

getCallFlowFunction()
  call void @foo(i8** %arraydecay), !dbg !32, !phasar.instruction.id !33

[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s = alloca [42 x i8*], align 16, !phasar.instruction.id !13
[TRACK]   %arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27
[TRACK] Destination:
[TRACK] i8** %s
[TRACK]   %arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27
getNormalFlowFunction()
  %s.addr = alloca i8**, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %t1 = alloca i8*, align 8, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %nt1 = alloca i8*, align 8, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i8** %s, i8*** %s.addr, align 8, !phasar.instruction.id !17

Got store instruction
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] i8** %s
[TRACK]   %arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27
[TRACK] Destination:
[TRACK]   %s.addr = alloca i8**, align 8, !phasar.instruction.id !14
[TRACK]   %arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8*** %s.addr, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24

getNormalFlowFunction()
  %0 = load i8**, i8*** %s.addr, align 8, !dbg !25, !phasar.instruction.id !26

Got load instruction
getNormalFlowFunction()
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 1, !dbg !25, !phasar.instruction.id !27

Got GEP instruction
getNormalFlowFunction()
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !25, !phasar.instruction.id !28

Got load instruction
getNormalFlowFunction()
  store i8* %1, i8** %t1, align 8, !dbg !23, !phasar.instruction.id !29

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s.addr = alloca i8**, align 8, !phasar.instruction.id !14
[TRACK]   %arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !15
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %nt1, metadata !30, metadata !19), !dbg !31, !phasar.instruction.id !32

getNormalFlowFunction()
  %2 = load i8**, i8*** %s.addr, align 8, !dbg !33, !phasar.instruction.id !34

Got load instruction
getNormalFlowFunction()
  %arrayidx1 = getelementptr inbounds i8*, i8** %2, i64 2, !dbg !33, !phasar.instruction.id !35

Got GEP instruction
getNormalFlowFunction()
  %3 = load i8*, i8** %arrayidx1, align 8, !dbg !33, !phasar.instruction.id !36

Got load instruction
getNormalFlowFunction()
  store i8* %3, i8** %nt1, align 8, !dbg !31, !phasar.instruction.id !37

Got store instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %nt1, metadata !30, metadata !19), !dbg !31, !phasar.instruction.id !32

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @foo(i8** %arraydecay), !dbg !32, !phasar.instruction.id !33

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8*** %s.addr, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %nt1, metadata !30, metadata !19), !dbg !31, !phasar.instruction.id !32

getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata [42 x i8*]* %s, metadata !47, metadata !19), !dbg !51, !phasar.instruction.id !52

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8*** %s.addr, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %nt1, metadata !30, metadata !19), !dbg !31, !phasar.instruction.id !32

[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s = alloca [42 x i8*], align 16, !phasar.instruction.id !13
[TRACK]   %arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27
[TRACK] Destination:
[TRACK] i8** %s
[TRACK]   %arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1 in function: foo
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	i8** %s, ID: foo.0
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8**, i8*** %s.addr, align 8, !dbg !25, !phasar.instruction.id !26, ID: 7 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: %nt1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	i8** %s, ID: foo.0
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %nt1, align 8, !dbg !31, !phasar.instruction.id !37, ID: 15 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: %arrayidx1 = getelementptr inbounds i8*, i8** %2, i64 2, !dbg !33, !phasar.instruction.id !35, ID: 13 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8*** %s.addr, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 5 in function: foo
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %t1, align 8, !dbg !23, !phasar.instruction.id !29, ID: 10 in function: foo
D:	%1 = load i8*, i8** %arrayidx, align 8, !dbg !25, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: %arrayidx = getelementptr inbounds i8*, i8** %0, i64 1, !dbg !25, !phasar.instruction.id !27, ID: 8 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: store i8** %s, i8*** %s.addr, align 8, !phasar.instruction.id !17, ID: 4 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	i8** %s, ID: foo.0
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %arrayidx, align 8, !dbg !25, !phasar.instruction.id !28, ID: 9 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24, ID: 6 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2 in function: foo
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	i8** %s, ID: foo.0
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %nt1, metadata !30, metadata !19), !dbg !31, !phasar.instruction.id !32, ID: 11 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: %2 = load i8**, i8*** %s.addr, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %arrayidx1, align 8, !dbg !33, !phasar.instruction.id !36, ID: 14 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !38, !phasar.instruction.id !39, ID: 16 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a
rrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s.addr = alloca i8**, align 8, !phasar.instruction.id !14, ID: 1
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: %s = alloca [42 x i8*], align 16, !phasar.instruction.id !13, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !14, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata [42 x i8*]* %s, metadata !47, metadata !19), !dbg !51, !phasar.instruction.id !52, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25, ID: 21

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25, ID: 21

--- IFDS START RESULT RECORD ---
N: %arraydecay = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s = alloca [42 x i8*], align 16, !phasar.instruction.id !13, ID: 18
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: call void @foo(i8** %arraydecay), !dbg !32, !phasar.instruction.id !33, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s = alloca [42 x i8*], align 16, !phasar.instruction.id !13, ID: 18
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !34, !phasar.instruction.id !35, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !28, !phasar.instruction.id !29, ID: 23
A:	%s = alloca [42 x i8*], align 16, !phasar.instruction.id !13, ID: 18
A:	%arrayidx = getelementptr inbounds [42 x i8*], [42 x i8*]* %s, i64 0, i64 1, !dbg !26, !phasar.instruction.id !27, ID: 22


No IFDS report available!