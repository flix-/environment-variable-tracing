PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
[TRACK]   %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Destination:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46
[TRACK]   %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48
[TRACK]   %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50
[TRACK]   %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46
[TRACK]   %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48
[TRACK]   %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50
[TRACK]   %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52
[TRACK] Destination:
[TRACK]   %a4 = alloca i8*, align 8, !phasar.instruction.id !15### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11

--- IFDS START RESULT RECORD ---
N: %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !17, metadata !33), !dbg !34, !phasar.instruction.id !35, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43, ID: 10 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

--- IFDS START RESULT RECORD ---
N: %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

--- IFDS START RESULT RECORD ---
N: %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %a4, metadata !55, metadata !33), !dbg !56, !phasar.instruction.id !57, ID: 17 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b5 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !58, !phasar.instruction.id !59, ID: 18 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a6 = getelementptr inbounds %struct.b, %struct.b* %b5, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61, ID: 19 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

--- IFDS START RESULT RECORD ---
N: %arrayidx7 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a6, i64 0, i64 0, !dbg !62, !phasar.instruction.id !63, ID: 20 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a8 = getelementptr inbounds %struct.c, %struct.c* %arrayidx7, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65, ID: 21 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

--- IFDS START RESULT RECORD ---
N: %b9 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !68, !phasar.instruction.id !69, ID: 24 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a10 = getelementptr inbounds %struct.b, %struct.b* %b9, i32 0, i32 0, !dbg !70, !phasar.instruction.id !71, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %arrayidx11 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a10, i64 0, i64 0, !dbg !72, !phasar.instruction.id !73, ID: 26 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a12 = getelementptr inbounds %struct.c, %struct.c* %arrayidx11, i32 0, i32 0, !dbg !74, !phasar.instruction.id !75, ID: 27 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %a12, align 8, !dbg !76, !phasar.instruction.id !77, ID: 28 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

--- IFDS START RESULT RECORD ---
N: %b13 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !78, !phasar.instruction.id !79, ID: 29 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a14 = getelementptr inbounds %struct.b, %struct.b* %b13, i32 0, i32 0, !dbg !80, !phasar.instruction.id !81, ID: 30 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx15 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a14, i64 0, i64 0
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549710489-trace.txt
, !dbg !82, !phasar.instruction.id !83, ID: 31 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a16 = getelementptr inbounds %struct.c, %struct.c* %arrayidx15, i32 0, i32 0, !dbg !84, !phasar.instruction.id !85, ID: 32 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %a16, align 8, !dbg !84, !phasar.instruction.id !86, ID: 33 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %a4, align 8, !dbg !87, !phasar.instruction.id !88, ID: 34 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !89, !phasar.instruction.id !90, ID: 35 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1


