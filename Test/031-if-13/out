PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %rc = alloca i32, align 4, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %t1 = alloca i8*, align 8, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %is_env_set = alloca i32, align 4, !phasar.instruction.id !17

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a = alloca i32, align 4, !phasar.instruction.id !18

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %b = alloca i32, align 4, !phasar.instruction.id !19

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a4 = alloca i32, align 4, !phasar.instruction.id !20

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !21

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !26, metadata !23), !dbg !29, !phasar.instruction.id !30

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32

getNormalFlowFunction()
  store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %is_env_set, metadata !34, metadata !23), !dbg !35, !phasar.instruction.id !36

getNormalFlowFunction()
  %0 = load i8*, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38

Got load instruction
getNormalFlowFunction()
  %cmp = icmp ne i8* %0, null, !dbg !39, !phasar.instruction.id !40

Got operands checking instruction (icmp)
getNormalFlowFunction()
  %conv = zext i1 %cmp to i32, !dbg !39, !phasar.instruction.id !41

Got operands checking instruction (zext)
getNormalFlowFunction()
  store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42

Got store instruction
getNormalFlowFunction()
  %1 = load i32, i32* %is_env_set, align 4, !dbg !43, !phasar.instruction.id !45

Got load instruction
getNormalFlowFunction()
  %tobool = icmp ne i32 %1, 0, !dbg !43, !phasar.instruction.id !46

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52

getNormalFlowFunction()
  store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53

Got store instruction
getNormalFlowFunction()
  %2 = load i32, i32* %is_env_set, align 4, !dbg !54, !phasar.instruction.id !56

Got load instruction
getNormalFlowFunction()
  %tobool1 = icmp ne i32 %2, 0, !dbg !54, !phasar.instruction.id !57

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !58, !phasar.instruction.id !59

Got branch instruction
getNormalFlowFunction()
  store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62

Got store instruction
getNormalFlowFunction()
  br label %if.end, !dbg !63, !phasar.instruction.id !64

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71

getNormalFlowFunction()
  store i32 0, i32* %b, align 4, !dbg !70, !phasar.instruction.id !72

Got store instruction
getNormalFlowFunction()
  br label %if.end3, !dbg !73, !phasar.instruction.id !74

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77

getNormalFlowFunction()
  store i32 0, i32* %a4, align 4, !dbg !76, !phasar.instruction.id !78

Got store instruction
getNormalFlowFunction()
  %3 = load i32, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !80

Got load instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getNormalFlowFunction()
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !58, !phasar.instruction.id !59

Got branch instruction
getNormalFlowFunction()
  store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67

Got store instruction
getNormalFlowFunction()
  br label %if.end, !phasar.instruction.id !68

Got branch instruction
getCallToRetFlowFunction()
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %is_env_set, metadata !34, metadata !23), !dbg !35, !phasar.instruction.id !36

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !26, metadata !23), !dbg !29, !phasar.instruction.id !30

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %is_env_set, metadata !34, metadata !23), !dbg !35, !phasar.instruction.id !36

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !19, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22 in function: main
D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52, ID: 21

--- IFDS START RESULT RECORD ---
N: store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	%cmp = icmp ne i8* %0, null, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	%conv = zext i1 %cmp to i32, !dbg !39, !phasar.instruction.id !41, ID: 16

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !21, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !26, metadata !23), !dbg !29, !phasar.instruction.id !30, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a4 = alloca i32, align 4, !phasar.instruction.id !20, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %is_env_set, metadata !34, metadata !23), !dbg !35, !phasar.instruction.id !36, ID: 13 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 14 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp ne i8* %0, null, !dbg !39, !phasar.instruction.id !40, ID: 15 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 14

--- IFDS START RESULT RECORD ---
N: %conv = zext i1 %cmp to i32, !dbg !39, !phasar.instruction.id !41, ID: 16 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	%cmp = icmp ne i8* %0, null, !dbg !39, !phasar.instruction.id !40, ID: 15

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %is_env_set, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %1, 0, !dbg !43, !phasar.instruction.id !46, ID: 19 in function: main
D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %is_env_set, align 4, !dbg !54, !phasar.instruction.id !56, ID: 23 in function: main
D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

--- IFDS START RESULT RECORD ---
N: %3 = load i32, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !80, ID: 35 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %b, align 4, !dbg !70, !phasar.instruction.id !72, ID: 31
A:	%b = alloca i32, align 4, !phasar.instruction.id !19, ID: 6

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20 in function: main
D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	%tobool = icmp ne i32 %1, 0, !dbg !43, !phasar.instruction.id !46, ID: 19

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !49, metadata !23), !dbg !51, !phasar.instruction.id !52, ID: 21 in function: main
D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

--- IFDS START RESULT RECORD ---
N: %tobool1 = icmp ne i32 %2, 0, !dbg !54, !phasar.instruction.id !57, ID: 24 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%2 = load i32, i32* %is_env_set, align 4, !dbg !54, !phasar.instruction.id !56, ID: 23

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

--- IFDS START RESULT RECORD ---
N: br label %if.end3, !dbg !73, !phasar.instruction.id !74, ID: 32 in function: main
D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %b, align 4, !dbg !70, !phasar.instruction.id !72, ID: 31
A:	%b = alloca i32, align 4, !phasar.instruction.id !19, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end, !phasar.instruction.id !68, ID: 29 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	br i1 %tobool1, label %if.then2, label %if.else, !dbg !58, !phasar.instruction.id !59, ID: 25
L:	if.end

D:	store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: br i1 %tobool1, label %if.then2, label %if.else, !dbg !58, !phasar.instruction.id !59, ID: 25 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	%tobool1 = icmp ne i32 %2, 0, !dbg !54, !phasar.instruction.id !57, ID: 24

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	%2 = load i32, i32* %is_env_set, align 4, !dbg !54, !phasar.instruction.id !56, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool1, label %if.then2, label %if.else, !dbg !58, !phasar.instruction.id !59, ID: 25
L:	if.end

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	%2 = load i32, i32* %is_env_set, align 4, !dbg !54, !phasar.instruction.id !56, ID: 23

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

--- IFDS START RESULT RECORD ---
N: br label %if.end, !dbg !63, !phasar.instruction.id !64, ID: 27 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	br i1 %tobool1, label %if.then2, label %if.else, !dbg !58, !phasar.instruction.id !59, ID: 25
L:	if.end

D:	store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 28 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	br i1 %tobool1, label %if.then2, label %if.else, !dbg !58, !phasar.instruction.id !59, ID: 25
L:	if.end

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	%2 = load i32, i32* %is_env_set, align 4, !dbg !54, !phasar.instruction.id !56, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71, ID: 30 in function: main
D:	store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	br i1 %tobool1, label %if.then2, label %if.else, !dbg !58, !phasar.instruction.id !59, ID: 25
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %b, align 4, !dbg !70, !phasar.instruction.id !72, ID: 31 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a4, metadata !75, metadata !23), !dbg !76, !phasar.instruction.id !77, ID: 33 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %b, align 4, !dbg !70, !phasar.instruction.id !72, ID: 31
A:	%b = alloca i32, align 4, !phasar.instruction.id !19, ID: 6

D:	store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	br i1 %tobool, label %if.then, label %if.end3, !dbg !47, !phasar.instruction.id !48, ID: 20
L:	if.end3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a4, align 4, !dbg !76, !phasar.instruction.id !78, ID: 34 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %b, align 4, !dbg !70, !phasar.instruction

.id !72, ID: 31
A:	%b = alloca i32, align 4, !phasar.instruction.id !19, ID: 6

D:	store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !43, !phasar.instruction.id !45, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

--- IFDS START RESULT RECORD ---
N: ret i32 %3, !dbg !81, !phasar.instruction.id !82, ID: 36 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !51, !phasar.instruction.id !53, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !35, !phasar.instruction.id !42, ID: 17
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %t1, align 8, !dbg !29, !phasar.instruction.id !33, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%3 = load i32, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !80, ID: 35

D:	store i32 1, i32* %rc, align 4, !dbg !60, !phasar.instruction.id !62, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %b, align 4, !dbg !70, !phasar.instruction.id !72, ID: 31
A:	%b = alloca i32, align 4, !phasar.instruction.id !19, ID: 6


No IFDS report available!