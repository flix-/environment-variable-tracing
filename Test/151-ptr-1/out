0 2019-Jan-05 22:32:46.184299 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 22:32:46.184754 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 22:32:46.185099 - [INFO] No configuration file is used.
3 2019-Jan-05 22:32:46.185175 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 22:32:46.185271 - [INFO] Check program options for logical errors.
5 2019-Jan-05 22:32:46.185361 - [INFO] Set-up IR database.
6 2019-Jan-05 22:32:46.190023 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 22:32:46.190136 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 22:32:46.190198 - [INFO] 	main.ll
9 2019-Jan-05 22:32:46.190257 - [INFO] Check for chosen entry points.
10 2019-Jan-05 22:32:46.190318 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 22:32:46.190377 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 22:32:46.190437 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 22:32:46.190785 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 22:32:46.190916 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 22:32:46.191238 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 22:32:46.191304 - [INFO] Allocated Types    : 3
17 2019-Jan-05 22:32:46.191368 - [INFO] Allocation Sites   : 4
18 2019-Jan-05 22:32:46.191426 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 22:32:46.191483 - [INFO] Calls Sites        : 4
20 2019-Jan-05 22:32:46.191541 - [INFO] Functions          : 3
21 2019-Jan-05 22:32:46.191598 - [INFO] Globals            : 1
22 2019-Jan-05 22:32:46.191656 - [INFO] Global Pointer     : 1
23 2019-Jan-05 22:32:46.191713 - [INFO] Instructions       : 16
24 2019-Jan-05 22:32:46.191771 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 22:32:46.191828 - [INFO] Store Instructions : 5
26 2019-Jan-05 22:32:46.191885 - [INFO]  
27 2019-Jan-05 22:32:46.191960 - [INFO]   i32
28 2019-Jan-05 22:32:46.192023 - [INFO]   i8*
29 2019-Jan-05 22:32:46.192084 - [INFO]   i8**
30 2019-Jan-05 22:32:46.192507 - [DEBUG] Analyzing function: main
31 2019-Jan-05 22:32:46.193661 - [INFO] Reconstruct the class hierarchy.
32 2019-Jan-05 22:32:46.193730 - [INFO] Construct type hierarchy
33 2019-Jan-05 22:32:46.193791 - [DEBUG] Analyse types in module: main.ll
34 2019-Jan-05 22:32:46.193947 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2019-Jan-05 22:32:46.194016 - [INFO] Reconstruction of class hierarchy completed.
36 2019-Jan-05 22:32:46.194078 - [INFO] Starting CallGraphAnalysisType: OTF
37 2019-Jan-05 22:32:46.194208 - [DEBUG] Walking in function: main
38 2019-Jan-05 22:32:46.194295 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %a, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
39 2019-Jan-05 22:32:46.194634 - [DEBUG] Found 1 possible target(s)
40 2019-Jan-05 22:32:46.194694 - [DEBUG] Target name: llvm.dbg.declare
41 2019-Jan-05 22:32:46.194776 - [DEBUG] Walking in function: llvm.dbg.declare
42 2019-Jan-05 22:32:46.194839 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2019-Jan-05 22:32:46.194903 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
44 2019-Jan-05 22:32:46.195178 - [DEBUG] Found 1 possible target(s)
45 2019-Jan-05 22:32:46.195237 - [DEBUG] Target name: getenv
46 2019-Jan-05 22:32:46.195317 - [DEBUG] Walking in function: getenv
47 2019-Jan-05 22:32:46.195379 - [DEBUG] Function already visited or only declaration: getenv
48 2019-Jan-05 22:32:46.195442 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29, ID: 9
49 2019-Jan-05 22:32:46.195676 - [DEBUG] Found 1 possible target(s)
50 2019-Jan-05 22:32:46.195735 - [DEBUG] Target name: llvm.dbg.declare
51 2019-Jan-05 22:32:46.195809 - [DEBUG] Walking in function: llvm.dbg.declare
52 2019-Jan-05 22:32:46.195872 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2019-Jan-05 22:32:46.195953 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37, ID: 13
54 2019-Jan-05 22:32:46.196185 - [DEBUG] Found 1 possible target(s)
55 2019-Jan-05 22:32:46.196244 - [DEBUG] Target name: llvm.dbg.declare
56 2019-Jan-05 22:32:46.196319 - [DEBUG] Walking in function: llvm.dbg.declare
57 2019-Jan-05 22:32:46.196381 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2019-Jan-05 22:32:46.196443 - [INFO] Call graph has been constructed
59 2019-Jan-05 22:32:46.196505 - [INFO] Performing analysis: plugin
60 2019-Jan-05 22:32:46.196572 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/MonoIntraEnvironmentVariableTracing/libMonoIntraEnvironmentVariableTracing.so'
61 2019-Jan-05 22:32:46.197081 - [INFO] Solving plugin: monoIntraEnvironmentVariableTracing
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/MonoIntraEnvironmentVariableTracing/libMonoIntraEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %b = alloca i8**, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %not_tainted = alloca i8**, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i8** %a, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 8

  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 8
Added line number: 8

  call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 8
Added line number: 8

  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 9
Added line number: 8
Added line number: 8

  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 9
Added line number: 8
Added line number: 8
Added line number: 11

  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8** %0, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 8
Added line number: 8
Added line number: 11

  call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 8
Added line number: 8
Added line number: 11

  %1 = load i8**, i8*** %b, align 8, !dbg !38, !phasar.instruction.id !39
Got load instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 8
Added line number: 8
Added line number: 11

  store i8** %1, i8*** %not_tainted, align 8, !dbg !36, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 8
Added line number: 8
Added line number: 11

  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8** %0, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  %1 = load i8**, i8*** %b, align 8, !dbg !38, !phasar.instruction.id !39
Got load instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  store i8** %1, i8*** %not_tainted, align 8, !dbg !36, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  %a = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %b = alloca i8**, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8** %0, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Removed 1 memory locations from facts

  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts

  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
Got load instruction
Adding load instruction fact

  call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %a, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction

  %not_tainted = alloca i8**, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37
Got call instruction

  %1 = load i8**, i8*** %b, align 8, !dbg !38, !phasar.instruction.id !39
Got load instruction

  store i8** %1, i8*** %not_tainted, align 8, !dbg !36, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts

  ret i32 0, !dbg !41, !phasar.instruction.id !42worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
%a = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%b = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8** %0, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
Facts:
store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30, ID: 10
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


Instruction:
store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30, ID: 10
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11
Facts:
store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30, ID: 10
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29, ID: 9
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %a, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
Facts:
	EMPTY


Instruction:
%not_tainted = alloca i8**, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37, ID: 13
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


Instruction:
%1 = load i8**, i8*** %b, align 8, !dbg !38, !phasar.instruction.id !39, ID: 14
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


Instruction:
store i8** %1, i8*** %not_tainted, align 8, !dbg !36, !phasar.instruction.id !40, ID: 15
Facts:
store i8* %call62 2019-Jan-05 22:32:46.220336 - [INFO] Write results to file
63 2019-Jan-05 22:32:46.220508 - [INFO] Shutdown llvm and the analysis framework.

, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


Instruction:
ret i32 0, !dbg !41, !phasar.instruction.id !42, ID: 16
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


