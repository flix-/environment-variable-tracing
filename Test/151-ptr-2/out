PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %a = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Destination:
[TRACK]   %c = alloca i8**, align 8, !phasar.instruction.id !16
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %c = alloca i8**, align 8, !phasar.instruction.id !16
[TRACK] Destination:
[TRACK]   %tainted1 = alloca i8*, align 8, !phasar.instruction.id !17
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %c = alloca i8**, align 8, !phasar.instruction.id !16
[TRACK] Destination:
[TRACK]   %tainted = alloca i8**, align 8, !phasar.instruction.id !18
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %c = alloca i8**, align 8, !phasar.instruction.id !16
[TRACK] Destination:
[TRACK]   %tainted2 = alloca i8***, align 8, !phasar.instruction.id !19### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tained2 = alloca i8**, align 8, !phasar.instruction.id !21, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %a, metadata !24, metadata !27), !dbg !28, !phasar.instruction.id !29, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !23, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted1 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tained3 = alloca i8***, align 8, !phasar.instruction.id !22, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !27), !dbg !34, !phasar.instruction.id !35, ID: 16 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8** %b, align 8, !dbg !34, !phasar.instruction.id !36, ID: 17 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8*** %c, metadata !37, metadata !27), !dbg !39, !phasar.instruction.id !40, ID: 18 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8** %a, i8*** %c, align 8, !dbg !39, !phasar.instruction.id !41, ID: 19 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted1, metadata !42, metadata !27), !dbg !43, !phasar.instruction.id !44, ID: 20 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: %0 = load i8**, i8*** %c, align 8, !dbg !45, !phasar.instruction.id !46, ID: 21 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %0, align 8, !dbg !47, !phasar.instruction.id !48, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8**, i8*** %c, align 8, !dbg !45, !phasar.instruction.id !46, ID: 21

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %tainted1, align 8, !dbg !43, !phasar.instruction.id !49, ID: 23 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	%0 = load i8**, i8*** %c, align 8, !dbg !45, !phasar.instruction.id !46, ID: 21

D:	%1 = load i8*, i8** %0, align 8, !dbg !47, !phasar.instruction.id !48, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8*** %tainted, metadata !50, metadata !27), !dbg !51, !phasar.instruction.id !52, ID: 24 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

--- IFDS START RESULT RECORD ---
N: %2 = load i8**, i8*** %c, align 8, !dbg !53, !phasar.instruction.id !54, ID: 25 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8** %2, i8*** %tainted, align 8, !dbg !51, !phasar.instruction.id !55, ID: 26 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%2 = load i8**, i8*** %c, align 8, !dbg !53, !phasar.instruction.id !54, ID: 25

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8**** %tainted2, metadata !56, metadata !27), !dbg !58, !phasar.instruction.id !59, ID: 27 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8*** %c, i8**** %tainted2, align 8, !dbg !58, !phasar.instruction.id !60, ID: 28 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %b, align 8, !dbg !61, !phasar.instruction.id !62, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: %4 = load i8**, i8*** %c, align 8, !dbg !63, !phasar.instruction.id !64, ID: 30 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %4, align 8, !dbg !65, !phasar.instruction.id !66, ID: 31 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%c = alloca i8**, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	%4 = load i8**, i8*** %c, align 8, !dbg !63, !phasar.instruction.id !64, ID: 30

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted1, metadata !67, metadata !27), !dbg !68, !phasar.instruction.id !69, ID: 32 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %5 = load i8**, i8*** %c, align 8, !dbg !70, !phasar.instruction.id !71, ID: 33 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %6 = load i8*, i8** %5, align 8, !dbg !72, !phasar.instruction.id !73, ID: 34 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: store i8* %6, i8** %not_tainted1, align 8, !dbg !68, !phasar.instruction.id !74, ID: 35 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8*** %not_tained2, metadata !75, metadata !27), !dbg !76, !phasar.instruction.id !77, ID: 36 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %7 = load i8**, i8*** %c, align 8, !dbg !78, !phasar.instruction.id !79, ID: 37 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

--- IFDS START RESULT RECORD ---
N: store i8** %7, i8*** %not_tained2, align 8, !dbg !76, !phasar.instruction.id !80, ID: 38 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8**** %not_tained3, metadata !81, metadata !27), !dbg !82, !phasar.instruction.id !83, ID: 39 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8*** %c, i8**** %not_tained3, align 8, !dbg !82, !phasar.instruction.id !84, ID: 40 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !85, !phasar.instruction.id !86, ID: 41 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted = alloca i8**, align 8, !phasar.instruction.id !18, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%tainted2 = alloca i8***, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 15
A:	%a = alloca i8*, align 8, !phas
ar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1


