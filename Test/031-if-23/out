PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Checking end of branch bb for: entry
[TRACK] End of branch bb: if.end
[TRACK] Checking end of branch bb for: if.else
[TRACK] End of branch bb: 
[TRACK] No end of tainted branch label found! Unreachable or algorithm incomplete?
[TRACK] Checking end of branch bb for: if.else
[TRACK] End of branch bb: 
[TRACK] No end of tainted branch label found! Unreachable or algorithm incomplete?
[TRACK] Checking end of branch bb for: if.then
[TRACK] End of branch bb: 
[TRACK] No end of tainted branch label found! Unreachable or algorithm incomplete?
[TRACK] Checking end of branch bb for: if.then
[TRACK] End of branch bb: 
[TRACK] No end of tainted branch label found! Unreachable or algorithm incomplete?
[TRACK] Checking end of branch bb for: entry
[TRACK] End of branch bb: if.end
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %rc = alloca i32, align 4, !phasar.instruction.id !17
[TRACK] Destination:
[TRACK]   %retval = alloca i32, align 4, !phasar.instruction.id !14### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !21, metadata !24), !dbg !25, !phasar.instruction.id !26, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut = alloca i32, align 4, !phasar.instruction.id !19, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !17, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !20, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %is_env_set, metadata !30, metadata !24), !dbg !31, !phasar.instruction.id !32, ID: 11 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool = icmp ne i32 %1, 0, !dbg !42, !phasar.instruction.id !45, ID: 18

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp ne i8* %0, null, !dbg !35, !phasar.instruction.id !36, ID: 13 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %conv = zext i1 %cmp to i32, !dbg !35, !phasar.instruction.id !37, ID: 14 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%cmp = icmp ne i8* %0, null, !dbg !35, !phasar.instruction.id !36, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%cmp = icmp ne i8* %0, null, !dbg !35, !phasar.instruction.id !36, ID: 13

D:	%conv = zext i1 %cmp to i32, !dbg !35, !phasar.instruction.id !37, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !39, metadata !24), !dbg !40, !phasar.instruction.id !41, ID: 16 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17 in function: main
D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %1, 0, !dbg !42, !phasar.instruction.id !45, ID: 18 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %4 = load i32, i32* %rc, align 4, !dbg !87, !phasar.instruction.id !88, ID: 38 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

--- IFDS START RESULT RECORD ---
N: %cmp1 = icmp ne i32 %2, 0, !dbg !52, !phasar.instruction.id !53, ID: 21 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	%2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = load i32, i32* %retval, align 4, !dbg !92, !phasar.instruction.id !93, ID: 41 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !56, metadata !24), !dbg !58, !phasar.instruction.id !59, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 2, i32* %retval, align 4, !dbg !75, !phasar.instruction.id !77, ID: 32
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 0, i32* %retval, align 4, !dbg !71, !phasar.instruction.id !73, ID: 30
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	br i1 %cmp4, label %if.then6, label %if.else7, !dbg !69, !phasar.instruction.id !70, ID: 29

D:	store i32 -1, i32* %retval, align 4, !dbg !61, !phasar.instruction.id !62, ID: 25
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 0, i32* %a, align 4, !dbg !58, !phasar.instruction.id !60, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !66, ID: 27 in function: main
D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	%2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20

D:	%cmp1 = icmp ne i32 %2, 0, !dbg !52, !phasar.instruction.id !53, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !56, metadata !24), !dbg !58, !phasar.instruction.id !59, ID: 23 in function: main
D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	%2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !58, !phasar.instruction.id !60, ID: 24 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	%2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !56, metadata !24), !dbg !58, !phasar.instruction.id !59, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 -1, i32* %retval, align 4, !dbg !61, !phasar.instruction.id !62, ID: 25 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !56, metadata !24), !dbg !58, !phasar.instruction.id !59, ID: 23

D:	store i32 0, i32* %a, align 4, !dbg !58, !phasar.instruction.id !60, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !61, !phasar.instruction.id !63, ID: 26 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !56, metadata !24), !dbg !58, !phasar.instruction.id !59, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 -1, i32* %retval, align 4, !dbg !61, !phasar.instruction.id !62, ID: 25
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 0, i32* %a, align 4, !dbg !58, !phasar.instruction.id !60, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: %cmp4 = icmp eq i32 %3, 0, !dbg !67, !phasar.instruction.id !68, ID: 28 in function: main
D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !66, ID: 27

D:	%2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !71, !phasar.instruction.id !74, ID: 31 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	br i1 %cmp4, label %if.then6, label %if.else7, !dbg !69, !phasar.instruction.id !70, ID: 29

D:	store i32 0, i32* %retval, align 4, !dbg !71, !phasar.instruction.id !73, ID: 30
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !75, !phasar.instruction.id !78, ID: 33 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 2, i32* %retval, align 4, !dbg !75, !phasar.instruction.id !77, ID: 32
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	br i1 %cmp4, label %if.then6, label %if.else7, !dbg !69, !phasar.instruction.id !70, ID: 29

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

--- IFDS START RESULT RECORD ---
N: br i1 %cmp4, label %if.then6, label %if.else7, !dbg !69, !phasar.instruction.id !70, ID: 29 in function: main
D:	%2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%cmp4 = icmp eq i32 %3, 0, !dbg !67, !phasar.instruction.id !68, ID: 28

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !66, ID: 27

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !dbg !71, !phasar.instruction.id !73, ID: 30 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp4, label %if.then6, label %if.else7, !dbg !69, !phasar.instruction.id !70, ID: 29

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !66, ID: 27

D:	%2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %retval, align 4, !dbg !75, !phasar.instruction.id !77, ID: 32 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp4, label %if.then6, label %if.else7, !dbg !69, !phasar.instruction.id !70, ID: 29

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !66, ID: 27

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	%2 = load i32, i32* %rc, align 4, !dbg !48, !phasar.instruction.id !51, ID: 20

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	%1 = load i32, i32* %is_env_set, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end, !phasar.instruction.id !82, ID: 35 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut, metadata !83, metadata !24), !dbg !84, !phasar.instruction.id !85, ID: 36 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	br i1 %tobool, label %if.then, label %if.else8, !dbg !46, !phasar.instruction.id !47, ID: 19

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %ut, align 4, !dbg !84, !phasar.instruction.id !86, ID: 37 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 %4, i32* %retval, align 4, !dbg !89, !phasar.instruction.id !90, ID: 39 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	%4 = load i32, i32* %rc, align 4, !dbg !87, !phasar.instruction.id !88, ID: 38

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !89, !phasar.instruction.id !91, ID: 40 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: ret i32 %5, !dbg !92, !phasar.instruction.id !94, ID: 42 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 1, i32* %rc, align 4, !dbg !79, !phasar.instruction.id !81, ID: 34
A:	%rc = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 2, i32* %retval, align 4, !dbg !75, !phasar.instruction.id !77, ID: 32
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 0, i32* %retval, align 4, !dbg !71, !phasar.instruction.id !73, ID: 30
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	br i1 %cmp4, label %if.then6, label %if.else7, !dbg !69, !phasar.instruction.id !70, ID: 29

D:	store i32 -1, i32* %retval, align 4, !dbg !61, !phasar.instruction.id !62, ID: 25
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 0, i32* %a, align 4, !dbg !58, !phasar.instruction.id !60, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !56, metadata !24), !dbg !58, !phasar.instruction.id !59, ID: 23

D:	br i1 %cmp1, label %if.then3, label %if.else, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	%5 = load i32, i32* %retval, align 4, !dbg !92, !phasar.instruction.id !93, ID: 41

D:	store i32 %conv, i32* %is_env_set, align 4, !dbg !31, !phasar.instruction.id !38, ID: 15
A:	%is_env_set = alloca i32, align 4, !phasar.instruction.id !
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549967416-trace.txt
16, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !27, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !29, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2


