PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %t1 = alloca i8*, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %nt1 = alloca i8*, align 8, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1** %s1, metadata !45, metadata !21), !dbg !46, !phasar.instruction.id !47

getNormalFlowFunction()
  %0 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !28, !phasar.instruction.id !29

Got load instruction
getSummaryFlowFunction()
  %call = call %struct.s1* @foo(%struct.s1* %0), !dbg !30, !phasar.instruction.id !31

getCallFlowFunction()
  %call = call %struct.s1* @foo(%struct.s1* %0), !dbg !30, !phasar.instruction.id !31

getNormalFlowFunction()
  %s1.addr = alloca %struct.s1*, align 8, !phasar.instruction.id !18

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store %struct.s1* %s1, %struct.s1** %s1.addr, align 8, !phasar.instruction.id !19

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1** %s1.addr, metadata !20, metadata !21), !dbg !22, !phasar.instruction.id !23

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25

getNormalFlowFunction()
  %0 = load %struct.s1*, %struct.s1** %s1.addr, align 8, !dbg !26, !phasar.instruction.id !27

Got load instruction
getNormalFlowFunction()
  %t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29

Got GEP instruction
getNormalFlowFunction()
  store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31

Got store instruction
getNormalFlowFunction()
  %1 = load %struct.s1*, %struct.s1** %s1.addr, align 8, !dbg !32, !phasar.instruction.id !33

Got load instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getRetFlowFunction()
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK]   %s1.addr = alloca %struct.s1*, align 8, !phasar.instruction.id !18
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] Destination:
[TRACK]   %call = call %struct.s1* @foo(%struct.s1* %0), !dbg !30, !phasar.instruction.id !31
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
getNormalFlowFunction()
  store %struct.s1* %call, %struct.s1** %s1, align 8, !dbg !32, !phasar.instruction.id !33

Got store instruction
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK]   %call = call %struct.s1* @foo(%struct.s1* %0), !dbg !30, !phasar.instruction.id !31
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] Destination:
[TRACK]   %s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56

getNormalFlowFunction()
  %1 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !37, !phasar.instruction.id !38

Got load instruction
getNormalFlowFunction()
  %t11 = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40

Got GEP instruction
getNormalFlowFunction()
  %2 = load i8*, i8** %t11, align 8, !dbg !39, !phasar.instruction.id !41

Got load instruction
getNormalFlowFunction()
  store i8* %2, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !42

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !14
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %nt1, metadata !63, metadata !21), !dbg !64, !phasar.instruction.id !65

getNormalFlowFunction()
  %3 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !46, !phasar.instruction.id !47

Got load instruction
getNormalFlowFunction()
  %nt12 = getelementptr inbounds %struct.s1, %struct.s1* %3, i32 0, i32 1, !dbg !48, !phasar.instruction.id !49

Got GEP instruction
getNormalFlowFunction()
  %4 = load i8*, i8** %nt12, align 8, !dbg !48, !phasar.instruction.id !50

Got load instruction
getNormalFlowFunction()
  store i8* %4, i8** %nt1, align 8, !dbg !44, !phasar.instruction.id !51

Got store instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %nt1, metadata !63, metadata !21), !dbg !64, !phasar.instruction.id !65

getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %nt1, metadata !63, metadata !21), !dbg !64, !phasar.instruction.id !65

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1** %s1, metadata !45, metadata !21), !dbg !46, !phasar.instruction.id !47

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1** %s1.addr, metadata !20, metadata !21), !dbg !22, !phasar.instruction.id !23

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %nt1, metadata !63, metadata !21), !dbg !64, !phasar.instruction.id !65### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %s1.addr = alloca %struct.s1*, align 8, !phasar.instruction.id !18, ID: 1 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25, ID: 4

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1** %s1.addr, metadata !20, metadata !21), !dbg !22, !phasar.instruction.id !23, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25, ID: 4 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store %struct.s1* %s1, %struct.s1** %s1.addr, align 8, !phasar.instruction.id !19, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6 in function: foo
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load %struct.s1*, %struct.s1** %s1.addr, align 8, !dbg !26, !phasar.instruction.id !27, ID: 5 in function: foo
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !24, !phasar.instruction.id !25, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load %struct.s1*, %struct.s1** %s1.addr, align 8, !dbg !32, !phasar.instruction.id !33, ID: 8 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1.addr = alloca %struct.s1*, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret %struct.s1* %1, !dbg !34, !phasar.instruction.id !35, ID: 9 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1.addr = alloca %struct.s1*, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %nt1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1** %s1, metadata !45, metadata !21), !dbg !46, !phasar.instruction.id !47, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !28, !phasar.instruction.id !29, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call %struct.s1* @foo(%struct.s1* %0), !dbg !30, !phasar.instruction.id !31, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store %struct.s1* %call, %struct.s1** %s1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 18 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%call = call %struct.s1* @foo(%struct.s1* %0), !dbg !30, !phasar.instruction.id !31, ID: 17
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 19 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 20 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t11 = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 21 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %t11, align 8, !dbg !39, !phasar.instruction.id !41, ID: 22 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !42, ID: 23 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%2 = load i8*, i8** %t11, align 8, !dbg !39, !phasar.instruction.id !41, ID: 22

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %nt1, metadata !63, metadata !21), !dbg !64, !phasar.instruction.id !65, ID: 24 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !46, !phasar.instruction.id !47, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, I

D: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 12

--- IFDS START RESULT RECORD ---
N: %nt12 = getelementptr inbounds %struct.s1, %struct.s1* %3, i32 0, i32 1, !dbg !48, !phasar.instruction.id !49, ID: 26 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %4 = load i8*, i8** %nt12, align 8, !dbg !48, !phasar.instruction.id !50, ID: 27 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %4, i8** %nt1, align 8, !dbg !44, !phasar.instruction.id !51, ID: 28 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !52, !phasar.instruction.id !53, ID: 29 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 7
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 11
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!