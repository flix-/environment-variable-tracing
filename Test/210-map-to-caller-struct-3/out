PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s21 = alloca %struct.s2, align 8, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %ut1 = alloca i8*, align 8, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %ut2 = alloca i8*, align 8, !phasar.instruction.id !17

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !18

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !54, metadata !27), !dbg !55, !phasar.instruction.id !56

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36

getNormalFlowFunction()
  %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38

getNormalFlowFunction()
  %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40

getNormalFlowFunction()
  store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s2* %s21, metadata !65, metadata !27), !dbg !66, !phasar.instruction.id !67

getSummaryFlowFunction()
  %call2 = call { i8*, i8* } @foo(%struct.s1* byval align 8 %s1), !dbg !46, !phasar.instruction.id !47

getCallFlowFunction()
  %call2 = call { i8*, i8* } @foo(%struct.s1* byval align 8 %s1), !dbg !46, !phasar.instruction.id !47

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42
[TRACK] %struct.s1* %s1
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40
getNormalFlowFunction()
  %retval = alloca %struct.s2, align 8, !phasar.instruction.id !25

Got operands checking instruction (alloca)
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !26, metadata !27), !dbg !28, !phasar.instruction.id !29

getNormalFlowFunction()
  %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !30, !phasar.instruction.id !31

getNormalFlowFunction()
  %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33

getNormalFlowFunction()
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35

Got store instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getNormalFlowFunction()
  %0 = bitcast %struct.s2* %s21 to { i8*, i8* }*, !dbg !46, !phasar.instruction.id !48

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0, !dbg !46, !phasar.instruction.id !49

getNormalFlowFunction()
  %2 = extractvalue { i8*, i8* } %call2, 0, !dbg !46, !phasar.instruction.id !50

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i8* %2, i8** %1, align 8, !dbg !46, !phasar.instruction.id !51

Got store instruction
getNormalFlowFunction()
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1, !dbg !46, !phasar.instruction.id !52

getNormalFlowFunction()
  %4 = extractvalue { i8*, i8* } %call2, 1, !dbg !46, !phasar.instruction.id !53

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i8* %4, i8** %3, align 8, !dbg !46, !phasar.instruction.id !54

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut1, metadata !77, metadata !27), !dbg !78, !phasar.instruction.id !79

getNormalFlowFunction()
  %t13 = getelementptr inbounds %struct.s2, %struct.s2* %s21, i32 0, i32 0, !dbg !58, !phasar.instruction.id !59

getNormalFlowFunction()
  %5 = load i8*, i8** %t13, align 8, !dbg !58, !phasar.instruction.id !60

Got load instruction
getNormalFlowFunction()
  store i8* %5, i8** %ut1, align 8, !dbg !56, !phasar.instruction.id !61

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut2, metadata !84, metadata !27), !dbg !85, !phasar.instruction.id !86

getNormalFlowFunction()
  %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s21, i32 0, i32 1, !dbg !65, !phasar.instruction.id !66

getNormalFlowFunction()
  %6 = load i8*, i8** %t2, align 8, !dbg !65, !phasar.instruction.id !67

Got load instruction
getNormalFlowFunction()
  store i8* %6, i8** %ut2, align 8, !dbg !63, !phasar.instruction.id !68

Got store instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s2* %s21, metadata !65, metadata !27), !dbg !66, !phasar.instruction.id !67

getSummaryFlowFunction()
  %call2 = call { i8*, i8* } @foo(%struct.s1* byval align 8 %s1), !dbg !46, !phasar.instruction.id !47

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !26, metadata !27), !dbg !28, !phasar.instruction.id !29

getNormalFlowFunction()
  %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !36, !phasar.instruction.id !37

getNormalFlowFunction()
  %0 = bitcast %struct.s2* %retval to i8*, !dbg !36, !phasar.instruction.id !38

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %1 = bitcast %struct.s2* %s21 to i8*, !dbg !36, !phasar.instruction.id !39

Got operands checking instruction (bitcast)
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 16, i32 8, i1 false), !dbg !36, !phasar.instruction.id !40

Got memcpy/memmove instruction
getNormalFlowFunction()
  %2 = bitcast %struct.s2* %retval to { i8*, i8* }*, !dbg !41, !phasar.instruction.id !42

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %3 = load { i8*, i8* }, { i8*, i8* }* %2, align 8, !dbg !41, !phasar.instruction.id !43

Got load instruction
getCallToRetFlowFunction()
getRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut1, metadata !77, metadata !27), !dbg !78, !phasar.instruction.id !79

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut2, metadata !84, metadata !27), !dbg !85, !phasar.instruction.id !86

getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !54, metadata !27), !dbg !55, !phasar.instruction.id !56

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s2* %s21, metadata !65, metadata !27), !dbg !66, !phasar.instruction.id !67

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42
[TRACK] %struct.s1* %s1
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !26, metadata !27), !dbg !28, !phasar.instruction.id !29

getCallFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 16, i32 8, i1 false), !dbg !36, !phasar.instruction.id !40

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut1, metadata !77, metadata !27), !dbg !78, !phasar.instruction.id !79

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %ut2, metadata !84, metadata !27), !dbg !85, !phasar.instruction.id !86### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %retval = alloca %struct.s2, align 8, !phasar.instruction.id !25, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%struct.s1* %s1, ID: foo.0
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 16, i32 8, i1 false), !dbg !36, !phasar.instruction.id !40, ID: 10 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !30, !phasar.instruction.id !31, ID: 4 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%struct.s1* %s1, ID: foo.0
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !26, metadata !27), !dbg !28, !phasar.instruction.id !29, ID: 3 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%struct.s1* %s1, ID: foo.0
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35, ID: 6 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%struct.s1* %s1, ID: foo.0
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 5 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%struct.s1* %s1, ID: foo.0
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !36, !phasar.instruction.id !37, ID: 7 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s2* %retval to i8*, !dbg !36, !phasar.instruction.id !38, ID: 8 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = bitcast %struct.s2* %s21 to i8*, !dbg !36, !phasar.instruction.id !39, ID: 9 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = bitcast %struct.s2* %retval to { i8*, i8* }*, !dbg !41, !phasar.instruction.id !42, ID: 11 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load { i8*, i8* }, { i8*, i8* }* %2, align 8, !dbg !41, !phasar.instruction.id !43, ID: 12 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret { i8*, i8* } %3, !dbg !41, !phasar.instruction.id !44, ID: 13 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s21 = alloca %struct.s2, align 8, !phasar.instruction.id !15, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut2 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !54, metadata !27), !dbg !55, !phasar.instruction.id !56, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !35, !phasar.instruction.id !36, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s2* %s21, metadata !65, metadata !27), !dbg !66, !phasar.instruction.id !67, ID: 25 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call2 = call { i8*, i8* } @foo(%struct.s1* byval align 8 %s1), !dbg !46, !phasar.instruction.id !47, ID: 26 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s2* %s21 to { i8*, i8* }*, !dbg !46, !phasar.instruction.id !48, ID: 27 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0, !dbg !46, !phasar.instruction.id !49, ID: 28 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = extractvalue { i8*, i8* } %call2, 0, !dbg !46, !phasar.instruction.id !50, ID: 29 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %1, align 8, !dbg !46, !phasar.instruction.id !51, ID: 30 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1, !dbg !46, !phasar.instruction.id !52, ID: 31 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %4 = extractvalue { i8*, i8* } %call2, 1, !dbg !46, !phasar.instruction.id !53, ID: 32 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %4, i8** %3, align 8, !dbg !46, !phasar.instruction.id !54, ID: 33 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %ut1, metadata !77, metadata !27), !dbg !78, !phasar.instruction.id !79, ID: 34 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

--- IFDS START RESULT RECORD ---
N: %t13 = getelementptr inbounds %struct.s2, %struct.s2* %s21, i32 0, i32 0, !dbg !58, !phasar.instruction.id !59, ID: 35 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = load i8*, i8** %t13, align 8, !dbg !58, !phasar.instruction.id !60, ID: 36 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %5, i8** %ut1, align 8, !dbg !56, !phasar.instruction.id !61, ID: 37 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %ut2, metadata !84, metadata !27), !dbg !85, !phasar.instruction.id !86, ID: 38 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

--- IFDS START RESULT RECORD ---
N: %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s21, i32 0, i32 1, !dbg !65, !phasar.instruction.id !66, ID: 39 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %6 = load i8*, i8** %t2, align 8, !dbg !65, !phasar.instruction.id !67, ID: 40 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !

40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %6, i8** %ut2, align 8, !dbg !63, !phasar.instruction.id !68, ID: 41 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !69, !phasar.instruction.id !70, ID: 42 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !41, !phasar.instruction.id !42, ID: 24
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 15
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !37, !phasar.instruction.id !38, ID: 22
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!