PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38
[TRACK] Destination:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38
[TRACK] Destination:
[TRACK]   %t12 = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38
[TRACK] Destination:
[TRACK] i8* %tainted
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] i8* %tainted
[TRACK] Destination:
[TRACK]   %tainted.addr = alloca i8*, align 8, !phasar.instruction.id !13
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %tainted.addr = alloca i8*, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK]   %also_tainted = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK]   %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38
[TRACK] Destination:
[TRACK] i8* %tainted### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %tainted.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	i8* %tainted, ID: foo.0

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted.addr, align 8, !dbg !23, !phasar.instruction.id !24, ID: 6 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %also_tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	i8* %tainted, ID: foo.0

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted.addr, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19, ID: 4 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %also_tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 7 in function: foo
D:	%0 = load i8*, i8** %tainted.addr, align 8, !dbg !23, !phasar.instruction.id !24, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

--- IFDS START RESULT RECORD ---
N: store i8* %tainted, i8** %tainted.addr, align 8, !phasar.instruction.id !15, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	i8* %tainted, ID: foo.0

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !20, metadata !17), !dbg !21, !phasar.instruction.id !22, ID: 5 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !26, !phasar.instruction.id !27, ID: 8 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 2

--- IFDS START RESULT RECORD ---
N: %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t12 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s2* %s2, metadata !37, metadata !17), !dbg !48, !phasar.instruction.id !49, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !58, metadata !17), !dbg !65, !phasar.instruction.id !66, ID: 19 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

--- IFDS START RESULT RECORD ---
N: store %struct.s2* %s2, %struct.s2** %s21, align 8, !dbg !52, !phasar.instruction.id !53, ID: 21 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t12, metadata !71, metadata !17), !dbg !72, !phasar.instruction.id !73, ID: 22 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s23 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !57, !phasar.instruction.id !58, ID: 23 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load %struct.s2*, %struct.s2** %s23, align 8, !dbg !57, !phasar.instruction.id !59, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

--- IFDS START RESULT RECORD ---
N: %s34 = getelementptr inbounds %struct.s2, %struct.s2* %0, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61, ID: 25 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t15 = getelementptr inbounds %struct.s3, %struct.s3* %s34, i32 0, i32 2, !dbg !62, !phasar.instruction.id !63, ID: 26 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %t15, align 8, !dbg !62, !phasar.instruction.id !64, ID: 27 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %t12, align 8, !dbg !55, !phasar.instruction.id !65, ID: 28 in function: main
D:	%1 = load i8*, i8** %t15, align 8, !dbg !62, !phasar.instruction.id !64, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

--- IFDS START RESULT RECORD ---
N: %s26 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !66, !phasar.instruction.id !67, ID: 29 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load %struct.s2*, %struct.s2** %s26, align 8, !dbg !66, !phasar.instruction.id !68, ID: 30 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s37 = getelementptr inbounds %struct.s2, %struct.s2* %2, i32 0, i32 1, !dbg !69, !phasar.instruction.id !70, ID: 31 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

--- IFDS START RESULT RECORD ---
N: %t18 = getelementptr inbounds %struct.s3, %struct.s3* %s37, i32 0, i32 2, !dbg !71, !phasar.instruction.id !72, ID: 32 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %t18, align 8, !dbg !71, !phasar.instruction.id !73, ID: 33 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%
t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @foo(i8* %3), !dbg !74, !phasar.instruction.id !75, ID: 34 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 12

D:	%3 = load i8*, i8** %t18, align 8, !dbg !71, !phasar.instruction.id !73, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !76, !phasar.instruction.id !77, ID: 35 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	store i8* %call, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !40, ID: 18
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 11
A:	%s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !50, !phasar.instruction.id !51, ID: 20
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 16
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !37, !phasar.instruction.id !38, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%3 = load i8*, i8** %t18, align 8, !dbg !71, !phasar.instruction.id !73, ID: 33


