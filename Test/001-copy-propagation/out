PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %taint = alloca i8*, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK]   %b = alloca i8*, align 8, !phasar.instruction.id !14
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550311254-trace.txt
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %taint, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29, ID: 9 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27, ID: 8 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %b = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !31, !phasar.instruction.id !32, ID: 11 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%b = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30, ID: 10 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1


