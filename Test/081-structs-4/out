PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %foo = alloca %struct.a, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a5 = alloca i8*, align 8, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !17, metadata !34), !dbg !35, !phasar.instruction.id !36

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38

getNormalFlowFunction()
  %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40

Got GEP instruction
getNormalFlowFunction()
  store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42

Got store instruction
getNormalFlowFunction()
  %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !43, !phasar.instruction.id !44

Got GEP instruction
getNormalFlowFunction()
  %0 = load i8*, i8** %a1, align 8, !dbg !43, !phasar.instruction.id !45

Got load instruction
getNormalFlowFunction()
  %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47

Got GEP instruction
getNormalFlowFunction()
  %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49

Got GEP instruction
getNormalFlowFunction()
  %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51

Got GEP instruction
getNormalFlowFunction()
  %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53

Got GEP instruction
getNormalFlowFunction()
  %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54

Got GEP instruction
getNormalFlowFunction()
  store i8* %0, i8** %arrayidx4, align 8, !dbg !55, !phasar.instruction.id !56

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
[TRACK]   %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47
[TRACK]   %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49
[TRACK]   %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51
[TRACK]   %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53
[TRACK]   %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %a5, metadata !57, metadata !34), !dbg !58, !phasar.instruction.id !59

getNormalFlowFunction()
  %b6 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61

Got GEP instruction
getNormalFlowFunction()
  %a7 = getelementptr inbounds %struct.b, %struct.b* %b6, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63

Got GEP instruction
getNormalFlowFunction()
  %arrayidx8 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a7, i64 0, i64 0, !dbg !64, !phasar.instruction.id !65

Got GEP instruction
getNormalFlowFunction()
  %a9 = getelementptr inbounds %struct.c, %struct.c* %arrayidx8, i32 0, i32 0, !dbg !66, !phasar.instruction.id !67

Got GEP instruction
getNormalFlowFunction()
  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a9, i64 0, i64 0, !dbg !64, !phasar.instruction.id !68

Got GEP instruction
getNormalFlowFunction()
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !64, !phasar.instruction.id !69

Got load instruction
getNormalFlowFunction()
  store i8* %1, i8** %a5, align 8, !dbg !58, !phasar.instruction.id !70

Got store instruction
getNormalFlowFunction()
  %b11 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !71, !phasar.instruction.id !72

Got GEP instruction
getNormalFlowFunction()
  %a12 = getelementptr inbounds %struct.b, %struct.b* %b11, i32 0, i32 0, !dbg !73, !phasar.instruction.id !74

Got GEP instruction
getNormalFlowFunction()
  %arrayidx13 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a12, i64 0, i64 0, !dbg !75, !phasar.instruction.id !76

Got GEP instruction
getNormalFlowFunction()
  %a14 = getelementptr inbounds %struct.c, %struct.c* %arrayidx13, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78

Got GEP instruction
getNormalFlowFunction()
  %arrayidx15 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a14, i64 0, i64 0, !dbg !75, !phasar.instruction.id !79

Got GEP instruction
getNormalFlowFunction()
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx15, align 8, !dbg !80, !phasar.instruction.id !81

Got store instruction
getNormalFlowFunction()
  %b16 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !82, !phasar.instruction.id !83

Got GEP instruction
getNormalFlowFunction()
  %a17 = getelementptr inbounds %struct.b, %struct.b* %b16, i32 0, i32 0, !dbg !84, !phasar.instruction.id !85

Got GEP instruction
getNormalFlowFunction()
  %arrayidx18 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a17, i64 0, i64 0, !dbg !86, !phasar.instruction.id !87

Got GEP instruction
getNormalFlowFunction()
  %a19 = getelementptr inbounds %struct.c, %struct.c* %arrayidx18, i32 0, i32 0, !dbg !88, !phasar.instruction.id !89

Got GEP instruction
getNormalFlowFunction()
  %arrayidx20 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a19, i64 0, i64 0, !dbg !86, !phasar.instruction.id !90

Got GEP instruction
getNormalFlowFunction()
  %2 = load i8*, i8** %arrayidx20, align 8, !dbg !86, !phasar.instruction.id !91

Got load instruction
getNormalFlowFunction()
  store i8* %2, i8** %a5, align 8, !dbg !92, !phasar.instruction.id !93

Got store instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %a5, metadata !57, metadata !34), !dbg !58, !phasar.instruction.id !59

[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47
[TRACK]   %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49
[TRACK]   %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51
[TRACK]   %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53
[TRACK]   %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54
[TRACK] Destination:
[TRACK]   %a5 = alloca i8*, align 8, !phasar.instruction.id !15
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %a5, metadata !57, metadata !34), !dbg !58, !phasar.instruction.id !59

getCallToRetFlowFunction()
getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !17, metadata !34), !dbg !35, !phasar.instruction.id !36

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %a5, metadata !57, metadata !34), !dbg !58, !phasar.instruction.id !59### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %arrayidx4, align 8, !dbg !55, !phasar.instruction.id !56, ID: 17 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	%0 = load i8*, i8** %a1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !17, metadata !34), !dbg !35, !phasar.instruction.id !36, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !43, !phasar.instruction.id !44, ID: 10 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %a1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 11 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	%0 = load i8*, i8** %a1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	%0 = load i8*, i8** %a1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	%0 = load i8*, i8** %a1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %a1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 11

--- IFDS START RESULT RECORD ---
N: %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	%0 = load i8*, i8** %a1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %a5, metadata !57, metadata !34), !dbg !58, !phasar.instruction.id !59, ID: 18 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b6 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61, ID: 19 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a7 = getelementptr inbounds %struct.b, %struct.b* %b6, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63, ID: 20 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

--- IFDS START RESULT RECORD ---
N: %arrayidx8 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a7, i64 0, i64 0, !dbg !64, !phasar.instruction.id !65, ID: 21 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a9 = getelementptr inbounds %struct.c, %struct.c* %arrayidx8, i32 0, i32 0, !dbg !66, !phasar.instruction.id !67, ID: 22 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a9, i64 0, i64 0, !dbg !64, !phasar.instruction.id !68, ID: 23 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %arrayidx10, align 8, !dbg !64, !phasar.instruction.id !69, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %a5, align 8, !dbg !58, !phasar.instruction.id !70, ID: 25 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8*, i8** %arrayidx10, align 8, !dbg !64, !phasar.instruction.id !69, ID: 24

--- IFDS START RESULT RECORD ---
N: %b11 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !71, !phasar.instruction.id !72, ID: 26 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a12 = getelementptr inbounds %struct.b, %struct.b* %b11, i32 0, i32 0, !dbg !73, !phasar.instruction.id !74, ID: 27 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx13 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a12, i64 0, i64 0, !dbg !75, !phasar.instruction.id !76, ID: 28 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

--- IFDS START RESULT RECORD ---
N: %a14 = getelementptr inbounds %struct.c, %struct.c* %arrayidx13, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78, ID: 29 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx15 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a14, i64 0, i64 0, !dbg !75, !phasar.instruction.id !79, ID: 30 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx15, align 8, !dbg !80, !phasar.instruction.id !81, ID: 31 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !50, !phasar.instruction.id !51, ID: 14
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !50, !phasar.instruction.id !54, ID: 16

--- IFDS START RESULT RECORD ---
N: %b16 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !82, !phasar.instruction.id !83, ID: 32 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a17 = getelementptr inbounds %struct.b, %struct.b* %b16, i32 0, i32 0, !dbg !84, !phasar.instruction.id !85, ID: 33 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx18 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a17, i64 0, i64 0, !dbg !86, !phasar.instruction.id !87, ID: 34 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a19 = getelementptr inbounds %struct.c, %struct.c* %arrayidx18, i32 0, i32 0, !dbg !88, !phasar.instruction.id !89, ID: 35 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %arrayidx20 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a19, i64 0, i64 0, !dbg !86, !phasar.instruction.id !90, ID: 36 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %arrayidx20, align 8, !dbg !86, !phasar.instruction.id !91, ID: 37 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %fo

o, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %a5, align 8, !dbg !92, !phasar.instruction.id !93, ID: 38 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%a5 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !94, !phasar.instruction.id !95, ID: 39 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!