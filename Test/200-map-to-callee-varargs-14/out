PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] VarArg Index: 1
[TRACK] Current VarArg Index: -1
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] VarArg Index: 2
[TRACK] Current VarArg Index: -1
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] VarArg Index: 3
[TRACK] Current VarArg Index: -1
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] VarArg Index: 4
[TRACK] Current VarArg Index: -1
[TRACK] Patched memory location (arg/memcpy)
[TRACK] Source:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] VarArg Index: 1
[TRACK] Current VarArg Index: 1
[TRACK] Destination:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !30
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !30
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !36