PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll.patched 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] varArgIndex: 1
[TRACK] currentVarArgIndex: -1
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] varArgIndex: 2
[TRACK] currentVarArgIndex: -1
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] varArgIndex: 3
[TRACK] currentVarArgIndex: -1
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] varArgIndex: 4
[TRACK] currentVarArgIndex: -1
[TRACK] Created new VarArg from template
[TRACK] Template:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] varArgIndex: 1
[TRACK] currentVarArgIndex: -1
[TRACK] VarArg:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !28
[TRACK] varArgIndex: 1
[TRACK] currentVarArgIndex: -1
[TRACK] Patched memory location (arg/memcpy)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !28
[TRACK] varArgIndex: 1
[TRACK] currentVarArgIndex: 1
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !30
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !30
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !36
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !30
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %ut3 = alloca i32, align 4, !phasar.instruction.id !37
[TRACK] Created new VarArg from template
[TRACK] Template:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] varArgIndex: 2
[TRACK] currentVarArgIndex: -1
[TRACK] VarArg:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !28
[TRACK] varArgIndex: 2
[TRACK] currentVarArgIndex: -1
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !28
[TRACK] varArgIndex: 2
[TRACK] currentVarArgIndex: 2
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s1ptr = alloca %struct.s1*, align 8, !phasar.instruction.id !31
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1ptr = alloca %struct.s1*, align 8, !phasar.instruction.id !31
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %t2 = alloca i8*, align 8, !phasar.instruction.id !38
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1ptr = alloca %struct.s1*, align 8, !phasar.instruction.id !31
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !45, !phasar.instruction.id !46
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %ut4 = alloca i32, align 4, !phasar.instruction.id !39
[TRACK] Created new VarArg from template
[TRACK] Template:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] varArgIndex: 3
[TRACK] currentVarArgIndex: -1
[TRACK] VarArg:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !28
[TRACK] varArgIndex: 3
[TRACK] currentVarArgIndex: -1
[TRACK] Patched memory location (arg/memcpy)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !28
[TRACK] varArgIndex: 3
[TRACK] currentVarArgIndex: 3
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !32
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !32
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %t3 = alloca i8*, align 8, !phasar.instruction.id !40
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !32
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %ut5 = alloca i32, align 4, !phasar.instruction.id !41
[TRACK] Created new VarArg from template
[TRACK] Template:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] varArgIndex: 4
[TRACK] currentVarArgIndex: -1
[TRACK] VarArg:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !28
[TRACK] varArgIndex: 4
[TRACK] currentVarArgIndex: -1
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !28
[TRACK] varArgIndex: 4
[TRACK] currentVarArgIndex: 4
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s2ptr = alloca %struct.s2*, align 8, !phasar.instruction.id !34
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s2ptr = alloca %struct.s2*, align 8, !phasar.instruction.id !34
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %t4 = alloca i8*, align 8, !phasar.instruction.id !42
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s2ptr = alloca %struct.s2*, align 8, !phasar.instruction.id !34
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %ut6 = alloca i32, align 4, !phasar.instruction.id !43
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s2ptr = alloca %struct.s2*, align 8, !phasar.instruction.id !34
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %call4 = call %struct.s2* (i32, ...) @foo(i32 8, i32 4711, %struct.s1* byval align 8 %s1, %struct.s1* %s1, double %2, i8* %4, %struct.s2* %s23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0)), !dbg !61, !phasar.instruction.id !67
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %call4 = call %struct.s2* (i32, ...) @foo(i32 8, i32 4711, %struct.s1* byval align 8 %s1, %struct.s1* %s1, double %2, i8* %4, %struct.s2* %s23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0)), !dbg !61, !phasar.instruction.id !67
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s21 = alloca %struct.s2*, align 8, !phasar.instruction.id !17
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s21 = alloca %struct.s2*, align 8, !phasar.instruction.id !17
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %t15 = alloca i8*, align 8, !phasar.instruction.id !18
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s21 = alloca %struct.s2*, align 8, !phasar.instruction.id !17
[TRACK]   %u = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %ut1 = alloca i32, align 4, !phasar.instruction.id !19
Writing line number trace to: line-numbers.txt
Writing lcov trace to: static-main-1551732037-trace.txt
Writing lcov return value trace to: static-main-1551732037-return-value-trace.txt
### DUMP LLVMIFDSSolver results
EMPTY

