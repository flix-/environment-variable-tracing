PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !19
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !19
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK]   %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %8 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 1, !dbg !41, !phasar.instruction.id !52
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %8 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 1, !dbg !41, !phasar.instruction.id !52
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %6 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 0, !dbg !41, !phasar.instruction.id !49
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %6 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 0, !dbg !41, !phasar.instruction.id !49
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK]   %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %20 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %17, i32 0, i32 1, !dbg !58, !phasar.instruction.id !69
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %20 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %17, i32 0, i32 1, !dbg !58, !phasar.instruction.id !69
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %18 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %17, i32 0, i32 0, !dbg !58, !phasar.instruction.id !66
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %18 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %17, i32 0, i32 0, !dbg !58, !phasar.instruction.id !66
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK]   %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17
[TRACK]   %32 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %29, i32 0, i32 1, !dbg !75, !phasar.instruction.id !86
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %32 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %29, i32 0, i32 1, !dbg !75, !phasar.instruction.id !86
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17
[TRACK]   %30 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %29, i32 0, i32 0, !dbg !75, !phasar.instruction.id !83
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %30 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %29, i32 0, i32 0, !dbg !75, !phasar.instruction.id !83
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK]   %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   %tainted8 = alloca i8*, align 8, !phasar.instruction.id !20
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %44 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %41, i32 0, i32 1, !dbg !92, !phasar.instruction.id !103
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %44 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %41, i32 0, i32 1, !dbg !92, !phasar.instruction.id !103
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %42 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %41, i32 0, i32 0, !dbg !92, !phasar.instruction.id !100
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %42 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %41, i32 0, i32 0, !dbg !92, !phasar.instruction.id !100
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550325838-trace.txt
### DUMP LLVMIFDSSolver results
EMPTY

