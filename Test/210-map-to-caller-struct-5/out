PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %not_tainted = alloca i32, align 4, !phasar.instruction.id !19

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %tainted8 = alloca i8*, align 8, !phasar.instruction.id !20

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !21

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s11, metadata !50, metadata !26), !dbg !51, !phasar.instruction.id !52

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33

getNormalFlowFunction()
  %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35

Got GEP instruction
getNormalFlowFunction()
  store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s12, metadata !59, metadata !26), !dbg !60, !phasar.instruction.id !61

getNormalFlowFunction()
  %0 = bitcast %struct.s1* %s11 to { i32, i8* }*, !dbg !41, !phasar.instruction.id !42

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %1 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %0, i32 0, i32 0, !dbg !41, !phasar.instruction.id !43

Got GEP instruction
getNormalFlowFunction()
  %2 = load i32, i32* %1, align 8, !dbg !41, !phasar.instruction.id !44

Got load instruction
getNormalFlowFunction()
  %3 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %0, i32 0, i32 1, !dbg !41, !phasar.instruction.id !45

Got GEP instruction
getNormalFlowFunction()
  %4 = load i8*, i8** %3, align 8, !dbg !41, !phasar.instruction.id !46

Got load instruction
getSummaryFlowFunction()
  %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47

getCallFlowFunction()
  %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %s.coerce1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getNormalFlowFunction()
  %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s = alloca %struct.s1, align 8, !phasar.instruction.id !19

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %0 = bitcast %struct.s1* %s to { i32, i8* }*, !phasar.instruction.id !20

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %1 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %0, i32 0, i32 0, !phasar.instruction.id !21

Got GEP instruction
getNormalFlowFunction()
  store i32 %s.coerce0, i32* %1, align 8, !phasar.instruction.id !22

Got store instruction
[TRACK] Patched memory location (arg / store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !19
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getNormalFlowFunction()
  %2 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %0, i32 0, i32 1, !phasar.instruction.id !23

Got GEP instruction
getNormalFlowFunction()
  store i8* %s.coerce1, i8** %2, align 8, !phasar.instruction.id !24

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !25, metadata !26), !dbg !27, !phasar.instruction.id !28

getNormalFlowFunction()
  %3 = bitcast %struct.s1* %retval to i8*, !dbg !29, !phasar.instruction.id !30

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %4 = bitcast %struct.s1* %s to i8*, !dbg !29, !phasar.instruction.id !31

Got operands checking instruction (bitcast)
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 16, i32 8, i1 false), !dbg !29, !phasar.instruction.id !32

Got memcpy/memmove instruction
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !19
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getNormalFlowFunction()
  %5 = bitcast %struct.s1* %retval to { i32, i8* }*, !dbg !33, !phasar.instruction.id !34

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %6 = load { i32, i8* }, { i32, i8* }* %5, align 8, !dbg !33, !phasar.instruction.id !35

Got load instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getRetFlowFunction()
[TRACK] Relocated memory location (caller <- callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getNormalFlowFunction()
  %5 = bitcast %struct.s1* %coerce to { i32, i8* }*, !dbg !41, !phasar.instruction.id !48

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %6 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 0, !dbg !41, !phasar.instruction.id !49

Got GEP instruction
getNormalFlowFunction()
  %7 = extractvalue { i32, i8* } %call1, 0, !dbg !41, !phasar.instruction.id !50

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i32 %7, i32* %6, align 8, !dbg !41, !phasar.instruction.id !51

Got store instruction
[TRACK] Patched memory location frame (ret)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getNormalFlowFunction()
  %8 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 1, !dbg !41, !phasar.instruction.id !52

Got GEP instruction
getNormalFlowFunction()
  %9 = extractvalue { i32, i8* } %call1, 1, !dbg !41, !phasar.instruction.id !53

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i8* %9, i8** %8, align 8, !dbg !41, !phasar.instruction.id !54

Got store instruction
getNormalFlowFunction()
  %10 = bitcast %struct.s1* %s12 to i8*, !dbg !41, !phasar.instruction.id !55

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %11 = bitcast %struct.s1* %coerce to i8*, !dbg !41, !phasar.instruction.id !56

Got operands checking instruction (bitcast)
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !dbg !41, !phasar.instruction.id !57

Got memcpy/memmove instruction
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getNormalFlowFunction()
  %12 = bitcast %struct.s1* %s11 to { i32, i8* }*, !dbg !58, !phasar.instruction.id !59

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %13 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %12, i32 0, i32 0, !dbg !58, !phasar.instruction.id !60

Got GEP instruction
getNormalFlowFunction()
  %14 = load i32, i32* %13, align 8, !dbg !58, !phasar.instruction.id !61

Got load instruction
getNormalFlowFunction()
  %15 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %12, i32 0, i32 1, !dbg !58, !phasar.instruction.id !62

Got GEP instruction
getNormalFlowFunction()
  %16 = load i8*, i8** %15, align 8, !dbg !58, !phasar.instruction.id !63

Got load instruction
getSummaryFlowFunction()
  %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64

getCallFlowFunction()
  %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64

getCallToRetFlowFunction()
getNormalFlowFunction()
  %17 = bitcast %struct.s1* %coerce3 to { i32, i8* }*, !dbg !58, !phasar.instruction.id !65

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %18 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %17, i32 0, i32 0, !dbg !58, !phasar.instruction.id !66

Got GEP instruction
getNormalFlowFunction()
  %19 = extractvalue { i32, i8* } %call2, 0, !dbg !58, !phasar.instruction.id !67

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i32 %19, i32* %18, align 8, !dbg !58, !phasar.instruction.id !68

Got store instruction
getNormalFlowFunction()
  %20 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %17, i32 0, i32 1, !dbg !58, !phasar.instruction.id !69

Got GEP instruction
getNormalFlowFunction()
  %21 = extractvalue { i32, i8* } %call2, 1, !dbg !58, !phasar.instruction.id !70

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i8* %21, i8** %20, align 8, !dbg !58, !phasar.instruction.id !71

Got store instruction
getNormalFlowFunction()
  %22 = bitcast %struct.s1* %s12 to i8*, !dbg !58, !phasar.instruction.id !72

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %23 = bitcast %struct.s1* %coerce3 to i8*, !dbg !58, !phasar.instruction.id !73

Got operands checking instruction (bitcast)
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false), !dbg !58, !phasar.instruction.id !74

Got memcpy/memmove instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false), !dbg !58, !phasar.instruction.id !74

Got memcpy/memmove instruction
getNormalFlowFunction()
  %24 = bitcast %struct.s1* %s11 to { i32, i8* }*, !dbg !75, !phasar.instruction.id !76

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %25 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %24, i32 0, i32 0, !dbg !75, !phasar.instruction.id !77

Got GEP instruction
getNormalFlowFunction()
  %26 = load i32, i32* %25, align 8, !dbg !75, !phasar.instruction.id !78

Got load instruction
getNormalFlowFunction()
  %27 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %24, i32 0, i32 1, !dbg !75, !phasar.instruction.id !79

Got GEP instruction
getNormalFlowFunction()
  %28 = load i8*, i8** %27, align 8, !dbg !75, !phasar.instruction.id !80

Got load instruction
getSummaryFlowFunction()
  %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81

getCallFlowFunction()
  %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81

getCallToRetFlowFunction()
getNormalFlowFunction()
  %29 = bitcast %struct.s1* %coerce5 to { i32, i8* }*, !dbg !75, !phasar.instruction.id !82

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %30 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %29, i32 0, i32 0, !dbg !75, !phasar.instruction.id !83

Got GEP instruction
getNormalFlowFunction()
  %31 = extractvalue { i32, i8* } %call4, 0, !dbg !75, !phasar.instruction.id !84

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i32 %31, i32* %30, align 8, !dbg !75, !phasar.instruction.id !85

Got store instruction
getNormalFlowFunction()
  %32 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %29, i32 0, i32 1, !dbg !75, !phasar.instruction.id !86

Got GEP instruction
getNormalFlowFunction()
  %33 = extractvalue { i32, i8* } %call4, 1, !dbg !75, !phasar.instruction.id !87

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i8* %33, i8** %32, align 8, !dbg !75, !phasar.instruction.id !88

Got store instruction
getNormalFlowFunction()
  %34 = bitcast %struct.s1* %s12 to i8*, !dbg !75, !phasar.instruction.id !89

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %35 = bitcast %struct.s1* %coerce5 to i8*, !dbg !75, !phasar.instruction.id !90

Got operands checking instruction (bitcast)
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !75, !phasar.instruction.id !91

Got memcpy/memmove instruction
getNormalFlowFunction()
  %36 = bitcast %struct.s1* %s11 to { i32, i8* }*, !dbg !92, !phasar.instruction.id !93

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %37 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %36, i32 0, i32 0, !dbg !92, !phasar.instruction.id !94

Got GEP instruction
getNormalFlowFunction()
  %38 = load i32, i32* %37, align 8, !dbg !92, !phasar.instruction.id !95

Got load instruction
getNormalFlowFunction()
  %39 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %36, i32 0, i32 1, !dbg !92, !phasar.instruction.id !96

Got GEP instruction
getNormalFlowFunction()
  %40 = load i8*, i8** %39, align 8, !dbg !92, !phasar.instruction.id !97

Got load instruction
getSummaryFlowFunction()
  %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98

getCallFlowFunction()
  %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98

getCallToRetFlowFunction()
getNormalFlowFunction()
  %41 = bitcast %struct.s1* %coerce7 to { i32, i8* }*, !dbg !92, !phasar.instruction.id !99

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %42 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %41, i32 0, i32 0, !dbg !92, !phasar.instruction.id !100

Got GEP instruction
getNormalFlowFunction()
  %43 = extractvalue { i32, i8* } %call6, 0, !dbg !92, !phasar.instruction.id !101

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i32 %43, i32* %42, align 8, !dbg !92, !phasar.instruction.id !102

Got store instruction
getNormalFlowFunction()
  %44 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %41, i32 0, i32 1, !dbg !92, !phasar.instruction.id !103

Got GEP instruction
getNormalFlowFunction()
  %45 = extractvalue { i32, i8* } %call6, 1, !dbg !92, !phasar.instruction.id !104

Got operands checking instruction (extractvalue)
getNormalFlowFunction()
  store i8* %45, i8** %44, align 8, !dbg !92, !phasar.instruction.id !105

Got store instruction
getNormalFlowFunction()
  %46 = bitcast %struct.s1* %s12 to i8*, !dbg !92, !phasar.instruction.id !106

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %47 = bitcast %struct.s1* %coerce7 to i8*, !dbg !92, !phasar.instruction.id !107

Got operands checking instruction (bitcast)
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !92, !phasar.instruction.id !108

Got memcpy/memmove instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %not_tainted, metadata !130, metadata !26), !dbg !131, !phasar.instruction.id !132

getNormalFlowFunction()
  %a = getelementptr inbounds %struct.s1, %struct.s1* %s12, i32 0, i32 0, !dbg !112, !phasar.instruction.id !113

Got GEP instruction
getNormalFlowFunction()
  %48 = load i32, i32* %a, align 8, !dbg !112, !phasar.instruction.id !114

Got load instruction
getNormalFlowFunction()
  store i32 %48, i32* %not_tainted, align 4, !dbg !110, !phasar.instruction.id !115

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted8, metadata !137, metadata !26), !dbg !138, !phasar.instruction.id !139

getNormalFlowFunction()
  %tainted9 = getelementptr inbounds %struct.s1, %struct.s1* %s12, i32 0, i32 1, !dbg !119, !phasar.instruction.id !120

Got GEP instruction
getNormalFlowFunction()
  %49 = load i8*, i8** %tainted9, align 8, !dbg !119, !phasar.instruction.id !121

Got load instruction
getNormalFlowFunction()
  store i8* %49, i8** %tainted8, align 8, !dbg !117, !phasar.instruction.id !122

Got store instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
[TRACK] Patched memory location (arg / store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %s.coerce1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !19
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !25, metadata !26), !dbg !27, !phasar.instruction.id !28

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 16, i32 8, i1 false), !dbg !29, !phasar.instruction.id !32

Got memcpy/memmove instruction
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !19
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller <- callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !dbg !41, !phasar.instruction.id !57

Got memcpy/memmove instruction
getSummaryFlowFunction()
  %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %s.coerce1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getRetFlowFunction()
[TRACK] Relocated memory location (caller <- callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Patched memory location frame (ret)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false), !dbg !58, !phasar.instruction.id !74

Got memcpy/memmove instruction
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !75, !phasar.instruction.id !91

Got memcpy/memmove instruction
getSummaryFlowFunction()
  %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !75, !phasar.instruction.id !91

Got memcpy/memmove instruction
getSummaryFlowFunction()
  %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !92, !phasar.instruction.id !108

Got memcpy/memmove instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %not_tainted, metadata !130, metadata !26), !dbg !131, !phasar.instruction.id !132

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted8, metadata !137, metadata !26), !dbg !138, !phasar.instruction.id !139

[TRACK] Relocated memory location (caller <- callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false), !dbg !58, !phasar.instruction.id !74

Got memcpy/memmove instruction
getSummaryFlowFunction()
  %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %s.coerce1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getRetFlowFunction()
[TRACK] Relocated memory location (caller <- callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Patched memory location frame (ret)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !75, !phasar.instruction.id !91

Got memcpy/memmove instruction
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !92, !phasar.instruction.id !108

Got memcpy/memmove instruction
getSummaryFlowFunction()
  %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !92, !phasar.instruction.id !108

Got memcpy/memmove instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %not_tainted, metadata !130, metadata !26), !dbg !131, !phasar.instruction.id !132

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted8, metadata !137, metadata !26), !dbg !138, !phasar.instruction.id !139

[TRACK] Relocated memory location (caller <- callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !75, !phasar.instruction.id !91

Got memcpy/memmove instruction
getSummaryFlowFunction()
  %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %s.coerce1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getRetFlowFunction()
[TRACK] Relocated memory location (caller <- callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Patched memory location frame (ret)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !92, !phasar.instruction.id !108

Got memcpy/memmove instruction
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %not_tainted, metadata !130, metadata !26), !dbg !131, !phasar.instruction.id !132

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted8, metadata !137, metadata !26), !dbg !138, !phasar.instruction.id !139

[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %tainted8 = alloca i8*, align 8, !phasar.instruction.id !20
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %not_tainted, metadata !130, metadata !26), !dbg !131, !phasar.instruction.id !132

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted8, metadata !137, metadata !26), !dbg !138, !phasar.instruction.id !139

[TRACK] Relocated memory location (caller <- callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !92, !phasar.instruction.id !108

Got memcpy/memmove instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %not_tainted, metadata !130, metadata !26), !dbg !131, !phasar.instruction.id !132

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted8, metadata !137, metadata !26), !dbg !138, !phasar.instruction.id !139

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s12, metadata !59, metadata !26), !dbg !60, !phasar.instruction.id !61

getSummaryFlowFunction()
  %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !25, metadata !26), !dbg !27, !phasar.instruction.id !28

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 16, i32 8, i1 false), !dbg !29, !phasar.instruction.id !32

Got memcpy/memmove instruction
getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !dbg !41, !phasar.instruction.id !57

Got memcpy/memmove instruction
getSummaryFlowFunction()
  %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false), !dbg !58, !phasar.instruction.id !74

Got memcpy/memmove instruction
getSummaryFlowFunction()
  %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !75, !phasar.instruction.id !91

Got memcpy/memmove instruction
getSummaryFlowFunction()
  %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98

getSummaryFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !92, !phasar.instruction.id !108

Got memcpy/memmove instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %not_tainted, metadata !130, metadata !26), !dbg !131, !phasar.instruction.id !132

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted8, metadata !137, metadata !26), !dbg !138, !phasar.instruction.id !139

getCallToRetFlowFunction()
getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33

getCallFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !dbg !41, !phasar.instruction.id !57

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s11, metadata !50, metadata !26), !dbg !51, !phasar.instruction.id !52

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s12, metadata !59, metadata !26), !dbg !60, !phasar.instruction.id !61

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %s.coerce1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getCallFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 16, i32 8, i1 false), !dbg !29, !phasar.instruction.id !32

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !19
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !25, metadata !26), !dbg !27, !phasar.instruction.id !28

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %s.coerce1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getCallFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false), !dbg !58, !phasar.instruction.id !74

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %s.coerce1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getCallFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !75, !phasar.instruction.id !91

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %s.coerce1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getCallFlowFunction()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !92, !phasar.instruction.id !108

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK]   %coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37
[TRACK] i8* %1
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %not_tainted, metadata !130, metadata !26), !dbg !131, !phasar.instruction.id !132

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted8, metadata !137, metadata !26), !dbg !138, !phasar.instruction.id !139### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 16, i32 8, i1 false), !dbg !29, !phasar.instruction.id !32, ID: 11 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %1 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %0, i32 0, i32 0, !phasar.instruction.id !21, ID: 4 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i8* %s.coerce1, ID: foo.1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i32 %s.coerce0, ID: foo.0
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s1* %s to { i32, i8* }*, !phasar.instruction.id !20, ID: 3 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i32 %s.coerce0, ID: foo.0
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i8* %s.coerce1, ID: foo.1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i32 %s.coerce0, ID: foo.0
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i8* %s.coerce1, ID: foo.1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !21, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %0, i32 0, i32 1, !phasar.instruction.id !23, ID: 6 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i8* %s.coerce1, ID: foo.1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %s.coerce1, i8** %2, align 8, !phasar.instruction.id !24, ID: 7 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i8* %s.coerce1, ID: foo.1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: store i32 %s.coerce0, i32* %1, align 8, !phasar.instruction.id !22, ID: 5 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i32 %s.coerce0, ID: foo.0
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i8* %s.coerce1, ID: foo.1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %4 = bitcast %struct.s1* %s to i8*, !dbg !29, !phasar.instruction.id !31, ID: 10 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !25, metadata !26), !dbg !27, !phasar.instruction.id !28, ID: 8 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 1 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i32 %s.coerce0, ID: foo.0
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	i8* %s.coerce1, ID: foo.1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = bitcast %struct.s1* %retval to i8*, !dbg !29, !phasar.instruction.id !30, ID: 9 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = bitcast %struct.s1* %retval to { i32, i8* }*, !dbg !33, !phasar.instruction.id !34, ID: 12 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%retval = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %6 = load { i32, i8* }, { i32, i8* }* %5, align 8, !dbg !33, !phasar.instruction.id !35, ID: 13 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%retval = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret { i32, i8* } %6, !dbg !33, !phasar.instruction.id !36, ID: 14 in function: foo
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !19, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%retval = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 1
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !dbg !41, !phasar.instruction.id !57, ID: 45 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted = alloca i32, align 4, !phasar.instruction.id !19, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted8 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 23 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s11, metadata !50, metadata !26), !dbg !51, !phasar.instruction.id !52, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !32, !phasar.instruction.id !33, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s12, metadata !59, metadata !26), !dbg !60, !phasar.instruction.id !61, ID: 29 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s1* %s11 to { i32, i8* }*, !dbg !41, !phasar.instruction.id !42, ID: 30 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %0, i32 0, i32 0, !dbg !41, !phasar.instruction.id !43, ID: 31 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %1, align 8, !dbg !41, !phasar.instruction.id !44, ID: 32 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %0, i32 0, i32 1, !dbg !41, !phasar.instruction.id !45, ID: 33 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %4 = load i8*, i8** %3, align 8, !dbg !41, !phasar.instruction.id !46, ID: 34 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47, ID: 35 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = bitcast %struct.s1* %coerce to { i32, i8* }*, !dbg !41, !phasar.instruction.id !48, ID: 36 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47, ID: 35
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %6 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 0, !dbg !41, !phasar.instruction.id !49, ID: 37 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47, ID: 35
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %7 = extractvalue { i32, i8* } %call1, 0, !dbg !41, !phasar.instruction.id !50, ID: 38 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47, ID: 35
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %7, i32* %6, align 8, !dbg !41, !phasar.instruction.id !51, ID: 39 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !41, !phasar.instruction.id !47, ID: 35
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %8 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 1, !dbg !41, !phasar.instruction.id !52, ID: 40 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %9 = extractvalue { i32, i8* } %call1, 1, !dbg !41, !phasar.instruction.id !53, ID: 41 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %9, i8** %8, align 8, !dbg !41, !phasar.instruction.id !54, ID: 42 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %10 = bitcast %struct.s1* %s12 to i8*, !dbg !41, !phasar.instruction.id !55, ID: 43 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %11 = bitcast %struct.s1* %coerce to i8*, !dbg !41, !phasar.instruction.id !56, ID: 44 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %12 = bitcast %struct.s1* %s11 to { i32, i8* }*, !dbg !58, !phasar.instruction.id !59, ID: 46 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %13 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %12, i32 0, i32 0, !dbg !58, !phasar.instruction.id !60, ID: 47 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %14 = load i32, i32* %13, align 8, !dbg !58, !phasar.instruction.id !61, ID: 48 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %15 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %12, i32 0, i32 1, !dbg !58, !phasar.instruction.id !62, ID: 49 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %16 = load i8*, i8** %15, align 8, !dbg !58, !phasar.instruction.id !63, ID: 50 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64, ID: 51 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %17 = bitcast %struct.s1* %coerce3 to { i32, i8* }*, !dbg !58, !phasar.instruction.id !65, ID: 52 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64, ID: 51
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %18 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %17, i32 0, i32 0, !dbg !58, !phasar.instruction.id !66, ID: 53 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64, ID: 51
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %19 = extractvalue { i32, i8* } %call2, 0, !dbg !58, !phasar.instruction.id !67, ID: 54 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64, ID: 51
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: store i32 %19, i32* %18, align 8, !dbg !58, !phasar.instruction.id !68, ID: 55 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call2 = call { i32, i8* } @foo(i32 %14, i8* %16), !dbg !58, !phasar.instruction.id !64, ID: 51
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %20 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %17, i32 0, i32 1, !dbg !58, !phasar.instruction.id !69, ID: 56 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %21 = extractvalue { i32, i8* } %call2, 1, !dbg !58, !phasar.instruction.id !70, ID: 57 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: store i8* %21, i8** %20, align 8, !dbg !58, !phasar.instruction.id !71, ID: 58 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %22 = bitcast %struct.s1* %s12 to i8*, !dbg !58, !phasar.instruction.id !72, ID: 59 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %23 = bitcast %struct.s1* %coerce3 to i8*, !dbg !58, !phasar.instruction.id !73, ID: 60 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false), !dbg !58, !phasar.instruction.id !74, ID: 61 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %24 = bitcast %struct.s1* %s11 to { i32, i8* }*, !dbg !75, !phasar.instruction.id !76, ID: 62 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %25 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %24, i32 0, i32 0, !dbg !75, !phasar.instruction.id !77, ID: 63 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %26 = load i32, i32* %25, align 8, !dbg !75, !phasar.instruction.id !78, ID: 64 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %27 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %24, i32 0, i32 1, !dbg !75, !phasar.instruction.id !79, ID: 65 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %28 = load i8*, i8** %27, align 8, !dbg !75, !phasar.instruction.id !80, ID: 66 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81, ID: 67 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %29 = bitcast %struct.s1* %coerce5 to { i32, i8* }*, !dbg !75, !phasar.instruction.id !82, ID: 68 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81, ID: 67
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %30 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %29, i32 0, i32 0, !dbg !75, !phasar.instruction.id !83, ID: 69 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81, ID: 67
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %31 = extractvalue { i32, i8* } %call4, 0, !dbg !75, !phasar.instruction.id !84, ID: 70 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81, ID: 67
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: store i32 %31, i32* %30, align 8, !dbg !75, !phasar.instruction.id !85, ID: 71 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call4 = call { i32, i8* } @foo(i32 %26, i8* %28), !dbg !75, !phasar.instruction.id !81, ID: 67
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %32 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %29, i32 0, i32 1, !dbg !75, !phasar.instruction.id !86, ID: 72 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %33 = extractvalue { i32, i8* } %call4, 1, !dbg !75, !phasar.instruction.id !87, ID: 73 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: store i8* %33, i8** %32, align 8, !dbg !75, !phasar.instruction.id !88, ID: 74 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %34 = bitcast %struct.s1* %s12 to i8*, !dbg !75, !phasar.instruction.id !89, ID: 75 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %35 = bitcast %struct.s1* %coerce5 to i8*, !dbg !75, !phasar.instruction.id !90, ID: 76 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false), !dbg !75, !phasar.instruction.id !91, ID: 77 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %36 = bitcast %struct.s1* %s11 to { i32, i8* }*, !dbg !92, !phasar.instruction.id !93, ID: 78 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %37 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %36, i32 0, i32 0, !dbg !92, !phasar.instruction.id !94, ID: 79 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %38 = load i32, i32* %37, align 8, !dbg !92, !phasar.instruction.id !95, ID: 80 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %39 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %36, i32 0, i32 1, !dbg !92, !phasar.instruction.id !96, ID: 81 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %40 = load i8*, i8** %39, align 8, !dbg !92, !phasar.instruction.id !97, ID: 82 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98, ID: 83 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %41 = bitcast %struct.s1* %coerce7 to { i32, i8* }*, !dbg !92, !phasar.instruction.id !99, ID: 84 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98, ID: 83
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %42 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %41, i32 0, i32 0, !dbg !92, !phasar.instruction.id !100, ID: 85 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98, ID: 83
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %43 = extractvalue { i32, i8* } %call6, 0, !dbg !92, !phasar.instruction.id !101, ID: 86 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98, ID: 83
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %43, i32* %42, align 8, !dbg !92, !phasar.instruction.id !102, ID: 87 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%call6 = call { i32, i8* } @foo(i32 %38, i8* %40), !dbg !92, !phasar.instruction.id !98, ID: 83
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %44 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %41, i32 0, i32 1, !dbg !92, !phasar.instruction.id !103, ID: 88 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %45 = extractvalue { i32, i8* } %call6, 1, !dbg !92, !phasar.instruction.id !104, ID: 89 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: store i8* %45, i8** %44, align 8, !dbg !92, !phasar.instruction.id !105, ID: 90 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %46 = bitcast %struct.s1* %s12 to i8*, !dbg !92, !phasar.instruction.id !106, ID: 91 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %47 = bitcast %struct.s1* %coerce7 to i8*, !dbg !92, !phasar.instruction.id !107, ID: 92 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !dbg !92, !phasar.instruction.id !108, ID: 93 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %not_tainted, metadata !130, metadata !26), !dbg !131, !phasar.instruction.id !132, ID: 94 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = getelementptr inbounds %struct.s1, %struct.s1* %s12, i32 0, i32 0, !dbg !112, !phasar.instruction.id !113, ID: 95 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %48 = load i32, i32* %a, align 8, !dbg !112, !phasar.instruction.id !114, ID: 96 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %48, i32* %not_tainted, align 4, !dbg !110, !phasar.instruction.id !115, ID: 97 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted8, metadata !137, metadata !26), !dbg !138, !phasar.instruction.id !139, ID: 98 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted9 = getelementptr inbounds %struct.s1, %struct.s1* %s12, i32 0, i32 1, !dbg !119, !phasar.instruction.id !120, ID: 99 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: %49 = load i8*, i8** %tainted9, align 8, !dbg !119, !phasar.instruction.id !121, ID: 100 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %49, i8** %tainted8, align 8, !dbg !117, !phasar.instruction.id !122, ID: 101 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%49 = load i8*, i8** %tainted9, align 8, !dbg !119, !phasar.instruction.id !121, ID: 100

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !123, !phasar.instruction.id !124, ID: 102 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%tainted8 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 23

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 16
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 17
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15, ID: 18
A:	%tainted = getele

mentptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce3 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 19
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce5 = alloca %struct.s1, align 8, !phasar.instruction.id !17, ID: 20
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	store i8* %call, i8** %tainted, align 8, !dbg !36, !phasar.instruction.id !37, ID: 28
A:	%coerce7 = alloca %struct.s1, align 8, !phasar.instruction.id !18, ID: 21
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!