PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
Line numbers output file: main-line-numbers.txt
[TRACK] Checking end of branch label for: if.then3
[TRACK] End of branch label: if.end
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %a = alloca i32, align 4, !phasar.instruction.id !14
[TRACK] Destination:
[TRACK]   %ret = alloca i32, align 4, !phasar.instruction.id !13### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 100, i32* %ret, align 4, !dbg !44, !phasar.instruction.id !46, ID: 17 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.else4, !dbg !24, !phasar.instruction.id !25, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15 in function: main
D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%0 = load i32, i32* %a, align 4, !dbg !38, !phasar.instruction.id !39, ID: 14

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !17), !dbg !35, !phasar.instruction.id !36, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ret, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i32 (...) @foo(), !dbg !20, !phasar.instruction.id !22, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %call, 0, !dbg !20, !phasar.instruction.id !23, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end5, !phasar.instruction.id !53, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool2 = icmp ne i32 %call1, 0, !dbg !26, !phasar.instruction.id !30, ID: 10 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %a, align 4, !dbg !38, !phasar.instruction.id !39, ID: 14 in function: main
D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end, !phasar.instruction.id !47, ID: 18 in function: main
D:	store i32 100, i32* %ret, align 4, !dbg !44, !phasar.instruction.id !46, ID: 17
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool2 = icmp ne i32 %call1, 0, !dbg !26, !phasar.instruction.id !30, ID: 10

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !17), !dbg !35, !phasar.instruction.id !36, ID: 12 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %ret, align 4, !dbg !54, !phasar.instruction.id !55, ID: 22 in function: main
D:	store i32 100, i32* %ret, align 4, !dbg !44, !phasar.instruction.id !46, ID: 17
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end, !dbg !42, !phasar.instruction.id !43, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %if.end5, !dbg !48, !phasar.instruction.id !49, ID: 19 in function: main
D:	store i32 100, i32* %ret, align 4, !dbg !44, !phasar.instruction.id !46, ID: 17
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 100, i32* %ret, align 4, !dbg !50, !phasar.instruction.id !52, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 %1, !dbg !56, !phasar.instruction.id !57, ID: 23 in function: main
D:	store i32 100, i32* %ret, align 4, !dbg !44, !phasar.instruction.id !46, ID: 17
A
[TRACK] Checking end of branch label for: if.then3
[TRACK] End of branch label: if.end
:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%1 = load i32, i32* %ret, align 4, !dbg !54, !phasar.instruction.id !55, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1


