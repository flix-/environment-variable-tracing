PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1** %s1, metadata !18, metadata !26), !dbg !27, !phasar.instruction.id !28, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t2 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call noalias i8* @malloc(i64 16) #3, !dbg !29, !phasar.instruction.id !30, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store %struct.s1* %0, %struct.s1** %s1, align 8, !dbg !27, !phasar.instruction.id !32, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast i8* %call to %struct.s1*, !dbg !29, !phasar.instruction.id !31, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 12 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %t1, metadata !41, metadata !26), !dbg !42, !phasar.instruction.id !43, ID: 15 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !44, !phasar.instruction.id !45, ID: 16 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = ptrtoint %struct.s1* %2 to i32, !dbg !46, !phasar.instruction.id !47, ID: 17 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %add = add nsw i32 %3, 1, !dbg !48, !phasar.instruction.id !49, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	%3 = ptrtoint %struct.s1* %2 to i32, !dbg !46, !phasar.instruction.id !47, ID: 17

--- IFDS START RESULT RECORD ---
N: store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	%3 = ptrtoint %struct.s1* %2 to i32, !dbg !46, !phasar.instruction.id !47, ID: 17

D:	%add = add nsw i32 %3, 1, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %t2, metadata !51, metadata !26), !dbg !52, !phasar.instruction.id !53, ID: 20 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %4 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !54, !phasar.instruction.id !55, ID: 21 in function: main
D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

--- IFDS START RESULT RECORD ---
N: %tainted2 = getelementptr inbounds %struct.s1, %struct.s1* %4, i32 0, i32 0, !dbg !56, !phasar.instruction.id !57, ID: 22 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = load i8*, i8** %tainted2, align 8, !dbg !56, !phasar.instruction.id !58, ID: 23 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %6 = ptrtoint i8* %5 to i32, !dbg !59, !phasar.instruction.id !60, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

--- IFDS START RESULT RECORD ---
N: %add3 = add nsw i32 %6, 1, !dbg !61, !phasar.instruction.id !62, ID: 25 in function: main
D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%6 = ptrtoint i8* %5 to i32, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

--- IFDS START RESULT RECORD ---
N: store i32 %add3, i32* %t2, align 4, !dbg !52, !phasar.instruction.id !63, ID: 26 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%6 = ptrtoint i8* %5 to i32, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	%add3 = add nsw i32 %6, 1, !dbg !61, !phasar.instruction.id !62, ID: 25

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut1, metadata !64, metadata !26), !dbg !65, !phasar.instruction.id !66, ID: 27 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %add3, i32* %t2, align 4, !dbg !52, !phasar.instruction.id !63, ID: 26
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

--- IFDS START RESULT RECORD ---
N: %7 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !67, !phasar.instruction.id !68, ID: 28 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %add3, i32* %t2, align 4, !dbg !52, !phasar.instruction.id !63, ID: 26
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted = getelementptr inbounds %struct.s1, %struct.s1* %7, i32 0, i32 1, !dbg !69, !phasar.instruction.id !70, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %add3, i32* %t2, align 4, !dbg !52, !phasar.instruction.id !63, ID: 26
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %8 = load i8*, i8** %not_tainted, align 8, !dbg !69, !phasar.instruction.id !71, ID: 30 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %add3, i32* %t2, align 4, !dbg !52, !phasar.instruction.id !63, ID: 26
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %9 = ptrtoint i8* %8 to i32, !dbg !72, !phasar.instruction.id !73, ID: 31 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = aWriting simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550131614-trace.txt
lloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %add3, i32* %t2, align 4, !dbg !52, !phasar.instruction.id !63, ID: 26
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %add4 = add nsw i32 %9, 1, !dbg !74, !phasar.instruction.id !75, ID: 32 in function: main
D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %add3, i32* %t2, align 4, !dbg !52, !phasar.instruction.id !63, ID: 26
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

--- IFDS START RESULT RECORD ---
N: store i32 %add4, i32* %ut1, align 4, !dbg !65, !phasar.instruction.id !76, ID: 33 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %add3, i32* %t2, align 4, !dbg !52, !phasar.instruction.id !63, ID: 26
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 -1, !dbg !77, !phasar.instruction.id !78, ID: 34 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !33, !phasar.instruction.id !34, ID: 11

D:	store i8* %call1, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !40, ID: 14
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %1, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	store i32 %add, i32* %t1, align 4, !dbg !42, !phasar.instruction.id !50, ID: 19
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %add3, i32* %t2, align 4, !dbg !52, !phasar.instruction.id !63, ID: 26
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1


