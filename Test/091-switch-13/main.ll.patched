; ModuleID = 'main.c'
source_filename = "main.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"gude\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define i32 @main() #0 !dbg !9 {
entry:
  %retval = alloca i32, align 4
  %rc = alloca i32, align 4
  %taint = alloca i32, align 4
  %ut6 = alloca i32, align 4
  %no_taint = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11, metadata !12), !dbg !13
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !14
  %0 = ptrtoint i8* %call to i32, !dbg !15
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !16

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %rc, align 4, !dbg !17
  br label %sw.bb1, !dbg !19

sw.bb1:                                           ; preds = %entry, %sw.bb
  store i32 2, i32* %rc, align 4, !dbg !20
  br label %sw.epilog, !dbg !21

sw.default:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %taint, metadata !22, metadata !12), !dbg !23
  store i32 1, i32* %taint, align 4, !dbg !23
  br label %err, !dbg !24

sw.epilog:                                        ; preds = %sw.bb1
  call void @llvm.dbg.declare(metadata i32* %ut6, metadata !25, metadata !12), !dbg !26
  store i32 1, i32* %ut6, align 4, !dbg !26
  br label %err, !dbg !27

err:                                              ; preds = %sw.epilog, %sw.default
  call void @llvm.dbg.declare(metadata i32* %no_taint, metadata !28, metadata !12), !dbg !29
  store i32 1, i32* %no_taint, align 4, !dbg !29
  %1 = load i32, i32* %rc, align 4, !dbg !30
urem i4711 4711, 4711
  ret i32 %1, !dbg !31
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i8* @getenv(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7}
!llvm.ident = !{!8}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 5.0.1 (tags/RELEASE_501/final 348479)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "main.c", directory: "/home/sebastian/.qt-creator-workspace/Phasar/Test/091-switch-13")
!2 = !{}
!3 = !{!4}
!4 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{!"clang version 5.0.1 (tags/RELEASE_501/final 348479)"}
!9 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 3, type: !10, isLocal: false, isDefinition: true, scopeLine: 3, isOptimized: false, unit: !0, variables: !2)
!10 = !DISubroutineType(types: !3)
!11 = !DILocalVariable(name: "rc", scope: !9, file: !1, line: 4, type: !4)
!12 = !DIExpression()
!13 = !DILocation(line: 4, column: 9, scope: !9)
!14 = !DILocation(line: 6, column: 17, scope: !9)
!15 = !DILocation(line: 6, column: 12, scope: !9)
!16 = !DILocation(line: 6, column: 5, scope: !9)
!17 = !DILocation(line: 9, column: 12, scope: !18)
!18 = distinct !DILexicalBlock(scope: !9, file: !1, line: 6, column: 33)
!19 = !DILocation(line: 9, column: 9, scope: !18)
!20 = !DILocation(line: 13, column: 12, scope: !18)
!21 = !DILocation(line: 14, column: 9, scope: !18)
!22 = !DILocalVariable(name: "taint", scope: !18, file: !1, line: 17, type: !4)
!23 = !DILocation(line: 17, column: 13, scope: !18)
!24 = !DILocation(line: 19, column: 9, scope: !18)
!25 = !DILocalVariable(name: "ut6", scope: !9, file: !1, line: 22, type: !4)
!26 = !DILocation(line: 22, column: 9, scope: !9)
!27 = !DILocation(line: 22, column: 5, scope: !9)
!28 = !DILocalVariable(name: "no_taint", scope: !9, file: !1, line: 26, type: !4)
!29 = !DILocation(line: 26, column: 9, scope: !9)
!30 = !DILocation(line: 28, column: 12, scope: !9)
!31 = !DILocation(line: 28, column: 5, scope: !9)
