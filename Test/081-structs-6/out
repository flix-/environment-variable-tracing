PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47
[TRACK]   %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   %tainted5 = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   %tainted3 = alloca i8*, align 8, !phasar.instruction.id !20
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47
[TRACK]   %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49
[TRACK] Destination:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58
[TRACK]   %taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47
[TRACK]   %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49
[TRACK] Destination:
[TRACK]   %tainted17 = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58
[TRACK]   %taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60
[TRACK] Destination:
[TRACK]   %tainted2 = alloca i8*, align 8, !phasar.instruction.id !16
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47
[TRACK]   %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49
[TRACK] Destination:
[TRACK] i8* %0
[TRACK]   %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
[TRACK]   %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58
[TRACK]   %taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60
[TRACK] Destination:
[TRACK] i8* %0
[TRACK]   %taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %taint2, align 8, !dbg !61, !phasar.instruction.id !62, ID: 25 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	%1 = load i8*, i8** %taint3, align 8, !dbg !54, !phasar.instruction.id !56, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %taint, align 8, !dbg !50, !phasar.instruction.id !51, ID: 19 in function: main
D:	%0 = load i8*, i8** %tainted1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.a* %s1, metadata !22, metadata !34), !dbg !35, !phasar.instruction.id !36, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted2 = alloca i8*, align 8, !phasar.instruction.id !19, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !21, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted1 = alloca i8*, align 8, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted3 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2_inner = alloca %struct.b, align 8, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 8, i1 false), !dbg !93, !phasar.instruction.id !96, ID: 44 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted1 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !43, !phasar.instruction.id !44, ID: 15 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 16 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

--- IFDS START RESULT RECORD ---
N: %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	%0 = load i8*, i8** %tainted1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	%0 = load i8*, i8** %tainted1, align 8, !dbg !43, !phasar.instruction.id !45, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b2 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 20 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

--- IFDS START RESULT RECORD ---
N: %taint3 = getelementptr inbounds %struct.b, %struct.b* %b2, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55, ID: 21 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %taint3, align 8, !dbg !54, !phasar.instruction.id !56, ID: 22 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

--- IFDS START RESULT RECORD ---
N: %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	%1 = load i8*, i8** %taint3, align 8, !dbg !54, !phasar.instruction.id !56, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	%1 = load i8*, i8** %taint3, align 8, !dbg !54, !phasar.instruction.id !56, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted5, metadata !63, metadata !34), !dbg !64, !phasar.instruction.id !65, ID: 26 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

--- IFDS START RESULT RECORD ---
N: %tainted6 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !66, !phasar.instruction.id !67, ID: 27 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %tainted6, align 8, !dbg !66, !phasar.instruction.id !68, ID: 28 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %tainted5, align 8, !dbg !64, !phasar.instruction.id !69, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%2 = load i8*, i8** %tainted6, align 8, !dbg !66, !phasar.instruction.id !68, ID: 28

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted17, metadata !70, metadata !34), !dbg !71, !phasar.instruction.id !72, ID: 30 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b8 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !73, !phasar.instruction.id !74, ID: 31 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

--- IFDS START RESULT RECORD ---
N: %taint9 = getelementptr inbounds %struct.b, %struct.b* %b8, i32 0, i32 0, !dbg !75, !phasar.instruction.id !76, ID: 32 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %taint9, align 8, !dbg !75, !phasar.instruction.id !77, ID: 33 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %tainted17, align 8, !dbg !71, !phasar.instruction.id !78, ID: 34 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%3 = load i8*, i8** %taint9, align 8, !dbg !75, !phasar.instruction.id !77, ID: 33

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !79, metadata !34), !dbg !80, !phasar.instruction.id !81, ID: 35 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %b10 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !82, !phasar.instruction.id !83, ID: 36 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint211 = getelementptr inbounds %struct.b, %struct.b* %b10, i32 0, i32 1, !dbg !84, !phasar.instruction.id !85, ID: 37 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %4 = load i8*, i8** %taint211, align 8, !dbg !84, !phasar.instruction.id !86, ID: 38 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %4, i8** %tainted2, align 8, !dbg !80, !phasar.instruction.id !87, ID: 39 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%4 = load i8*, i8** %taint211, align 8, !dbg !84, !phasar.instruction.id !86, ID: 38

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !88, metadata !34), !dbg !89, !phasar.instruction.id !90, ID: 40 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %b12 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !91, !phasar.instruction.id !92, ID: 41 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = bitcast %struct.b* %b12 to i8*, !dbg !93, !phasar.instruction.id !94, ID: 42 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

--- IFDS START RESULT RECORD ---
N: %6 = bitcast %struct.b* %s2_inner to i8*, !dbg !93, !phasar.instruction.id !95, ID: 43 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 17
A:	%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 18

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !57, !phasar.instruction.id !58, ID: 23
A:	%taint2 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 24

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted1, metadata !97, metadata !34), !dbg !98, !phasar.instruction.id !99, ID: 45 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %b13 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !100, !phasar.instruction.id !101, ID: 46 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint14 = getelementptr inbounds %struct.b, %struct.b* %b13, i32 0, i32 0, !dbg !102, !phasar.instruction.id !103, ID: 47 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: %7 = load i8*, i8** %taint14, align 8, !dbg !102, !phasar.instruction.id !104, ID: 48 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: store i8* %7, i8** %not_tainted1, align 8, !dbg !98, !phasar.instruction.id !105, ID: 49 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted2, metadata !106, metadata !34), !dbg !107, !phasar.instruction.id !108, ID: 50 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b15 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !109, !phasar.instruction.id !110, ID: 51 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %taint216 = getelementptr inbounds %struct.b, %struct.b* %b15, i32 0, i32 1, !dbg !111, !phasar.instruction.id !112, ID: 52 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %8 = load i8*, i8** %taint216, align 8, !dbg !111, !phasar.instruction.id !113, ID: 53 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: store i8* %8, i8** %not_tainted2, align 8, !dbg !107, !phasar.instruction.id !114, ID: 54 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted3, metadata !115, metadata !34), !dbg !116, !phasar.instruction.id !117, ID: 55 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted18 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !118, !phasar.instruction.id !119, ID: 56 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %9 = load i8*, i8** %tainted18, align 8, !dbg !118, !phasar.instruction.id !120, ID: 57 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

--- IFDS START RESULT RECORD ---
N: store i8* %9, i8** %tainted3, align 8, !dbg !116, !phasar.instruction.id !121, ID: 58 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%9 = load i8*, i8** %tainted18, align 8, !dbg !118, !phasar.instruction.id !120, ID: 57

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !122, !phasar.instruction.id !123, ID: 59 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted17 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.
instruction.id !42, ID: 14
A:	%tainted5 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%tainted3 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !41, !phasar.instruction.id !42, ID: 14
A:	%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
A:	%tainted = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1


