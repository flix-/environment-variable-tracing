0 2019-Jan-05 22:32:32.854331 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 22:32:32.854770 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 22:32:32.855119 - [INFO] No configuration file is used.
3 2019-Jan-05 22:32:32.855197 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 22:32:32.855295 - [INFO] Check program options for logical errors.
5 2019-Jan-05 22:32:32.855385 - [INFO] Set-up IR database.
6 2019-Jan-05 22:32:32.861648 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 22:32:32.861759 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 22:32:32.861820 - [INFO] 	main.ll
9 2019-Jan-05 22:32:32.861878 - [INFO] Check for chosen entry points.
10 2019-Jan-05 22:32:32.861939 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 22:32:32.861997 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 22:32:32.862057 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 22:32:32.862392 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 22:32:32.862539 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 22:32:32.862918 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 22:32:32.862981 - [INFO] Allocated Types    : 4
17 2019-Jan-05 22:32:32.863045 - [INFO] Allocation Sites   : 5
18 2019-Jan-05 22:32:32.863102 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 22:32:32.863160 - [INFO] Calls Sites        : 6
20 2019-Jan-05 22:32:32.863217 - [INFO] Functions          : 4
21 2019-Jan-05 22:32:32.863274 - [INFO] Globals            : 1
22 2019-Jan-05 22:32:32.863331 - [INFO] Global Pointer     : 1
23 2019-Jan-05 22:32:32.863388 - [INFO] Instructions       : 27
24 2019-Jan-05 22:32:32.863446 - [INFO] Memory Intrinsics  : 1
25 2019-Jan-05 22:32:32.863503 - [INFO] Store Instructions : 4
26 2019-Jan-05 22:32:32.863560 - [INFO]  
27 2019-Jan-05 22:32:32.863639 - [INFO]   i32
28 2019-Jan-05 22:32:32.863710 - [INFO]   %struct.a = type { i32, %struct.b }
29 2019-Jan-05 22:32:32.863775 - [INFO]   %struct.b = type { i8* }
30 2019-Jan-05 22:32:32.863838 - [INFO]   i8*
31 2019-Jan-05 22:32:32.864473 - [DEBUG] Analyzing function: main
32 2019-Jan-05 22:32:32.868863 - [INFO] Reconstruct the class hierarchy.
33 2019-Jan-05 22:32:32.868935 - [INFO] Construct type hierarchy
34 2019-Jan-05 22:32:32.868996 - [DEBUG] Analyse types in module: main.ll
35 2019-Jan-05 22:32:32.869240 - [DEBUG] Reconstruct virtual function table for module: main.ll
36 2019-Jan-05 22:32:32.869391 - [INFO] Reconstruction of class hierarchy completed.
37 2019-Jan-05 22:32:32.869455 - [INFO] Starting CallGraphAnalysisType: OTF
38 2019-Jan-05 22:32:32.869703 - [DEBUG] Walking in function: main
39 2019-Jan-05 22:32:32.869784 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.a* %s1, metadata !18, metadata !28), !dbg !29, !phasar.instruction.id !30, ID: 7
40 2019-Jan-05 22:32:32.870176 - [DEBUG] Found 1 possible target(s)
41 2019-Jan-05 22:32:32.870236 - [DEBUG] Target name: llvm.dbg.declare
42 2019-Jan-05 22:32:32.870318 - [DEBUG] Walking in function: llvm.dbg.declare
43 2019-Jan-05 22:32:32.870380 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
44 2019-Jan-05 22:32:32.870444 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
45 2019-Jan-05 22:32:32.870804 - [DEBUG] Found 1 possible target(s)
46 2019-Jan-05 22:32:32.870863 - [DEBUG] Target name: getenv
47 2019-Jan-05 22:32:32.870943 - [DEBUG] Walking in function: getenv
48 2019-Jan-05 22:32:32.871005 - [DEBUG] Function already visited or only declaration: getenv
49 2019-Jan-05 22:32:32.871088 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41, ID: 12
50 2019-Jan-05 22:32:32.871409 - [DEBUG] Found 1 possible target(s)
51 2019-Jan-05 22:32:32.871468 - [DEBUG] Target name: llvm.dbg.declare
52 2019-Jan-05 22:32:32.871543 - [DEBUG] Walking in function: llvm.dbg.declare
53 2019-Jan-05 22:32:32.871625 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
54 2019-Jan-05 22:32:32.871690 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50, ID: 17
55 2019-Jan-05 22:32:32.872009 - [DEBUG] Found 1 possible target(s)
56 2019-Jan-05 22:32:32.872068 - [DEBUG] Target name: llvm.dbg.declare
57 2019-Jan-05 22:32:32.872143 - [DEBUG] Walking in function: llvm.dbg.declare
58 2019-Jan-05 22:32:32.872205 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
59 2019-Jan-05 22:32:32.872269 - [DEBUG] Found static call-site: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56, ID: 21
60 2019-Jan-05 22:32:32.872602 - [DEBUG] Found 1 possible target(s)
61 2019-Jan-05 22:32:32.872661 - [DEBUG] Target name: llvm.memcpy.p0i8.p0i8.i64
62 2019-Jan-05 22:32:32.872738 - [DEBUG] Walking in function: llvm.memcpy.p0i8.p0i8.i64
63 2019-Jan-05 22:32:32.872800 - [DEBUG] Function already visited or only declaration: llvm.memcpy.p0i8.p0i8.i64
64 2019-Jan-05 22:32:32.872863 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59, ID: 22
65 2019-Jan-05 22:32:32.873179 - [DEBUG] Found 1 possible target(s)
66 2019-Jan-05 22:32:32.873239 - [DEBUG] Target name: llvm.dbg.declare
67 2019-Jan-05 22:32:32.873313 - [DEBUG] Walking in function: llvm.dbg.declare
68 2019-Jan-05 22:32:32.873375 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
69 2019-Jan-05 22:32:32.873438 - [INFO] Call graph has been constructed
70 2019-Jan-05 22:32:32.873499 - [INFO] Performing analysis: plugin
71 2019-Jan-05 22:32:32.873566 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/MonoIntraEnvironmentVariableTracing/libMonoIntraEnvironmentVariableTracing.so'
72 2019-Jan-05 22:32:32.874079 - [INFO] Solving plugin: monoIntraEnvironmentVariableTracing
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/MonoIntraEnvironmentVariableTracing/libMonoIntraEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %tainted = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %s2_inner = alloca %struct.b, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata %struct.a* %s1, metadata !18, metadata !28), !dbg !29, !phasar.instruction.id !30
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============

Added line number: 18

  %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============

Added line number: 18

  %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============

Added line number: 18

  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============

Added line number: 18
Added line number: 18

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============

Added line number: 18
Added line number: 18

  %b1 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============

Added line number: 18
Added line number: 18

  %taint2 = getelementptr inbounds %struct.b, %struct.b* %b1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============

Added line number: 18
Added line number: 18

  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 18
Added line number: 18
Added line number: 20

  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20

  call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20

  %b3 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20

  %1 = bitcast %struct.b* %b3 to i8*, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20

  %2 = bitcast %struct.b* %s2_inner to i8*, !dbg !53, !phasar.instruction.id !55
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20

  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56
Got memcpy/memmove instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20

  %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20

  %taint5 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20

  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
=============

Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20
Added line number: 25

  store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
=============

Added line number: 25
Added line number: 20
Added line number: 18
Added line number: 18
Added line number: 20
Added line number: 25

  %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============


  %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============


  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============


  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============


  %b1 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============


  %taint2 = getelementptr inbounds %struct.b, %struct.b* %b1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
=============


  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  %b3 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  %1 = bitcast %struct.b* %b3 to i8*, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  %2 = bitcast %struct.b* %s2_inner to i8*, !dbg !53, !phasar.instruction.id !55
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56
Got memcpy/memmove instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  %taint5 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
=============


  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
=============


  store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65
  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
=============


  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56
Got memcpy/memmove instruction
Removed 0 memory locations from facts

  %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34

  %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36

  %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction
Removed 0 memory locations from facts

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41
Got call instruction

  call void @llvm.dbg.declare(metadata %struct.a* %s1, metadata !18, metadata !28), !dbg !29, !phasar.instruction.id !30
Got call instruction

  %s2_inner = alloca %struct.b, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %b1 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43

  %taint2 = getelementptr inbounds %struct.b, %struct.b* %b1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45

  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
Got load instruction
Adding load instruction fact

  call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50
Got call instruction

  %b3 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52

  %1 = bitcast %struct.b* %b3 to i8*, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)

  %2 = bitcast %struct.b* %s2_inner to i8*, !dbg !53, !phasar.instruction.id !55
Got operands checking instruction (bitcast)

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59
Got call instruction

  %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61

  %taint5 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63

  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
Got load instruction
Adding load instruction fact

  ret i32 0, !dbg !66, !phasar.instruction.id !67worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56, ID: 21
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65, ID: 26
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15
%3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64, ID: 25


Instruction:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%not_tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41, ID: 12
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
call void @llvm.dbg.declare(metadata %struct.a* %s1, metadata !18, metadata !28), !dbg !29, !phasar.instruction.id !30, ID: 7
Facts:
	EMPTY


Instruction:
%s2_inner = alloca %struct.b, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%b1 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 13
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%taint2 = getelementptr inbounds %struct.b, %struct.b* %b1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 14
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50, ID: 17
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%b3 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52, ID: 18
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%1 = bitcast %struct.b* %b3 to i8*, !dbg !53, !phasar.instruction.id !54, ID: 19
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%2 = bitcast %struct.b* %s2_inner to i8*, !dbg !53, !phasar.instruction.id !55, ID: 20
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59, ID: 22
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%b4 = getelementptr inbounds %struct.a, %struct.a* %s73 2019-Jan-05 22:32:32.947671 - [INFO] Write results to file
74 2019-Jan-05 22:32:32.947882 - [INFO] Shutdown llvm and the analysis framework.

1, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61, ID: 23
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%taint5 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63, ID: 24
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64, ID: 25
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
ret i32 0, !dbg !66, !phasar.instruction.id !67, ID: 27
Facts:
store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65, ID: 26
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15
%3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64, ID: 25


