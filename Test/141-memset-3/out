PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41
[TRACK] Destination:
[TRACK]   %t13 = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33
[TRACK] Destination:
[TRACK] i8* %0### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 3, i32 8, i1 false), !dbg !46, !phasar.instruction.id !48, ID: 16 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	%0 = bitcast i8** %t12 to i8*, !dbg !46, !phasar.instruction.id !47, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35, ID: 9
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 8

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !17, metadata !27), !dbg !28, !phasar.instruction.id !29, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t13 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35, ID: 9 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35, ID: 9
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	store i8* %call, i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35, ID: 9
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 8

--- IFDS START RESULT RECORD ---
N: %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35, ID: 9
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35, ID: 9
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t12 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 14 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call, i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35, ID: 9
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 8

--- IFDS START RESULT RECORD ---
N: %0 = bitcast i8** %t12 to i8*, !dbg !46, !phasar.instruction.id !47, ID: 15 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !34, !phasar.instruction.id !35, ID: 9
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t13, metadata !49, metadata !27), !dbg !50, !phasar.instruction.id !51, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = bitcast i8** %t12 to i8*, !dbg !46, !phasar.instruction.id !47, ID: 15

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

--- IFDS START RESULT RECORD ---
N: %s24 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 18 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	%0 = bitcast i8** %t12 to i8*, !dbg !46, !phasar.instruction.id !47, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t25 = getelementptr inbounds %struct.s2, %struct.s2* %s24, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55, ID: 19 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	%0 = bitcast i8** %t12 to i8*, !dbg !46, !phasar.instruction.id !47, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %t25, align 8, !dbg !54, !phasar.instruction.id !56, ID: 20 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = bitcast i8** %t12 to i8*, !dbg !46, !phasar.instruction.id !47, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %t13, align 8, !dbg !50, !phasar.instruction.id !57, ID: 21 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	%0 = bitcast i8** %t12 to i8*, !dbg !46, !phasar.instruction.id !47, ID: 15

D:	%1 = load i8*, i8** %t25, align 8, !dbg !54, !phasar.instruction.id !56, ID: 20

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %ut1, metadata !58, metadata !27), !dbg !59, !phasar.instruction.id !60, ID: 22 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%t13 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %t16 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !61, !phasar.instruction.id !62, ID: 23 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%t13 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %t16, align 8, !dbg !61, !phasar.instruction.id !63, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%t13 = alloca i8*, align 8, !phasar.instruc
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549752631-trace.txt
tion.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %ut1, align 8, !dbg !59, !phasar.instruction.id !64, ID: 25 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%t13 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !65, !phasar.instruction.id !66, ID: 26 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 10

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%t13 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call1, i8** %t2, align 8, !dbg !42, !phasar.instruction.id !43, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !38, !phasar.instruction.id !39, ID: 11
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1


