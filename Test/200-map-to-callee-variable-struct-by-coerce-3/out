PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_main, metadata !92, metadata !28), !dbg !93, !phasar.instruction.id !94

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28

getNormalFlowFunction()
  %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30

Got GEP instruction
getNormalFlowFunction()
  store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32

Got store instruction
getNormalFlowFunction()
  %0 = bitcast %struct.s1* %str_main to { i64, i8* }*, !dbg !33, !phasar.instruction.id !34

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !dbg !33, !phasar.instruction.id !35

Got GEP instruction
getNormalFlowFunction()
  %2 = load i64, i64* %1, align 8, !dbg !33, !phasar.instruction.id !36

Got load instruction
getNormalFlowFunction()
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !dbg !33, !phasar.instruction.id !37

Got GEP instruction
getNormalFlowFunction()
  %4 = load i8*, i8** %3, align 8, !dbg !33, !phasar.instruction.id !38

Got load instruction
getSummaryFlowFunction()
  call void @foo(i64 %2, i8* %4, i32 42), !dbg !33, !phasar.instruction.id !39

getCallFlowFunction()
  call void @foo(i64 %2, i8* %4, i32 42), !dbg !33, !phasar.instruction.id !39

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i64 %str_foo.coerce0
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i8* %str_foo.coerce1
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
getNormalFlowFunction()
  %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a.addr = alloca i32, align 4, !phasar.instruction.id !21

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %still_tainted = alloca i8*, align 8, !phasar.instruction.id !23

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %0 = bitcast %struct.s1* %str_foo to { i64, i8* }*, !phasar.instruction.id !24

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !phasar.instruction.id !25

Got GEP instruction
getNormalFlowFunction()
  store i64 %str_foo.coerce0, i64* %1, align 8, !phasar.instruction.id !26

Got store instruction
[TRACK] Patched memory location (arg / store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i64 %str_foo.coerce0
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
getNormalFlowFunction()
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !phasar.instruction.id !27

Got GEP instruction
getNormalFlowFunction()
  store i8* %str_foo.coerce1, i8** %2, align 8, !phasar.instruction.id !28

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_foo, metadata !56, metadata !28), !dbg !57, !phasar.instruction.id !58

getNormalFlowFunction()
  store i32 %a, i32* %a.addr, align 4, !phasar.instruction.id !33

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !60, metadata !28), !dbg !61, !phasar.instruction.id !62

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted_foo, metadata !63, metadata !28), !dbg !64, !phasar.instruction.id !65

getNormalFlowFunction()
  %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_foo, i32 0, i32 2, !dbg !40, !phasar.instruction.id !41

Got GEP instruction
getNormalFlowFunction()
  %3 = load i8*, i8** %tainted1, align 8, !dbg !40, !phasar.instruction.id !42

Got load instruction
getNormalFlowFunction()
  store i8* %3, i8** %tainted_foo, align 8, !dbg !38, !phasar.instruction.id !43

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22
getNormalFlowFunction()
  %4 = bitcast %struct.s1* %str_foo to { i64, i8* }*, !dbg !44, !phasar.instruction.id !45

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i32 0, i32 0, !dbg !44, !phasar.instruction.id !46

Got GEP instruction
getNormalFlowFunction()
  %6 = load i64, i64* %5, align 8, !dbg !44, !phasar.instruction.id !47

Got load instruction
getNormalFlowFunction()
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i32 0, i32 1, !dbg !44, !phasar.instruction.id !48

Got GEP instruction
getNormalFlowFunction()
  %8 = load i8*, i8** %7, align 8, !dbg !44, !phasar.instruction.id !49

Got load instruction
getSummaryFlowFunction()
  call void @bar(i64 %6, i8* %8), !dbg !44, !phasar.instruction.id !50

getCallFlowFunction()
  call void @bar(i64 %6, i8* %8), !dbg !44, !phasar.instruction.id !50

getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !77, metadata !28), !dbg !78, !phasar.instruction.id !79

getNormalFlowFunction()
  %tainted11 = getelementptr inbounds %struct.s1, %struct.s1* %str_foo, i32 0, i32 2, !dbg !54, !phasar.instruction.id !55

Got GEP instruction
getNormalFlowFunction()
  %9 = load i8*, i8** %tainted11, align 8, !dbg !54, !phasar.instruction.id !56

Got load instruction
getNormalFlowFunction()
  store i8* %9, i8** %still_tainted, align 8, !dbg !52, !phasar.instruction.id !57

Got store instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @bar(i64 %6, i8* %8), !dbg !44, !phasar.instruction.id !50

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i64 %str_bar.coerce0
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i8* %str_bar.coerce1
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
getNormalFlowFunction()
  %str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %tainted_bar = alloca i8*, align 8, !phasar.instruction.id !21

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %0 = bitcast %struct.s1* %str_bar to { i64, i8* }*, !phasar.instruction.id !22

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !phasar.instruction.id !23

Got GEP instruction
getNormalFlowFunction()
  store i64 %str_bar.coerce0, i64* %1, align 8, !phasar.instruction.id !24

Got store instruction
[TRACK] Patched memory location (arg / store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i64 %str_bar.coerce0
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
getNormalFlowFunction()
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !phasar.instruction.id !25

Got GEP instruction
getNormalFlowFunction()
  store i8* %str_bar.coerce1, i8** %2, align 8, !phasar.instruction.id !26

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_bar, metadata !27, metadata !28), !dbg !29, !phasar.instruction.id !30

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted_bar, metadata !31, metadata !28), !dbg !32, !phasar.instruction.id !33

getNormalFlowFunction()
  %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_bar, i32 0, i32 2, !dbg !34, !phasar.instruction.id !35

Got GEP instruction
getNormalFlowFunction()
  %3 = load i8*, i8** %tainted1, align 8, !dbg !34, !phasar.instruction.id !36

Got load instruction
getNormalFlowFunction()
  store i8* %3, i8** %tainted_bar, align 8, !dbg !32, !phasar.instruction.id !37

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %tainted_bar = alloca i8*, align 8, !phasar.instruction.id !21
getNormalFlowFunction()
  %tainted11 = getelementptr inbounds %struct.s1, %struct.s1* %str_bar, i32 0, i32 2, !dbg !38, !phasar.instruction.id !39

Got GEP instruction
getNormalFlowFunction()
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8** %tainted11, align 8, !dbg !40, !phasar.instruction.id !41

Got store instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getRetFlowFunction()
[TRACK] Patched memory location (arg / store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i8* %str_bar.coerce1
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_bar, metadata !27, metadata !28), !dbg !29, !phasar.instruction.id !30

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted_bar, metadata !31, metadata !28), !dbg !32, !phasar.instruction.id !33

[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %tainted_bar = alloca i8*, align 8, !phasar.instruction.id !21
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !77, metadata !28), !dbg !78, !phasar.instruction.id !79

[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %still_tainted = alloca i8*, align 8, !phasar.instruction.id !23
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getRetFlowFunction()
[TRACK] Patched memory location (arg / store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i8* %str_foo.coerce1
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_foo, metadata !56, metadata !28), !dbg !57, !phasar.instruction.id !58

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !60, metadata !28), !dbg !61, !phasar.instruction.id !62

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted_foo, metadata !63, metadata !28), !dbg !64, !phasar.instruction.id !65

[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22
getSummaryFlowFunction()
  call void @bar(i64 %6, i8* %8), !dbg !44, !phasar.instruction.id !50

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !77, metadata !28), !dbg !78, !phasar.instruction.id !79

getSummaryFlowFunction()
  call void @bar(i64 %6, i8* %8), !dbg !44, !phasar.instruction.id !50

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i64 %str_bar.coerce0
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i8* %str_bar.coerce1
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !77, metadata !28), !dbg !78, !phasar.instruction.id !79

[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %still_tainted = alloca i8*, align 8, !phasar.instruction.id !23
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @foo(i64 %2, i8* %4, i32 42), !dbg !33, !phasar.instruction.id !39

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_foo, metadata !56, metadata !28), !dbg !57, !phasar.instruction.id !58

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !60, metadata !28), !dbg !61, !phasar.instruction.id !62

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted_foo, metadata !63, metadata !28), !dbg !64, !phasar.instruction.id !65

getSummaryFlowFunction()
  call void @bar(i64 %6, i8* %8), !dbg !44, !phasar.instruction.id !50

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_bar, metadata !27, metadata !28), !dbg !29, !phasar.instruction.id !30

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted_bar, metadata !31, metadata !28), !dbg !32, !phasar.instruction.id !33

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !77, metadata !28), !dbg !78, !phasar.instruction.id !79

getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_main, metadata !92, metadata !28), !dbg !93, !phasar.instruction.id !94

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_foo, metadata !56, metadata !28), !dbg !57, !phasar.instruction.id !58

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !60, metadata !28), !dbg !61, !phasar.instruction.id !62

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted_foo, metadata !63, metadata !28), !dbg !64, !phasar.instruction.id !65

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %str_bar, metadata !27, metadata !28), !dbg !29, !phasar.instruction.id !30

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted_bar, metadata !31, metadata !28), !dbg !32, !phasar.instruction.id !33

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !77, metadata !28), !dbg !78, !phasar.instruction.id !79

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i64 %str_foo.coerce0
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i8* %str_foo.coerce1
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i64 %str_bar.coerce0
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK]   %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32
[TRACK] i8* %str_bar.coerce1
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !phasar.instruction.id !23, ID: 5 in function: bar
D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_bar.coerce0, ID: bar.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_bar.coerce1, ID: bar.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s1* %str_bar to { i64, i8* }*, !phasar.instruction.id !22, ID: 4 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_bar.coerce1, ID: bar.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_bar.coerce0, ID: bar.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_foo.coerce0, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_foo.coerce1, ID: foo.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %tainted_bar = alloca i8*, align 8, !phasar.instruction.id !21, ID: 3 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_bar.coerce0, ID: bar.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_bar.coerce1, ID: bar.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8** %tainted11, align 8, !dbg !40, !phasar.instruction.id !41, ID: 15 in function: bar
D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_bar = alloca i8*, align 8, !phasar.instruction.id !21, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %tainted_bar, align 8, !dbg !32, !phasar.instruction.id !37, ID: 13 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%3 = load i8*, i8** %tainted1, align 8, !dbg !34, !phasar.instruction.id !36, ID: 12

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !phasar.instruction.id !25, ID: 7 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_bar.coerce1, ID: bar.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: store i8* %str_bar.coerce1, i8** %2, align 8, !phasar.instruction.id !26, ID: 8 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_bar.coerce1, ID: bar.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: store i64 %str_bar.coerce0, i64* %1, align 8, !phasar.instruction.id !24, ID: 6 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_bar.coerce0, ID: bar.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_bar.coerce1, ID: bar.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %str_bar, metadata !27, metadata !28), !dbg !29, !phasar.instruction.id !30, ID: 9 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_bar.coerce0, ID: bar.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_bar.coerce1, ID: bar.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %tainted1, align 8, !dbg !34, !phasar.instruction.id !36, ID: 12 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted_bar, metadata !31, metadata !28), !dbg !32, !phasar.instruction.id !33, ID: 10 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_bar, i32 0, i32 2, !dbg !34, !phasar.instruction.id !35, ID: 11 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %tainted11 = getelementptr inbounds %struct.s1, %struct.s1* %str_bar, i32 0, i32 2, !dbg !38, !phasar.instruction.id !39, ID: 14 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_bar = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 2
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_bar = alloca i8*, align 8, !phasar.instruction.id !21, ID: 3

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !42, !phasar.instruction.id !43, ID: 16 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_bar = alloca i8*, align 8, !phasar.instruction.id !21, ID: 3

--- IFDS START RESULT RECORD ---
N: %a.addr = alloca i32, align 4, !phasar.instruction.id !21, ID: 18 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_foo.coerce0, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_foo.coerce1, ID: foo.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_foo.coerce0, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_foo.coerce1, ID: foo.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %still_tainted = alloca i8*, align 8, !phasar.instruction.id !23, ID: 20 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_foo.coerce0, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_foo.coerce1, ID: foo.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s1* %str_foo to { i64, i8* }*, !phasar.instruction.id !24, ID: 21 in function: foo
D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_foo.coerce1, ID: foo.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_foo.coerce0, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !phasar.instruction.id !25, ID: 22 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_foo.coerce0, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_foo.coerce1, ID: foo.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: store i64 %str_foo.coerce0, i64* %1, align 8, !phasar.instruction.id !26, ID: 23 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i64 %str_foo.coerce0, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_foo.coerce1, ID: foo.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !phasar.instruction.id !27, ID: 24 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_foo.coerce1, ID: foo.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: store i8* %str_foo.coerce1, i8** %2, align 8, !phasar.instruction.id !28, ID: 25 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	i8* %str_foo.coerce1, ID: foo.1
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %str_foo, metadata !56, metadata !28), !dbg !57, !phasar.instruction.id !58, ID: 26 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: store i32 %a, i32* %a.addr, align 4, !phasar.instruction.id !33, ID: 27 in function: foo
D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !60, metadata !28), !dbg !61, !phasar.instruction.id !62, ID: 28 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted_foo, metadata !63, metadata !28), !dbg !64, !phasar.instruction.id !65, ID: 29 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_foo, i32 0, i32 2, !dbg !40, !phasar.instruction.id !41, ID: 30 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %tainted1, align 8, !dbg !40, !phasar.instruction.id !42, ID: 31 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %tainted_foo, align 8, !dbg !38, !phasar.instruction.id !43, ID: 32 in function: foo
D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	%3 = load i8*, i8** %tainted1, align 8, !dbg !40, !phasar.instruction.id !42, ID: 31

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %4 = bitcast %struct.s1* %str_foo to { i64, i8* }*, !dbg !44, !phasar.instruction.id !45, ID: 33 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i32 0, i32 0, !dbg !44, !phasar.instruction.id !46, ID: 34 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %6 = load i64, i64* %5, align 8, !dbg !44, !phasar.instruction.id !47, ID: 35 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

--- IFDS START RESULT RECORD ---
N: %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i32 0, i32 1, !dbg !44, !phasar.instruction.id !48, ID: 36 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %8 = load i8*, i8** %7, align 8, !dbg !44, !phasar.instruction.id !49, ID: 37 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: call void @bar(i64 %6, i8* %8), !dbg !44, !phasar.instruction.id !50, ID: 38 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !77, metadata !28), !dbg !78, !phasar.instruction.id !79, ID: 39 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %tainted11 = getelementptr inbounds %struct.s1, %struct.s1* %str_foo, i32 0, i32 2, !dbg !54, !phasar.instruction.id !55, ID: 40 in function: foo
D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

--- IFDS START RESULT RECORD ---
N: %9 = load i8*, i8** %tainted11, align 8, !dbg !54, !phasar.instruction.id !56, ID: 41 in function: foo
D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %9, i8** %still_tainted, align 8, !dbg !52, !phasar.instruction.id !57, ID: 42 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%9 = load i8*, i8** %tainted11, align 8, !dbg !54, !phasar.instruction.id !56, ID: 41

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !58, !phasar.instruction.id !59, ID: 43 in function: foo
D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%tainted_foo = alloca i8*, align 8, !phasar.instruction.id !22, ID: 19

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_foo = alloca %struct.s1, align 8, !phasar.instruction.id !20, ID: 17
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%still_tainted = alloca i8*, align 8, !phasar.instruction.id !23, ID: 20

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 44 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 45 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 46 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %str_main, metadata !92, metadata !28), !dbg !93, !phasar.instruction.id !94, ID: 47 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 48 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 48

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5
 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 48

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s1* %str_main to { i64, i8* }*, !dbg !33, !phasar.instruction.id !34, ID: 51 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 45
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !dbg !33, !phasar.instruction.id !35, ID: 52 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 45
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %2 = load i64, i64* %1, align 8, !dbg !33, !phasar.instruction.id !36, ID: 53 in function: main
D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 45
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !dbg !33, !phasar.instruction.id !37, ID: 54 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 45
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: %4 = load i8*, i8** %3, align 8, !dbg !33, !phasar.instruction.id !38, ID: 55 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 45
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: call void @foo(i64 %2, i8* %4, i32 42), !dbg !33, !phasar.instruction.id !39, ID: 56 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 45
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !40, !phasar.instruction.id !41, ID: 57 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted1, align 8, !dbg !31, !phasar.instruction.id !32, ID: 50
A:	%str_main = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 45
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %str_main, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 49


No IFDS report available!