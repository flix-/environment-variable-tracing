PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42
[TRACK] Destination:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !15### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17

D:	%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !19, metadata !36), !dbg !37, !phasar.instruction.id !38, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted2 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !43, !phasar.instruction.id !44, ID: 11 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %strings = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46, ID: 12 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 0, !dbg !47, !phasar.instruction.id !48, ID: 13 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !51, metadata !36), !dbg !52, !phasar.instruction.id !53, ID: 15 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u2 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55, ID: 16 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

--- IFDS START RESULT RECORD ---
N: %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %strings5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65, ID: 22 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings5, i64 0, i64 1, !dbg !66, !phasar.instruction.id !67, ID: 23 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !68, !phasar.instruction.id !69, ID: 24 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !70, metadata !36), !dbg !71, !phasar.instruction.id !72, ID: 25 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u7 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !73, !phasar.instruction.id !74, ID: 26 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s8 = bitcast %union.u1* %u7 to %struct.s2*, !dbg !75, !phasar.instruction.id !76, ID: 27 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

--- IFDS START RESULT RECORD ---
N: %strings9 = getelementptr inbounds %struct.s2, %struct.s2* %s8, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78, ID: 28 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings9, i64 0, i64 0, !dbg !79, !phasar.instruction.id !80, ID: 29 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %arrayidx10, align 8, !dbg !79, !phasar.instruction.id !81, ID: 30 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %not_tainted, align 8, !dbg !71, !phasar.instruction.id !82, ID: 31 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted2, metadata !83, metadata !36), !dbg !84, !phasar.instruction.id !85, ID: 32 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u11 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !86, !phasar.instruction.id !87, ID: 33 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s12 = bitcast %union.u1* %u11 to %struct.s2*, !dbg !88, !phasar.instruction.id !89, ID: 34 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %strings13 = getelementptr inbounds %struct.s2, %struct.s2* %s12, i32 0, i32 0, !dbg !90, !phasar.instruction.id !91, ID: 35 in function: main
D:	@zero_value = cons
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549639296-trace.txt
tant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %arrayidx14 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings13, i64 0, i64 1, !dbg !92, !phasar.instruction.id !93, ID: 36 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %arrayidx14, align 8, !dbg !92, !phasar.instruction.id !94, ID: 37 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %not_tainted2, align 8, !dbg !84, !phasar.instruction.id !95, ID: 38 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !96, !phasar.instruction.id !97, ID: 39 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1


