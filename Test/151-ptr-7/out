PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46
[TRACK] Destination:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50
[TRACK]   %s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50
[TRACK]   %s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !15### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !19, metadata !37), !dbg !38, !phasar.instruction.id !39, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s3* %s3, metadata !40, metadata !37), !dbg !41, !phasar.instruction.id !42, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s32 = alloca %struct.s3, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

--- IFDS START RESULT RECORD ---
N: %s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

--- IFDS START RESULT RECORD ---
N: store %struct.s3* %s3, %struct.s3** %s31, align 8, !dbg !53, !phasar.instruction.id !54, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !55, metadata !37), !dbg !56, !phasar.instruction.id !57, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

--- IFDS START RESULT RECORD ---
N: %s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !58, !phasar.instruction.id !59, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

--- IFDS START RESULT RECORD ---
N: %s33 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 2, !dbg !60, !phasar.instruction.id !61, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

--- IFDS START RESULT RECORD ---
N: %0 = load %struct.s3*, %struct.s3** %s33, align 8, !dbg !60, !phasar.instruction.id !62, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

--- IFDS START RESULT RECORD ---
N: %t34 = getelementptr inbounds %struct.s3, %struct.s3* %0, i32 0, i32 2, !dbg !63, !phasar.instruction.id !64, ID: 20 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %t34, align 8, !dbg !63, !phasar.instruction.id !65, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %t1, align 8, !dbg !56, !phasar.instruction.id !66, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s3* %s32, metadata !67, metadata !37), !dbg !68, !phasar.instruction.id !69, ID: 23 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

--- IFDS START RESULT RECORD ---
N: %s25 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !70, !phasar.instruction.id !71, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %s36 = getelementptr inbounds %struct.s2, %struct.s2* %s25, i32 0, i32 2, !dbg !72, !phasar.instruction.id !73, ID: 25 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store %struct.s3* %s32, %struct.s3** %s36, align 8, !dbg !74, !phasar.instruction.id !75, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%s31 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !51, !phasar.instruction.id !52, ID: 14
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %ut1, metadata !76, metadata !37), !dbg !77, !phasar.instruction.id !78, ID: 27 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %s27 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !79, !phasar.instruction.id !80, ID: 28 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

--- IFDS START RESULT RECORD ---
N: %s38 = getelementptr inbounds %struct.s2, %struct.s2* %s27, i32 0, i32 2, !dbg !81, !phasar.instruction.id !82, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %2 = load %struct.s3*, %struct.s3** %s38, align 8, !dbg !81, !phasar.instruction.id !83, ID: 30 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550323352-trace.txt
0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %t39 = getelementptr inbounds %struct.s3, %struct.s3* %2, i32 0, i32 2, !dbg !84, !phasar.instruction.id !85, ID: 31 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %t39, align 8, !dbg !84, !phasar.instruction.id !86, ID: 32 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %ut1, align 8, !dbg !77, !phasar.instruction.id !87, ID: 33 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !88, !phasar.instruction.id !89, ID: 34 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !14, ID: 3
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 2, !dbg !45, !phasar.instruction.id !46, ID: 11

D:	store i8* %call, i8** %t3, align 8, !dbg !47, !phasar.instruction.id !48, ID: 12
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4


