PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !19, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %no_taint = alloca i32, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %taint, metadata !23, metadata !20), !dbg !24, !phasar.instruction.id !25, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %taint, align 4, !dbg !29, !phasar.instruction.id !30, ID: 12 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !48, !phasar.instruction.id !49, ID: 21 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13
L:	sw.epilog

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !44, metadata !20), !dbg !45, !phasar.instruction.id !46, ID: 19

D:	store i32 2, i32* %b, align 4, !dbg !45, !phasar.instruction.id !47, ID: 20
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 24 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !35, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 2, i32* %b, align 4, !dbg !45, !phasar.instruction.id !47, ID: 20
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !44, metadata !20), !dbg !45, !phasar.instruction.id !46, ID: 19

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !38, metadata !20), !dbg !39, !phasar.instruction.id !40, ID: 16

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i32 1, i32* %a, align 4, !dbg !39, !phasar.instruction.id !41, ID: 17
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !42, !phasar.instruction.id !43, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %a, align 4, !dbg !39, !phasar.instruction.id !41, ID: 17
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !38, metadata !20), !dbg !39, !phasar.instruction.id !40, ID: 16

D:	switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13
L:	sw.epilog

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

--- IFDS START RESULT RECORD ---
N: switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !35, ID: 14 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !36, !phasar.instruction.id !37, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !35, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13
L:	sw.epilog

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !38, metadata !20), !dbg !39, !phasar.instruction.id !40, ID: 16 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %a, align 4, !dbg !39, !phasar.instruction.id !41, ID: 17 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13
L:	sw.epilog

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !38, metadata !20), !dbg !39, !phasar.instruction.id !40, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !44, metadata !20), !dbg !45, !phasar.instruction.id !46, ID: 19 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13
L:	sw.epilog

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %b, align 4, !dbg !45, !phasar.instruction.id !47, ID: 20 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13
L:	sw.epilog

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !44, metadata !20), !dbg !45, !phasar.instruction.id !46, ID: 19

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %no_taint, metadata !50, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 22 in function: main
D:	switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !31, !phasar.instruction.id !32, ID: 13
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 2, i32* %b, align 4, !dbg !45, !phasar.instruction.id !47, ID: 20
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !44, metadata !20), !dbg !45, !phasar.instruction.id !46, ID: 19

D:	store i32 1, i32* %a, align 4, !dbg !39, !phasar.instruction.id !41, ID: 17
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !35, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !38, metadata !20), !dbg !39, !phasar.instruction.id !40, ID: 16

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %no_taint, align 4, !dbg !51, !phasar.instruction.id !53, ID: 23 in function: main
D:	store i32 2, i32* %b, align 4, !dbg !45, !phasar.instruction.id !47, ID: 20
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !44, metadata !20), !dbg !45, !phasar.instruction.id !46, ID: 19

D:	store i32 1, i32* %a, align 4, !dbg !3[TRACK] Searching end of block label for: entry
[TRACK] End of closed block label: sw.epilog
[TRACK] End of block label: sw.epilog
[TRACK] Searching end of block label for: entry
[TRACK] End of closed block label: sw.epilog
[TRACK] End of block label: sw.epilog
[TRACK] Searching end of block label for: entry
[TRACK] End of closed block label: sw.epilog
[TRACK] End of block label: sw.epilog
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550328193-trace.txt
9, !phasar.instruction.id !41, ID: 17
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !38, metadata !20), !dbg !39, !phasar.instruction.id !40, ID: 16

D:	store i32 1, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !35, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

--- IFDS START RESULT RECORD ---
N: ret i32 %1, !dbg !56, !phasar.instruction.id !57, ID: 25 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 10

D:	store i32 %call, i32* %taint, align 4, !dbg !24, !phasar.instruction.id !28, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !35, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !38, metadata !20), !dbg !39, !phasar.instruction.id !40, ID: 16

D:	store i32 1, i32* %a, align 4, !dbg !39, !phasar.instruction.id !41, ID: 17
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !44, metadata !20), !dbg !45, !phasar.instruction.id !46, ID: 19

D:	store i32 2, i32* %b, align 4, !dbg !45, !phasar.instruction.id !47, ID: 20
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	ret i32 %1, !dbg !56, !phasar.instruction.id !57, ID: 25

D:	@zero_value = constant i2 0, align 4, ID: -1


