PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
Line numbers output file: main-line-numbers.txt
[TRACK] Checking end of branch label for: for.body
[TRACK] End of branch label: for.end5
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %j = alloca i32, align 4, !phasar.instruction.id !15
[TRACK] Destination:
[TRACK]   %rc = alloca i32, align 4, !phasar.instruction.id !13
[TRACK] Checking end of branch label for: for.body2
[TRACK] End of branch label: for.end
[TRACK] Checking end of branch label for: for.body2
[TRACK] End of branch label: for.end
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %j = alloca i32, align 4, !phasar.instruction.id !15
[TRACK] Destination:
[TRACK]   %rc = alloca i32, align 4, !phasar.instruction.id !13### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20 in function: main
D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	%1 = load i32, i32* %j, align 4, !dbg !49, !phasar.instruction.id !51, ID: 19

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	%0 = load i32, i32* %j, align 4, !dbg !42, !phasar.instruction.id !44, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14 in function: main
D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %j, metadata !34, metadata !18), !dbg !37, !phasar.instruction.id !38, ID: 13

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !30, ID: 10

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !30, ID: 10 in function: main
D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !17, metadata !18), !dbg !19, !phasar.instruction.id !20, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %i, align 4, !dbg !23, !phasar.instruction.id !25, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %i, metadata !21, metadata !18), !dbg !23, !phasar.instruction.id !24, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %for.cond, !dbg !26, !phasar.instruction.id !27, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %call, 0, !dbg !31, !phasar.instruction.id !32, ID: 11 in function: main
D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !30, ID: 10

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %j, align 4, !dbg !42, !phasar.instruction.id !44, ID: 16 in function: main
D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %4 = load i32, i32* %rc, align 4, !dbg !74, !phasar.instruction.id !75, ID: 31 in function: main
D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !30, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12 in function: main
D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !30, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool = icmp ne i32 %call, 0, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %j, metadata !34, metadata !18), !dbg !37, !phasar.instruction.id !38, ID: 13 in function: main
D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !30, ID: 10

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %for.cond1, !dbg !40, !phasar.instruction.id !41, ID: 15 in function: main
D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp slt i32 %0, 10, !dbg !45, !phasar.instruction.id !46, ID: 17 in function: main
D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	%0 = load i32, i32* %j, align 4, !dbg !42, !phasar.instruction.id !44, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %j, align 4, !dbg !49, !phasar.instruction.id !51, ID: 19 in function: main
D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	%0 = load i32, i32* %j, align 4, !dbg !42, !phasar.instruction.id !44, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %3 = load i32, i32* %i, align 4, !dbg !66, !phasar.instruction.id !67, ID: 27 in function: main
D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%0 = load i32, i32* %j, align 4, !dbg !42, !phasar.instruction.id !44, ID: 16

--- IFDS START RESULT RECORD ---
N: br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18 in function: main
D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	%cmp = icmp slt i32 %0, 10, !dbg !45, !phasar.instruction.id !46, ID: 17

D:	%0 = load i32, i32* %j, align 4, !dbg !42, !phasar.instruction.id !44, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %j, align 4, !dbg !56, !phasar.instruction.id !57, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %for.inc, !dbg !54, !phasar.instruction.id !55, ID: 21 in function: main
D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %inc = add nsw i32 %2, 1, !dbg !56, !phasar.instruction.id !58, ID: 23 in function: main
D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%2 = load i32, i32* %j, align 4, !dbg !56, !phasar.instruction.id !57, ID: 22

D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24 in function: main
D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	%inc = add nsw i32 %2, 1, !dbg !56, !phasar.instruction.id !58, ID: 23

D:	%2 = load i32, i32* %j, align 4, !dbg !56, !phasar.instruction.id !57, ID: 22

D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %for.cond1, !dbg !60, !llvm.loop !61, !phasar.instruction.id !63, ID: 25 in function: main
D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

--- IFDS START RESULT RECORD ---
N: br label %for.inc3, !dbg !64, !phasar.instruction.id !65, ID: 26 in function: main
D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %cmp, label %for.body2, label %for.end, !dbg !47, !phasar.instruction.id !48, ID: 18
L:	for.end

D:	%0 = load i32, i32* %j, align 4, !dbg !42, !phasar.instruction.id !44, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %inc4 = add nsw i32 %3, 1, !dbg !66, !phasar.instruction.id !68, ID: 28 in function: main
D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	%3 = load i32, i32* %i, align 4, !dbg !66, !phasar.instruction.id !67, ID: 27

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	%0 = load i32, i32* %j, align 4, !dbg !42, !phasar.instruction.id !44, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29 in function: main
D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%inc4 = add nsw i32 %3, 1, !dbg !66, !phasar.instruction.id !68, ID: 28

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	%
[TRACK] Checking end of branch label for: for.body
[TRACK] End of branch label: for.end5
3 = load i32, i32* %i, align 4, !dbg !66, !phasar.instruction.id !67, ID: 27

D:	%0 = load i32, i32* %j, align 4, !dbg !42, !phasar.instruction.id !44, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

--- IFDS START RESULT RECORD ---
N: br label %for.cond, !dbg !70, !llvm.loop !71, !phasar.instruction.id !73, ID: 30 in function: main
D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %tobool, label %for.body, label %for.end5, !dbg !31, !phasar.instruction.id !33, ID: 12
L:	for.end5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: ret i32 %4, !dbg !76, !phasar.instruction.id !77, ID: 32 in function: main
D:	store i32 %1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !53, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 0, i32* %j, align 4, !dbg !37, !phasar.instruction.id !39, ID: 14
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !30, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%4 = load i32, i32* %rc, align 4, !dbg !74, !phasar.instruction.id !75, ID: 31

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%j = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %inc, i32* %j, align 4, !dbg !56, !phasar.instruction.id !59, ID: 24
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %inc4, i32* %i, align 4, !dbg !66, !phasar.instruction.id !69, ID: 29
A:	%i = alloca i32, align 4, !phasar.instruction.id !14, ID: 3


