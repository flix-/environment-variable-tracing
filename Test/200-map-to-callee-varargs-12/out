PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] VarArg Index: 0
[TRACK] Current VarArg Index: -1
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] VarArg Index: 0
[TRACK] Current VarArg Index: 0
[TRACK] Destination:
[TRACK]   %t1 = alloca i32, align 4, !phasar.instruction.id !16
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %t1 = alloca i32, align 4, !phasar.instruction.id !16
[TRACK] Destination:
[TRACK]   %t2 = alloca i32, align 4, !phasar.instruction.id !17
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %n.addr = alloca i32, align 4, !phasar.instruction.id !14, ID: 1 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t2 = alloca i32, align 4, !phasar.instruction.id !17, ID: 4 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !46, !phasar.instruction.id !63, ID: 28 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	0

--- IFDS START RESULT RECORD ---
N: %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !46, !phasar.instruction.id !62, ID: 27 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: store i32 %3, i32* %gp_offset_p, align 16, !dbg !46, !phasar.instruction.id !57, ID: 22 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %1 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !46, !phasar.instruction.id !54, ID: 19 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: call void @llvm.va_start(i8* %arraydecay1), !dbg !39, !phasar.instruction.id !42, ID: 10 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: store i32 %n, i32* %n.addr, align 4, !phasar.instruction.id !18, ID: 5 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !23, metadata !20), !dbg !37, !phasar.instruction.id !38, ID: 7 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !15, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !39, !phasar.instruction.id !41, ID: 9 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 8 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %t = alloca i32, align 4, !phasar.instruction.id !15, ID: 41 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %t1, metadata !43, metadata !20), !dbg !44, !phasar.instruction.id !45, ID: 11 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 12 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !48, ID: 13 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !46, !phasar.instruction.id !49, ID: 14 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !46, !phasar.instruction.id !50, ID: 15 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %reg_save_area = load i8*, i8** %0, align 16, !dbg !46, !phasar.instruction.id !53, ID: 18 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !46, !phasar.instruction.id !60, ID: 25 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !46, !phasar.instruction.id !51, ID: 16 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %0 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !46, !phasar.instruction.id !52, ID: 17 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %2 = bitcast i8* %1 to i32*, !dbg !46, !phasar.instruction.id !55, ID: 20 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = add i32 %gp_offset, 8, !dbg !46, !phasar.instruction.id !56, ID: 21 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = load i32, i32* %vaarg.addr, align 4, !dbg !46, !phasar.instruction.id !66, ID: 31 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	0

--- IFDS START RESULT RECORD ---
N: br label %vaarg.end, !dbg !46, !phasar.instruction.id !58, ID: 23 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !46, !phasar.instruction.id !59, ID: 24 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %4 = bitcast i8* %overflow_arg_area to i32*, !dbg !46, !phasar.instruction.id !61, ID: 26 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: br label %vaarg.end, !dbg !46, !phasar.instruction.id !64, ID: 29 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	0

--- IFDS START RESULT RECORD ---
N: %vaarg.addr = phi i32* [ %2, %vaarg.in_reg ], [ %4, %vaarg.in_mem ], !dbg !46, !phasar.instruction.id !65, ID: 30 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	0

--- IFDS START RESULT RECORD ---
N: store i32 %5, i32* %t1, align 4, !dbg !44, !phasar.instruction.id !67, ID: 32 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
VI:	0
CI:	0

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %t2, metadata !68, metadata !20), !dbg !69, !phasar.instruction.id !70, ID: 33 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: %6 = load i32, i32* %t1, align 4, !dbg !71, !phasar.instruction.id !72, ID: 34 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 %6, i32* %t2, align 4, !dbg !69, !phasar.instruction.id !73, ID: 35 in function: foo
D:	%6 = load i32, i32* %t1, align 4, !dbg !71, !phasar.instruction.id !72, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !74, !phasar.instruction.id !75, ID: 36 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !74, !phasar.instruction.id !76, ID: 37 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 40 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.va_end(i8* %arraydecay34), !dbg !74, !phasar.instruction.id !77, ID: 38 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !78, !phasar.instruction.id !79, ID: 39 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 42 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %t, metadata !86, metadata !20), !dbg !87, !phasar.instruction.id !88, ID: 43 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !21, !phasar.instruction.id !22, ID: 44 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp ne i8* %call, null, !dbg !23, !phasar.instruction.id !24, ID: 45 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !21, !phasar.instruction.id !22, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = zext i1 %cmp to i64, !dbg !21, !phasar.instruction.id !25, ID: 46 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !21, !phasar.instruction.id !22, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%cmp = icmp ne i8* %call, null, !dbg !23, !phasar.instruction.id !24, ID: 45

--- IFDS START RESULT RECORD ---
N: %cond = select i1 %cmp, i32 1, i32 0, !dbg !21, !phasar.instruction.id !26, ID: 47 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !21, !phasar.instruction.id !22, ID: 44

D:	%cmp = icmp ne i8* %call, null, !dbg !23, !phasar.instruction.id !24, ID: 45

D:	%0 = zext i1 %cmp to i64, !dbg !21, !phasar.instruction.id !25, ID: 46

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %cond, i32* %t, align 4, !dbg !19, !phasar.instruction.id !27, ID: 48 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !21, !phasar.instruction.id !22, ID: 44

D:	%cmp = icmp ne i8* %call, null, !dbg !23, !phasar.instruction.id !24, ID: 45

D:	%0 = zext i1 %cmp to i64, !dbg !21, !phasar.instruction.id !25, ID: 46

D:	%cond = select i1 %cmp, i32 1, i32 0, !dbg !21, !phasar.instruction.id !26, ID: 47

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %t, align 4, !dbg !28, !phasar.instruction.id !29, ID: 49 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !21, !phasar.instruction.id !22, ID: 44

D:	store i32 %cond, i32* %t, align 4, !dbg !19, !phasar.instruction.id !27, ID: 48
A:	%t = alloca i32, align 4, !phasar.instruction.id !15, ID: 41

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %add = add nsw i32 %1, 1, !dbg !30, !phasar.instruction.id !31, ID: 50 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !21, !phasar.instruction.id !22, ID: 44

D:	%1 = load i32, i32* %t, align 4, !dbg !28, !phasar.instruction.id !29, ID: 49

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %cond, i32* %t, align 4, !dbg !19, !phasar.instruction.id !27, ID: 48
A:	%t = alloca i32, align 4, !phasar.instruction.id !15, ID: 41

--- IFDS START RESULT RECORD ---
N: call void (i32, ...) @foo(i32 1, i32 %add), !dbg !32, !phasar.instruction.id !33, ID: 51 in function: main
D:	%call = call i8* @getenv(i8* getelementptr 
[TRACK] VarArg Index: 0
[TRACK] Current VarArg Index: -1
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549637073-trace.txt
inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !21, !phasar.instruction.id !22, ID: 44

D:	store i32 %cond, i32* %t, align 4, !dbg !19, !phasar.instruction.id !27, ID: 48
A:	%t = alloca i32, align 4, !phasar.instruction.id !15, ID: 41

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %t, align 4, !dbg !28, !phasar.instruction.id !29, ID: 49

D:	%add = add nsw i32 %1, 1, !dbg !30, !phasar.instruction.id !31, ID: 50

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !34, !phasar.instruction.id !35, ID: 52 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !21, !phasar.instruction.id !22, ID: 44

D:	store i32 %cond, i32* %t, align 4, !dbg !19, !phasar.instruction.id !27, ID: 48
A:	%t = alloca i32, align 4, !phasar.instruction.id !15, ID: 41

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %t, align 4, !dbg !28, !phasar.instruction.id !29, ID: 49

D:	%add = add nsw i32 %1, 1, !dbg !30, !phasar.instruction.id !31, ID: 50


