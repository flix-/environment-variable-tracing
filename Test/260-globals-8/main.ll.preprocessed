; ModuleID = 'main.c'
source_filename = "main.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.s1 = type { i8*, %struct.s2 }
%struct.s2 = type { %union.u1, i8* }
%union.u1 = type { %struct.s3 }
%struct.s3 = type { i8*, i32, i8* }

@.str = private unnamed_addr constant [5 x i8] c"gude\00", align 1
@s1 = common global %struct.s1 zeroinitializer, align 8, !dbg !0
@.str.1 = private unnamed_addr constant [4 x i8] c"noe\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define i32 @main() #0 !dbg !32 {
entry:
  %retval = alloca i32, align 4
  %t1 = alloca i8*, align 8
  %t2 = alloca i8*, align 8
  store i32 0, i32* %retval, align 4
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !35
  store i8* %call, i8** getelementptr inbounds (%struct.s1, %struct.s1* @s1, i32 0, i32 1, i32 0, i32 0, i32 2), align 8, !dbg !36
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !37, metadata !38), !dbg !39
  %0 = load i8*, i8** getelementptr inbounds (%struct.s1, %struct.s1* @s1, i32 0, i32 1, i32 0, i32 0, i32 2), align 8, !dbg !40
  store i8* %0, i8** %t1, align 8, !dbg !39
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8** getelementptr inbounds (%struct.s1, %struct.s1* @s1, i32 0, i32 1, i32 0, i32 0, i32 0), align 8, !dbg !41
  call void @llvm.dbg.declare(metadata i8** %t2, metadata !42, metadata !38), !dbg !43
  %1 = load i8*, i8** getelementptr inbounds (%struct.s1, %struct.s1* @s1, i32 0, i32 1, i32 0, i32 0, i32 2), align 8, !dbg !44
  store i8* %1, i8** %t2, align 8, !dbg !43
  %__IFDSENVIRONMENTVARIABLETRACING_DUMMY_BEFORE_RET__0 = urem i4711 4711, 4711
  ret i32 0, !dbg !45
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!28, !29, !30}
!llvm.ident = !{!31}

!0 = !DIGlobalVariableExpression(var: !1)
!1 = distinct !DIGlobalVariable(name: "s1", scope: !2, file: !3, line: 28, type: !6, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 5.0.1 (tags/RELEASE_501/final 348479)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, globals: !5)
!3 = !DIFile(filename: "main.c", directory: "/home/sebastian/.qt-creator-workspace/Phasar/Test/260-globals-8")
!4 = !{}
!5 = !{!0}
!6 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s1", file: !3, line: 23, size: 320, elements: !7)
!7 = !{!8, !11}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !6, file: !3, line: 24, baseType: !9, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !6, file: !3, line: 25, baseType: !12, size: 256, offset: 64)
!12 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s2", file: !3, line: 18, size: 256, elements: !13)
!13 = !{!14, !27}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !12, file: !3, line: 19, baseType: !15, size: 192)
!15 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u1", file: !3, line: 11, size: 192, elements: !16)
!16 = !{!17, !18, !20, !21}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !15, file: !3, line: 12, baseType: !9, size: 64)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !15, file: !3, line: 13, baseType: !19, size: 32)
!19 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "ut", scope: !15, file: !3, line: 14, baseType: !9, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "s3", scope: !15, file: !3, line: 15, baseType: !22, size: 192)
!22 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s3", file: !3, line: 5, size: 192, elements: !23)
!23 = !{!24, !25, !26}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !22, file: !3, line: 6, baseType: !9, size: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !22, file: !3, line: 7, baseType: !19, size: 32, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !22, file: !3, line: 8, baseType: !9, size: 64, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !12, file: !3, line: 20, baseType: !9, size: 64, offset: 192)
!28 = !{i32 2, !"Dwarf Version", i32 4}
!29 = !{i32 2, !"Debug Info Version", i32 3}
!30 = !{i32 1, !"wchar_size", i32 4}
!31 = !{!"clang version 5.0.1 (tags/RELEASE_501/final 348479)"}
!32 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 31, type: !33, isLocal: false, isDefinition: true, scopeLine: 31, isOptimized: false, unit: !2, variables: !4)
!33 = !DISubroutineType(types: !34)
!34 = !{!19}
!35 = !DILocation(line: 32, column: 21, scope: !32)
!36 = !DILocation(line: 32, column: 19, scope: !32)
!37 = !DILocalVariable(name: "t1", scope: !32, file: !3, line: 33, type: !9)
!38 = !DIExpression()
!39 = !DILocation(line: 33, column: 11, scope: !32)
!40 = !DILocation(line: 33, column: 27, scope: !32)
!41 = !DILocation(line: 35, column: 16, scope: !32)
!42 = !DILocalVariable(name: "t2", scope: !32, file: !3, line: 37, type: !9)
!43 = !DILocation(line: 37, column: 11, scope: !32)
!44 = !DILocation(line: 37, column: 27, scope: !32)
!45 = !DILocation(line: 39, column: 5, scope: !32)
