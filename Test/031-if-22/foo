[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !16
[TRACK] Destination:
[TRACK] i8* %t
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] i8* %t
[TRACK] Destination:
[TRACK]   %t.addr = alloca i8*, align 8, !phasar.instruction.id !17
[TRACK] Checking end of branch label for: entry
[TRACK]: Checking: entry
[TRACK]: Checking left: land.lhs.true
[TRACK] Node: cond.end
[TRACK] Node: do.end
[TRACK] Node: if.end
[TRACK]: Checking right: if.else
[TRACK] Node: if.end
[TRACK] End of branch label: 
[TRACK] Checking end of branch label for: entry
[TRACK]: Checking: entry
[TRACK]: Checking left: land.lhs.true
[TRACK] Node: cond.end
[TRACK] Node: do.end
[TRACK] Node: if.end
[TRACK]: Checking right: if.else
[TRACK] Node: if.end
[TRACK] End of branch label: 
[TRACK] Checking end of branch label for: do.body
[TRACK]: Checking: do.body
[TRACK]: Checking left: cond.true
[TRACK] Node: cond.end
[TRACK] Node: do.end
[TRACK] Node: if.end
[TRACK]: Checking right: cond.false
[TRACK] Node: cond.end
[TRACK] Node: do.end
[TRACK] Node: if.end
[TRACK] End of branch label: 
[TRACK] Checking end of branch label for: do.body
[TRACK]: Checking: do.body
[TRACK]: Checking left: cond.true
[TRACK] Node: cond.end
[TRACK] Node: do.end
[TRACK] Node: if.end
[TRACK]: Checking right: cond.false
[TRACK] Node: cond.end
[TRACK] Node: do.end
[TRACK] Node: if.end
[TRACK] End of branch label: 
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !16
[TRACK] Destination:
[TRACK] i8* %t### DUMP LLVMIFDSSolver results
