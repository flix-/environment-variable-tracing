PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %ret = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a = alloca i32, align 4, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19

getSummaryFlowFunction()
  %call = call i32 (...) @foo(), !dbg !20, !phasar.instruction.id !22

getNormalFlowFunction()
  %tobool = icmp ne i32 %call, 0, !dbg !20, !phasar.instruction.id !23

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.else13, !dbg !24, !phasar.instruction.id !25

Got branch instruction
getSummaryFlowFunction()
  %call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29

getNormalFlowFunction()
  %tobool2 = icmp ne i32 %call1, 0, !dbg !26, !phasar.instruction.id !30

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !17), !dbg !35, !phasar.instruction.id !36

getNormalFlowFunction()
  store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37

Got store instruction
getCallToRetFlowFunction()
getNormalFlowFunction()
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32

Got branch instruction
getSummaryFlowFunction()
  %call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46

getNormalFlowFunction()
  %tobool5 = icmp ne i32 %call4, 0, !dbg !44, !phasar.instruction.id !47

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49

Got branch instruction
getNormalFlowFunction()
  store i32 100, i32* %ret, align 4, !dbg !50, !phasar.instruction.id !52

Got store instruction
getNormalFlowFunction()
  br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49

Got branch instruction
getSummaryFlowFunction()
  %call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getNormalFlowFunction()
  %tobool9 = icmp ne i32 %call8, 0, !dbg !55, !phasar.instruction.id !59

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !60, !phasar.instruction.id !61

Got branch instruction
getNormalFlowFunction()
  store i32 100, i32* %ret, align 4, !dbg !62, !phasar.instruction.id !64

Got store instruction
getNormalFlowFunction()
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !60, !phasar.instruction.id !61

Got branch instruction
getNormalFlowFunction()
  br label %if.end11, !phasar.instruction.id !67

Got branch instruction
getNormalFlowFunction()
  br label %if.end12, !phasar.instruction.id !68

Got branch instruction
getNormalFlowFunction()
  br label %if.end14, !dbg !69, !phasar.instruction.id !70

Got branch instruction
getNormalFlowFunction()
  %1 = load i32, i32* %ret, align 4, !dbg !75, !phasar.instruction.id !76

Got load instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !17), !dbg !35, !phasar.instruction.id !36

getNormalFlowFunction()
  %0 = load i32, i32* %a, align 4, !dbg !38, !phasar.instruction.id !39

Got load instruction
getNormalFlowFunction()
  store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37
[TRACK]   %a = alloca i32, align 4, !phasar.instruction.id !14
[TRACK] Destination:
[TRACK]   store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37
[TRACK]   %ret = alloca i32, align 4, !phasar.instruction.id !13
getNormalFlowFunction()
  br label %if.end12, !dbg !42, !phasar.instruction.id !43

Got branch instruction
getSummaryFlowFunction()
  %call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46

getNormalFlowFunction()
  br label %if.end11, !dbg !53, !phasar.instruction.id !54

Got branch instruction
getSummaryFlowFunction()
  %call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getNormalFlowFunction()
  br label %if.end, !dbg !65, !phasar.instruction.id !66

Got branch instruction
getSummaryFlowFunction()
  %call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getSummaryFlowFunction()
  %call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !17), !dbg !35, !phasar.instruction.id !36

getSummaryFlowFunction()
  %call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46

getSummaryFlowFunction()
  %call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.else13, !dbg !24, !phasar.instruction.id !25

Got branch instruction
getNormalFlowFunction()
  store i32 100, i32* %ret, align 4, !dbg !71, !phasar.instruction.id !73

Got store instruction
getNormalFlowFunction()
  br label %if.end14, !phasar.instruction.id !74

Got branch instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19

getCallFlowFunction()
  %call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29

getCallFlowFunction()
  %call = call i32 (...) @foo(), !dbg !20, !phasar.instruction.id !22

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !17), !dbg !35, !phasar.instruction.id !36

getCallFlowFunction()
  %call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46

getCallFlowFunction()
  %call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 100, i32* %ret, align 4, !dbg !50, !phasar.instruction.id !52, ID: 20 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19
L:	if.end11

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.else13, !dbg !24, !phasar.instruction.id !25, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15 in function: main
D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%0 = load i32, i32* %a, align 4, !dbg !38, !phasar.instruction.id !39, ID: 14

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !17), !dbg !35, !phasar.instruction.id !36, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ret, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i32 (...) @foo(), !dbg !20, !phasar.instruction.id !22, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %call, 0, !dbg !20, !phasar.instruction.id !23, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end14, !phasar.instruction.id !74, ID: 31 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool2 = icmp ne i32 %call1, 0, !dbg !26, !phasar.instruction.id !30, ID: 10 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %a, align 4, !dbg !38, !phasar.instruction.id !39, ID: 14 in function: main
D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool2 = icmp ne i32 %call1, 0, !dbg !26, !phasar.instruction.id !30, ID: 10

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !17), !dbg !35, !phasar.instruction.id !36, ID: 12 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %ret, align 4, !dbg !75, !phasar.instruction.id !76, ID: 32 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %ret, align 4, !dbg !62, !phasar.instruction.id !64, ID: 25
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 22

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 100, i32* %ret, align 4, !dbg !50, !phasar.instruction.id !52, ID: 20
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

--- IFDS START RESULT RECORD ---
N: br label %if.end12, !dbg !42, !phasar.instruction.id !43, ID: 16 in function: main
D:	store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool5 = icmp ne i32 %call4, 0, !dbg !44, !phasar.instruction.id !47, ID: 18 in function: main
D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

--- IFDS START RESULT RECORD ---
N: br label %if.end12, !phasar.instruction.id !68, ID: 28 in function: main
D:	store i32 100, i32* %ret, align 4, !dbg !50, !phasar.instruction.id !52, ID: 20
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19
L:	if.end11

D:	%call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 22

D:	store i32 100, i32* %ret, align 4, !dbg !62, !phasar.instruction.id !64, ID: 25
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end, !dbg !65, !phasar.instruction.id !66, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 100, i32* %ret, align 4, !dbg !62, !phasar.instruction.id !64, ID: 25
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool9, label %if.then10, label %if.end, !dbg !60, !phasar.instruction.id !61, ID: 24
L:	if.end

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19
L:	if.end11

--- IFDS START RESULT RECORD ---
N: br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	%tobool5 = icmp ne i32 %call4, 0, !dbg !44, !phasar.instruction.id !47, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end11, !dbg !53, !phasar.instruction.id !54, ID: 21 in function: main
D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19
L:	if.end11

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	store i32 100, i32* %ret, align 4, !dbg !50, !phasar.instruction.id !52, ID: 20
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 22 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19
L:	if.end11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool9 = icmp ne i32 %call8, 0, !dbg !55, !phasar.instruction.id !59, ID: 23 in function: main
D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 22

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19
L:	if.end11

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

--- IFDS START RESULT RECORD ---
N: br label %if.end11, !phasar.instruction.id !67, ID: 27 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19
L:	if.end11

D:	%call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 22

D:	br i1 %tobool9, label %if.then10, label %if.end, !dbg !60, !phasar.instruction.id !61, ID: 24
L:	if.end

D:	store i32 100, i32* %ret, align 4, !dbg !62, !phasar.instruction.id !64, ID: 25
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool9, label %if.then10, label %if.end, !dbg !60, !phasar.instruction.id !61, ID: 24 in function: main
D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool9 = icmp ne i32 %call8, 0, !dbg !55, !phasar.instruction.id !59, ID: 23

D:	%call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 22

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19
L:	if.end11

--- IFDS START RESULT RECORD ---
N: store i32 100, i32* %ret, align 4, !dbg !62, !phasar.instruction.id !64, ID: 25 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !48, !phasar.instruction.id !49, ID: 19
L:	if.end11

D:	%call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 22

D:	br i1 %tobool9, label %if.then10, label %if.end, !dbg !60, !phasar.instruction.id !61, ID: 24
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end14, !dbg !69, !phasar.instruction.id !70, ID: 29 in function: main
D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 11
L:	if.end12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 100, i32* %ret, align 4, !dbg !62, !phasar.instruction.id !64, ID: 25
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 22

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %ret, align 4, !dbg !50, !phasar.instruction.id !52, ID: 20
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 100, i32* %ret, align 4, !dbg !71, !phasar.instruction.id !73, ID: 30 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N

: ret i32 %1, !dbg !77, !phasar.instruction.id !78, ID: 33 in function: main
D:	store i32 100, i32* %ret, align 4, !dbg !50, !phasar.instruction.id !52, ID: 20
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %0, i32* %ret, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 100, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 13
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !29, ID: 9

D:	%1 = load i32, i32* %ret, align 4, !dbg !75, !phasar.instruction.id !76, ID: 32

D:	%call4 = call i32 (...) @bar(), !dbg !44, !phasar.instruction.id !46, ID: 17

D:	%call8 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 22

D:	store i32 100, i32* %ret, align 4, !dbg !62, !phasar.instruction.id !64, ID: 25
A:	%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!