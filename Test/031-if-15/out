PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1** %s1, metadata !27, metadata !28), !dbg !29, !phasar.instruction.id !30, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %c = alloca i32, align 4, !phasar.instruction.id !25, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !21, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call noalias i8* @malloc(i64 16) #3, !dbg !31, !phasar.instruction.id !32, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast i8* %call to %struct.s1*, !dbg !33, !phasar.instruction.id !34, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !26, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store %struct.s1* %0, %struct.s1** %s1, align 8, !dbg !29, !phasar.instruction.id !35, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.end, label %if.then, !dbg !40, !phasar.instruction.id !41, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %cmp, label %if.then2, label %if.end3, !dbg !58, !phasar.instruction.id !59, ID: 22 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !36, !phasar.instruction.id !38, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne %struct.s1* %1, null, !dbg !36, !phasar.instruction.id !39, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %8 = load i32, i32* %retval, align 4, !dbg !104, !phasar.instruction.id !105, ID: 44 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 -1, i32* %retval, align 4, !dbg !42, !phasar.instruction.id !43, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !42, !phasar.instruction.id !44, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !47, !phasar.instruction.id !48, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !53, !phasar.instruction.id !55, ID: 20 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end3, !dbg !65, !phasar.instruction.id !66, ID: 25 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	br i1 %cmp, label %if.then2, label %if.end3, !dbg !58, !phasar.instruction.id !59, ID: 22
L:	if.end3

--- IFDS START RESULT RECORD ---
N: %4 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !67, !phasar.instruction.id !69, ID: 26 in function: main
D:	br i1 %cmp, label %if.then2, label %if.end3, !dbg !58, !phasar.instruction.id !59, ID: 22
L:	if.end3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23 in function: main
D:	br i1 %cmp, label %if.then2, label %if.end3, !dbg !58, !phasar.instruction.id !59, ID: 22
L:	if.end3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

--- IFDS START RESULT RECORD ---
N: store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp, label %if.then2, label %if.end3, !dbg !58, !phasar.instruction.id !59, ID: 22
L:	if.end3

--- IFDS START RESULT RECORD ---
N: %t14 = getelementptr inbounds %struct.s1, %struct.s1* %4, i32 0, i32 0, !dbg !70, !phasar.instruction.id !71, ID: 27 in function: main
D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

--- IFDS START RESULT RECORD ---
N: %5 = load i8*, i8** %t14, align 8, !dbg !70, !phasar.instruction.id !72, ID: 28 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

--- IFDS START RESULT RECORD ---
N: br label %if.end7, !dbg !82, !phasar.instruction.id !83, ID: 33 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	br i1 %cmp5, label %if.then6, label %if.end7, !dbg !75, !phasar.instruction.id !76, ID: 30
L:	if.end7

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %6 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !84, !phasar.instruction.id !86, ID: 34 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	br i1 %cmp5, label %if.then6, label %if.end7, !dbg !75, !phasar.instruction.id !76, ID: 30
L:	if.end7

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

--- IFDS START RESULT RECORD ---
N: br i1 %cmp5, label %if.then6, label %if.end7, !dbg !75, !phasar.instruction.id !76, ID: 30 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	br i1 %cmp5, label %if.then6, label %if.end7, !dbg !75, !phasar.instruction.id !76, ID: 30
L:	if.end7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32 in function: main
D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	br i1 %cmp5, label %if.then6, label %if.end7, !dbg !75, !phasar.instruction.id !76, ID: 30
L:	if.end7

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

--- IFDS START RESULT RECORD ---
N: %ut1 = getelementptr inbounds %struct.s1, %struct.s1* %6, i32 0, i32 1, !dbg !87, !phasar.instruction.id !88, ID: 35 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

--- IFDS START RESULT RECORD ---
N: %7 = load i8*, i8** %ut1, align 8, !dbg !87, !phasar.instruction.id !89, ID: 36 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

--- IFDS START RESULT RECORD ---
N: %cmp8 = icmp ne i8* %7, null, !dbg !90, !phasar.instruction.id !91, ID: 37 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

--- IFDS START RESULT RECORD ---
N: br label %if.end10, !dbg !99, !phasar.instruction.id !100, ID: 41 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !101, !phasar.instruction.id !103, ID: 43 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %cmp8, label %if.then9, label %if.end10, !dbg !92, !phasar.instruction.id !93, ID: 38 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %c, metadata !94, metadata !28), !dbg !96, !phasar.instruction.id !97, ID: 39 in function: main
D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 4711, i32* %c, align 4, !dbg !96, !phasar.instruction.id !98, ID: 40 in function: main
D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !dbg !101, !phasar.instruction.id !102, ID: 42 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	%cmp5 = icmp ne i8* %5, null, !dbg !73, !phasar.instruction.id !74, ID: 29

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	%cmp = icmp ne %struct.s1* %3, null, !dbg !56, !phasar.instruction.id !57, ID: 21

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

--- IFDS START RESULT RECORD ---
N: ret i32 %8, !dbg !104, !phasar.instruction.id !106, ID: 45 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !45, !phasar.instruction.id !46, ID: 16

D:	store i8* %call1, i8** %t1, align 8, !dbg !51, !phasar.instruction.id !52, ID: 19
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !49, !phasar.instruction.id !50, ID: 18

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !28), !dbg !62, !phasar.instruction.id !63, ID: 23

D:	store i32 4711, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 24
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !77, metadata !28), !dbg !79, !phasar.instruction.id !80, ID: 31

D:	store i32 4711, i32* %b, align 4, !dbg !79, !phasar.instruction.id !81, ID: 32
A:	%b = alloca i32, align 4, !phasar.instruction.id !24, ID: 4

D:	@zero_value = constant i2 0, align 4[TRACK] Searching end of block label for: if.end3
[TRACK] End of closed block label: if.end7
[TRACK] End of block label: if.end7
[TRACK] Searching end of block label for: if.end3
[TRACK] End of closed block label: if.end7
[TRACK] End of block label: if.end7
[TRACK] Searching end of block label for: if.end
[TRACK] End of closed block label: if.end3
[TRACK] End of block label: if.end3
[TRACK] Searching end of block label for: if.end
[TRACK] End of closed block label: if.end3
[TRACK] End of block label: if.end3
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550323331-trace.txt
, ID: -1


