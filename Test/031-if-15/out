PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !21

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a = alloca i32, align 4, !phasar.instruction.id !23

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !24

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1** %s1, metadata !25, metadata !26), !dbg !27, !phasar.instruction.id !28

getSummaryFlowFunction()
  %call = call noalias i8* @malloc(i64 16) #3, !dbg !29, !phasar.instruction.id !30

getNormalFlowFunction()
  %0 = bitcast i8* %call to %struct.s1*, !dbg !31, !phasar.instruction.id !32

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  store %struct.s1* %0, %struct.s1** %s1, align 8, !dbg !27, !phasar.instruction.id !33

Got store instruction
getNormalFlowFunction()
  %1 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !34, !phasar.instruction.id !36

Got load instruction
getNormalFlowFunction()
  %tobool = icmp ne %struct.s1* %1, null, !dbg !34, !phasar.instruction.id !37

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool, label %if.end, label %if.then, !dbg !38, !phasar.instruction.id !39

Got branch instruction
getSummaryFlowFunction()
  %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44

getNormalFlowFunction()
  %2 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !45, !phasar.instruction.id !46

Got load instruction
getNormalFlowFunction()
  %t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48

Got GEP instruction
getNormalFlowFunction()
  store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50

Got store instruction
getNormalFlowFunction()
  %3 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !51, !phasar.instruction.id !53

Got load instruction
getNormalFlowFunction()
  %cmp = icmp ne %struct.s1* %3, null, !dbg !54, !phasar.instruction.id !55

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !56, !phasar.instruction.id !57

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !58, metadata !26), !dbg !60, !phasar.instruction.id !61

getNormalFlowFunction()
  store i32 4711, i32* %a, align 4, !dbg !60, !phasar.instruction.id !62

Got store instruction
getNormalFlowFunction()
  br label %if.end3, !dbg !63, !phasar.instruction.id !64

Got branch instruction
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !dbg !65, !phasar.instruction.id !66

Got store instruction
getNormalFlowFunction()
  br label %return, !dbg !65, !phasar.instruction.id !67

Got branch instruction
getNormalFlowFunction()
  %4 = load i32, i32* %retval, align 4, !dbg !68, !phasar.instruction.id !69

Got load instruction
getCallToRetFlowFunction()
getNormalFlowFunction()
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !56, !phasar.instruction.id !57

Got branch instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !58, metadata !26), !dbg !60, !phasar.instruction.id !61

getNormalFlowFunction()
  br i1 %tobool, label %if.end, label %if.then, !dbg !38, !phasar.instruction.id !39

Got branch instruction
getNormalFlowFunction()
  store i32 -1, i32* %retval, align 4, !dbg !40, !phasar.instruction.id !41

Got store instruction
getNormalFlowFunction()
  br label %return, !dbg !40, !phasar.instruction.id !42

Got branch instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallFlowFunction()
  %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1** %s1, metadata !25, metadata !26), !dbg !27, !phasar.instruction.id !28

getCallFlowFunction()
  %call = call noalias i8* @malloc(i64 16) #3, !dbg !29, !phasar.instruction.id !30

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !58, metadata !26), !dbg !60, !phasar.instruction.id !61### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !23, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !21, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 -1, i32* %retval, align 4, !dbg !40, !phasar.instruction.id !41, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1** %s1, metadata !25, metadata !26), !dbg !27, !phasar.instruction.id !28, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store %struct.s1* %0, %struct.s1** %s1, align 8, !dbg !27, !phasar.instruction.id !33, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call noalias i8* @malloc(i64 16) #3, !dbg !29, !phasar.instruction.id !30, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !24, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !34, !phasar.instruction.id !36, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast i8* %call to %struct.s1*, !dbg !31, !phasar.instruction.id !32, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne %struct.s1* %1, null, !dbg !34, !phasar.instruction.id !37, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %4 = load i32, i32* %retval, align 4, !dbg !68, !phasar.instruction.id !69, ID: 26 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.end, label %if.then, !dbg !38, !phasar.instruction.id !39, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !40, !phasar.instruction.id !42, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !45, !phasar.instruction.id !46, ID: 15 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !43, !phasar.instruction.id !44, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load %struct.s1*, %struct.s1** %s1, align 8, !dbg !51, !phasar.instruction.id !53, ID: 18 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp ne %struct.s1* %3, null, !dbg !54, !phasar.instruction.id !55, ID: 19 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end3, !dbg !63, !phasar.instruction.id !64, ID: 23 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !65, !phasar.instruction.id !67, ID: 25 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %cmp, label %if.then2, label %if.end3, !dbg !56, !phasar.instruction.id !57, ID: 20 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !58, metadata !26), !dbg !60, !phasar.instruction.id !61, ID: 21 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 4711, i32* %a, align 4, !dbg !60, !phasar.instruction.id !62, ID: 22 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !dbg !65, !phasar.instruction.id !66, ID: 24 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 %4, !dbg !68, !phasar.instruction.id !70, ID: 27 in function: main
D:	store i8* %call1, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !50, ID: 17
A:	%s1 = alloca %struct.s1*, align 8, !phasar.instruction.id !22, ID: 2
A:	%t1 

= getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!