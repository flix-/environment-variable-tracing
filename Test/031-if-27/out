PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !24, metadata !25), !dbg !26, !phasar.instruction.id !27, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i32, align 4, !phasar.instruction.id !19, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !28, metadata !25), !dbg !29, !phasar.instruction.id !30, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !23, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut2 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %c = alloca i32, align 4, !phasar.instruction.id !21, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !20, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	%cmp = icmp ne i8* %call, null, !dbg !34, !phasar.instruction.id !35, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp ne i8* %call, null, !dbg !34, !phasar.instruction.id !35, ID: 14 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end4, !phasar.instruction.id !62, ID: 26 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%cmp = icmp ne i8* %call, null, !dbg !34, !phasar.instruction.id !35, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%cmp = icmp ne i8* %call, null, !dbg !34, !phasar.instruction.id !35, ID: 14

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%cmp = icmp ne i8* %call, null, !dbg !34, !phasar.instruction.id !35, ID: 14

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %a1, align 8, !dbg !47, !phasar.instruction.id !49, ID: 19 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i8* %0, null, !dbg !47, !phasar.instruction.id !50, ID: 20 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%0 = load i8*, i8** %a1, align 8, !dbg !47, !phasar.instruction.id !49, ID: 19

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %out, !dbg !67, !phasar.instruction.id !68, ID: 29 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	br i1 %tobool, label %if.end, label %if.then3, !dbg !51, !phasar.instruction.id !52, ID: 21

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %a, align 4, !dbg !73, !phasar.instruction.id !75, ID: 32 in function: main
D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.end, label %if.then3, !dbg !51, !phasar.instruction.id !52, ID: 21 in function: main
D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool = icmp ne i8* %0, null, !dbg !47, !phasar.instruction.id !50, ID: 20

D:	%0 = load i8*, i8** %a1, align 8, !dbg !47, !phasar.instruction.id !49, ID: 19

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %out, !dbg !53, !phasar.instruction.id !54, ID: 22 in function: main
D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.end, label %if.then3, !dbg !51, !phasar.instruction.id !52, ID: 21

D:	%tobool = icmp ne i8* %0, null, !dbg !47, !phasar.instruction.id !50, ID: 20

D:	%0 = load i8*, i8** %a1, align 8, !dbg !47, !phasar.instruction.id !49, ID: 19

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23 in function: main
D:	%tobool = icmp ne i8* %0, null, !dbg !47, !phasar.instruction.id !50, ID: 20

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.end, label %if.then3, !dbg !51, !phasar.instruction.id !52, ID: 21

D:	%0 = load i8*, i8** %a1, align 8, !dbg !47, !phasar.instruction.id !49, ID: 19

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %if.end4, !dbg !57, !phasar.instruction.id !58, ID: 24 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.end, label %if.then3, !dbg !51, !phasar.instruction.id !52, ID: 21

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%cmp = icmp ne i8* %call, null, !dbg !34, !phasar.instruction.id !35, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	br i1 %tobool, label %if.end, label %if.then3, !dbg !51, !phasar.instruction.id !52, ID: 21

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	br i1 %tobool, label %if.end, label %if.then3, !dbg !51, !phasar.instruction.id !52, ID: 21

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut1, metadata !69, metadata !25), !dbg !70, !phasar.instruction.id !71, ID: 30 in function: main
D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	br i1 %tobool, label %if.end, label %if.then3, !dbg !51, !phasar.instruction.id !52, ID: 21

D:	%tobool = icmp ne i8* %0, null, !dbg !47, !phasar.instruction.id !50, ID: 20

D:	%0 = load i8*, i8** %a1, align 8, !dbg !47, !phasar.instruction.id !49, ID: 19

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	br i1 %cmp, label %if.then, label %if.else, !dbg !36, !phasar.instruction.id !37, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %ut1, align 4, !dbg !70, !phasar.instruction.id !72, ID: 31 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	%0 = load i8*, i8** %a1, align 8, !dbg !47, !phasar.instruction.id !49, ID: 19

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	%tobool = icmp ne i8* %0, null, !dbg !47, !phasar.instruction.id !50, ID: 20

--- IFDS START RESULT RECORD ---
N: %tobool5 = icmp ne i32 %1, 0, !dbg !73, !phasar.instruction.id !76, ID: 33 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %rc, align 4, !dbg !96, !phasar.instruction.id !97, ID: 43 in function: main
D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	store i32 2, i32* %c, align 4, !dbg !88, !phasar.instruction.id !90, ID: 39
A:	%c = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !86, metadata !25), !dbg !88, !phasar.instruction.id !89, ID: 38

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %b, align 4, !dbg !81, !phasar.instruction.id !83, ID: 36
A:	%b = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !79, metadata !25), !dbg !81, !phasar.instruction.id !82, ID: 35

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: br label %if.end8, !phasar.instruction.id !91, ID: 40 in function: main
D:	store i32 2, i32* %c, align 4, !dbg !88, !phasar.instruction.id !90, ID: 39
A:	%c = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !86, metadata !25), !dbg !88, !phasar.instruction.id !89, ID: 38

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !77, !phasar.instruction.id !78, ID: 34

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

--- IFDS START RESULT RECORD ---
N: br i1 %tobool5, label %if.then6, label %if.else7, !dbg !77, !phasar.instruction.id !78, ID: 34 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool5 = icmp ne i32 %1, 0, !dbg !73, !phasar.instruction.id !76, ID: 33

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !79, metadata !25), !dbg !81, !phasar.instruction.id !82, ID: 35 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !77, !phasar.instruction.id !78, ID: 34

D:	%tobool5 = icmp ne i32 %1, 0, !dbg !73, !phasar.instruction.id !76, ID: 33

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %b, align 4, !dbg !81, !phasar.instruction.id !83, ID: 36 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !79, metadata !25), !dbg !81, !phasar.instruction.id !82, ID: 35

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !77, !phasar.instruction.id !78, ID: 34

D:	%tobool5 = icmp ne i32 %1, 0, !dbg !73, !phasar.instruction.id !76, ID: 33

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: br label %if.end8, !dbg !84, !phasar.instruction.id !85, ID: 37 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	store i32 1, i32* %b, align 4, !dbg !81, !phasar.instruction.id !83, ID: 36
A:	%b = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !79, metadata !25), !dbg !81, !phasar.instruction.id !82, ID: 35

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !77, !phasar.instruction.id !78, ID: 34

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %c, metadata !86, metadata !25), !dbg !88, !phasar.instruction.id !89, ID: 38 in function: main
D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !77, !phasar.instruction.id !78, ID: 34

D:	%tobool5 = icmp ne i32 %1, 0, !dbg !73, !phasar.instruction.id !76, ID: 33

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %c, align 4, !dbg !88, !phasar.instruction.id !90, ID: 39 in function: main
D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !86, metadata !25), !dbg !88, !phasar.instruction.id !89, ID: 38

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !77, !phasar.instruction.id !78, ID: 34

D:	%tobool5 = icmp ne i32 %1, 0, !dbg !73, !phasar.instruction.id !76, ID: 33

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut2, metadata !92, metadata !25), !dbg !93, !phasar.instruction.id !94, ID: 41 in function: main
D:	store i32 2, i32* %c, align 4, !dbg !88, !phasar.instruction.id !90, ID: 39
A:	%c = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !86, metadata !25), !dbg !88, !phasar.instruction.id !89, ID: 38

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %b, align 4, !dbg !81, !phasar.instruction.id !83, ID: 36
A:	%b = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !79, metadata !25), !dbg !81, !phasar.instruction.id !82, ID: 35

D:	br i1 %tobool5, label %if.then6, label %if.else7, !dbg !77, !phasar.instruction.id !78, ID: 34

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %ut2, align 4, !dbg !93, !phasar.instruction.id !95, ID: 42 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 2, i32* %c, align 4, !dbg !88, !phasar.instruction.id !90, ID: 39
A:	%c = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !86, metadata !25), !dbg !88, !phasar.instruction.id !89, ID: 38

D:	store i32 1, i32* %b, align 4, !dbg !81, !phasar.instruction.id !83, ID: 36
A:	%b = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !79, metadata !25), !dbg !81, !phasar.instruction.id !82, ID: 35

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instru[TRACK] Searching end of tainted branch label for BB: entry
[TRACK] End of tainted block label: if.end4
[TRACK] End of tainted branch label: out
[TRACK] Searching end of tainted branch label for BB: if.then
[TRACK] End of tainted block label: if.end
[TRACK] End of tainted branch label: out
[TRACK] Searching end of tainted branch label for BB: if.then
[TRACK] End of tainted block label: if.end
[TRACK] End of tainted branch label: out
[TRACK] Searching end of tainted branch label for BB: entry
[TRACK] End of tainted block label: if.end4
[TRACK] End of tainted branch label: out
[TRACK] Searching end of tainted branch label for BB: out
[TRACK] End of tainted block label: if.end8
[TRACK] End of tainted branch label: if.end8
[TRACK] Searching end of tainted branch label for BB: out
[TRACK] End of tainted block label: if.end8
[TRACK] End of tainted branch label: if.end8
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550311265-trace.txt
ction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

--- IFDS START RESULT RECORD ---
N: ret i32 %2, !dbg !98, !phasar.instruction.id !99, ID: 44 in function: main
D:	ret i32 %2, !dbg !98, !phasar.instruction.id !99, ID: 44

D:	store i32 2, i32* %c, align 4, !dbg !88, !phasar.instruction.id !90, ID: 39
A:	%c = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %c, metadata !86, metadata !25), !dbg !88, !phasar.instruction.id !89, ID: 38

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %b, align 4, !dbg !81, !phasar.instruction.id !83, ID: 36
A:	%b = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !79, metadata !25), !dbg !81, !phasar.instruction.id !82, ID: 35

D:	store i32 1, i32* %eob, align 4, !dbg !64, !phasar.instruction.id !66, ID: 28
A:	%eob = alloca i32, align 4, !phasar.instruction.id !18, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %eob, metadata !63, metadata !25), !dbg !64, !phasar.instruction.id !65, ID: 27

D:	store i32 0, i32* %a, align 4, !dbg !59, !phasar.instruction.id !61, ID: 25
A:	%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !55, !phasar.instruction.id !56, ID: 23
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i8* %call2, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !46, ID: 18
A:	%a1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 4

D:	%call2 = call noalias i8* @malloc(i64 8) #3, !dbg !44, !phasar.instruction.id !45, ID: 17

D:	call void @llvm.dbg.declare(metadata i8** %a1, metadata !38, metadata !25), !dbg !42, !phasar.instruction.id !43, ID: 16

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !33, ID: 13


