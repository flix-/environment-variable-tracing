PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Checking end of branch label for: for.cond
[TRACK] End of branch label: for.end
[TRACK] Checking end of branch label for: while.cond
[TRACK] End of branch label: while.end
[TRACK] Checking end of branch label for: while.body
[TRACK] End of branch label: if.end29
[TRACK] Checking end of branch label for: land.lhs.true
[TRACK] End of branch label: if.end29
[TRACK] Checking end of branch label for: land.lhs.true9
[TRACK] End of branch label: if.end29
[TRACK] Checking end of branch label for: land.lhs.true11
[TRACK] End of branch label: if.end29
[TRACK] Checking end of branch label for: if.then14
[TRACK] End of branch label: if.end
[TRACK] Checking end of branch label for: if.then14
[TRACK] End of branch label: if.end
[TRACK] Checking end of branch label for: land.lhs.true11
[TRACK] End of branch label: if.end29
[TRACK] Checking end of branch label for: lor.lhs.false
[TRACK] End of branch label: if.end29
[TRACK] Checking end of branch label for: lor.lhs.false
[TRACK] End of branch label: if.end29
[TRACK] Checking end of branch label for: if.else20
[TRACK] End of branch label: if.end28
[TRACK] Checking end of branch label for: if.else20
[TRACK] End of branch label: if.end28
[TRACK] Checking end of branch label for: lor.lhs.false22
[TRACK] End of branch label: if.end28
[TRACK] Checking end of branch label for: lor.lhs.false22
[TRACK] End of branch label: if.end28
[TRACK] Checking end of branch label for: lor.lhs.false24
[TRACK] End of branch label: if.end28
[TRACK] Checking end of branch label for: lor.lhs.false24
[TRACK] End of branch label: if.end28
[TRACK] Checking end of branch label for: land.lhs.true9
[TRACK] End of branch label: if.end29
[TRACK] Checking end of branch label for: land.lhs.true
[TRACK] End of branch label: if.end29
[TRACK] Checking end of branch label for: while.body
[TRACK] End of branch label: if.end29
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %rc = alloca i32, align 4, !phasar.instruction.id !20
[TRACK] Destination:
[TRACK]   %retval = alloca i32, align 4, !phasar.instruction.id !14### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %d = alloca i32, align 4, !phasar.instruction.id !18, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %e = alloca i32, align 4, !phasar.instruction.id !19, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %c = alloca i32, align 4, !phasar.instruction.id !17, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: %call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: %b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34 in function: main
D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

--- IFDS START RESULT RECORD ---
N: %ut6 = alloca i32, align 4, !phasar.instruction.id !32, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut4 = alloca i32, align 4, !phasar.instruction.id !30, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %i, align 4, !dbg !62, !phasar.instruction.id !64, ID: 31 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !33, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %j = alloca i32, align 4, !phasar.instruction.id !28, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !16, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !15, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %d27 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !34, metadata !35), !dbg !36, !phasar.instruction.id !37, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !38, metadata !35), !dbg !39, !phasar.instruction.id !40, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %c, metadata !41, metadata !35), !dbg !42, !phasar.instruction.id !43, ID: 23 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %d, metadata !44, metadata !35), !dbg !45, !phasar.instruction.id !46, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %e, metadata !47, metadata !35), !dbg !48, !phasar.instruction.id !49, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !50, metadata !35), !dbg !51, !phasar.instruction.id !52, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %a, align 4, !dbg !53, !phasar.instruction.id !55, ID: 27 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %0, 0, !dbg !53, !phasar.instruction.id !56, ID: 28 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33 in function: main
D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: br label %if.end56, !dbg !287, !phasar.instruction.id !288, ID: 142 in function: main
D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141
A:	%t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	br i1 %cmp53, label %if.then55, label %if.end56, !dbg !280, !phasar.instruction.id !281, ID: 139
L:	if.end56

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.else51, !dbg !57, !phasar.instruction.id !58, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %i, metadata !59, metadata !35), !dbg !62, !phasar.instruction.id !63, ID: 30 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %for.cond, !dbg !65, !phasar.instruction.id !66, ID: 32 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35 in function: main
D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: %conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36 in function: main
D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

--- IFDS START RESULT RECORD ---
N: %cmp1 = icmp slt i32 %1, %conv, !dbg !75, !phasar.instruction.id !76, ID: 37 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

--- IFDS START RESULT RECORD ---
N: %12 = load i32, i32* %j, align 4, !dbg !215, !phasar.instruction.id !217, ID: 106 in function: main
D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%cmp1 = icmp slt i32 %1, %conv, !dbg !75, !phasar.instruction.id !76, ID: 37

--- IFDS START RESULT RECORD ---
N: br label %do.body, !dbg !79, !llvm.loop !81, !phasar.instruction.id !83, ID: 39 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

--- IFDS START RESULT RECORD ---
N: br label %while.cond, !dbg !84, !phasar.instruction.id !86, ID: 40 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

--- IFDS START RESULT RECORD ---
N: %cmp4 = icmp ne i8* %call3, null, !dbg !89, !phasar.instruction.id !90, ID: 42 in function: main
D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: %11 = load i32, i32* %i, align 4, !dbg !196, !phasar.instruction.id !197, ID: 97 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%cmp4 = icmp ne i8* %call3, null, !dbg !89, !phasar.instruction.id !90, ID: 42

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

--- IFDS START RESULT RECORD ---
N: %tobool7 = icmp ne i8* %call6, null, !dbg !92, !phasar.instruction.id !96, ID: 45 in function: main
D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

--- IFDS START RESULT RECORD ---
N: %5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56 in function: main
D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

--- IFDS START RESULT RECORD ---
N: br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%tobool7 = icmp ne i8* %call6, null, !dbg !92, !phasar.instruction.id !96, ID: 45

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: %tobool8 = icmp ne i32 %2, 0, !dbg !99, !phasar.instruction.id !101, ID: 48 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

--- IFDS START RESULT RECORD ---
N: %3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

--- IFDS START RESULT RECORD ---
N: br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%tobool8 = icmp ne i32 %2, 0, !dbg !99, !phasar.instruction.id !101, ID: 48

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

--- IFDS START RESULT RECORD ---
N: %tobool10 = icmp ne i32 %3, 0, !dbg !104, !phasar.instruction.id !106, ID: 51 in function: main
D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

--- IFDS START RESULT RECORD ---
N: br label %if.end57, !phasar.instruction.id !289, ID: 143 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp53, label %if.then55, label %if.end56, !dbg !280, !phasar.instruction.id !281, ID: 139
L:	if.end56

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141
A:	%t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

--- IFDS START RESULT RECORD ---
N: br i1 %cmp53, label %if.then55, label %if.end56, !dbg !280, !phasar.instruction.id !281, ID: 139 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	%cmp53 = icmp ne i8* %call52, null, !dbg !278, !phasar.instruction.id !279, ID: 138

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	br i1 %cmp53, label %if.then55, label %if.end56, !dbg !280, !phasar.instruction.id !281, ID: 139
L:	if.end56

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp53, label %if.then55, label %if.end56, !dbg !280, !phasar.instruction.id !281, ID: 139
L:	if.end56

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

--- IFDS START RESULT RECORD ---
N: %4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

--- IFDS START RESULT RECORD ---
N: br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%tobool10 = icmp ne i32 %3, 0, !dbg !104, !phasar.instruction.id !106, ID: 51

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

--- IFDS START RESULT RECORD ---
N: %tobool12 = icmp ne i32 %4, 0, !dbg !109, !phasar.instruction.id !111, ID: 54 in function: main
D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

--- IFDS START RESULT RECORD ---
N: %6 = load i32, i32* %a, align 4, !dbg !119, !phasar.instruction.id !122, ID: 59 in function: main
D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

--- IFDS START RESULT RECORD ---
N: br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55 in function: main
D:	%tobool12 = icmp ne i32 %4, 0, !dbg !109, !phasar.instruction.id !111, ID: 54

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

--- IFDS START RESULT RECORD ---
N: %tobool13 = icmp ne i32 %5, 0, !dbg !114, !phasar.instruction.id !116, ID: 57 in function: main
D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

--- IFDS START RESULT RECORD ---
N: %7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71 in function: main
D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

--- IFDS START RESULT RECORD ---
N: br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58 in function: main
D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%tobool13 = icmp ne i32 %5, 0, !dbg !114, !phasar.instruction.id !116, ID: 57

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

--- IFDS START RESULT RECORD ---
N: %tobool15 = icmp ne i32 %6, 0, !dbg !119, !phasar.instruction.id !123, ID: 60 in function: main
D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	%6 = load i32, i32* %a, align 4, !dbg !119, !phasar.instruction.id !122, ID: 59

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

--- IFDS START RESULT RECORD ---
N: br label %while.cond, !dbg !84, !llvm.loop !177, !phasar.instruction.id !179, ID: 87 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: br label %if.end, !phasar.instruction.id !145, ID: 69 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61
L:	if.end

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

--- IFDS START RESULT RECORD ---
N: br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61 in function: main
D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	%tobool15 = icmp ne i32 %6, 0, !dbg !119, !phasar.instruction.id !123, ID: 60

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%6 = load i32, i32* %a, align 4, !dbg !119, !phasar.instruction.id !122, ID: 59

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

--- IFDS START RESULT RECORD ---
N: br label %do.body17, !dbg !126, !llvm.loop !128, !phasar.instruction.id !130, ID: 62 in function: main
D:	%6 = load i32, i32* %a, align 4, !dbg !119, !phasar.instruction.id !122, ID: 59

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61
L:	if.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63 in function: main
D:	%6 = load i32, i32* %a, align 4, !dbg !119, !phasar.instruction.id !122, ID: 59

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61
L:	if.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64 in function: main
D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61
L:	if.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%6 = load i32, i32* %a, align 4, !dbg !119, !phasar.instruction.id !122, ID: 59

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

--- IFDS START RESULT RECORD ---
N: br label %do.end, !dbg !136, !phasar.instruction.id !137, ID: 65 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61
L:	if.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

--- IFDS START RESULT RECORD ---
N: br label %if.end, !dbg !138, !phasar.instruction.id !139, ID: 66 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61
L:	if.end

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67 in function: main
D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61
L:	if.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%6 = load i32, i32* %a, align 4, !dbg !119, !phasar.instruction.id !122, ID: 59

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68 in function: main
D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61
L:	if.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%6 = load i32, i32* %a, align 4, !dbg !119, !phasar.instruction.id !122, ID: 59

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

--- IFDS START RESULT RECORD ---
N: br label %if.end29, !dbg !146, !phasar.instruction.id !147, ID: 70 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %tobool15, label %if.then16, label %if.else, !dbg !124, !phasar.instruction.id !125, ID: 61
L:	if.end

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

--- IFDS START RESULT RECORD ---
N: %tobool21 = icmp ne i32 %7, 0, !dbg !148, !phasar.instruction.id !151, ID: 72 in function: main
D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

--- IFDS START RESULT RECORD ---
N: %10 = load i32, i32* %a, align 4, !dbg !168, !phasar.instruction.id !169, ID: 81 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	%9 = load i32, i32* %c, align 4, !dbg !159, !phasar.instruction.id !160, ID: 77

D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	br i1 %tobool25, label %if.then26, label %if.end28, !dbg !162, !phasar.instruction.id !163, ID: 79
L:	if.end28

D:	call void @llvm.dbg.declare(metadata i32* %d27, metadata !164, metadata !35), !dbg !166, !phasar.instruction.id !167, ID: 80

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

--- IFDS START RESULT RECORD ---
N: %8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

--- IFDS START RESULT RECORD ---
N: br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73 in function: main
D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%tobool21 = icmp ne i32 %7, 0, !dbg !148, !phasar.instruction.id !151, ID: 72

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

--- IFDS START RESULT RECORD ---
N: %tobool23 = icmp ne i32 %8, 0, !dbg !154, !phasar.instruction.id !156, ID: 75 in function: main
D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

--- IFDS START RESULT RECORD ---
N: %9 = load i32, i32* %c, align 4, !dbg !159, !phasar.instruction.id !160, ID: 77 in function: main
D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

--- IFDS START RESULT RECORD ---
N: br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	%tobool23 = icmp ne i32 %8, 0, !dbg !154, !phasar.instruction.id !156, ID: 75

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

--- IFDS START RESULT RECORD ---
N: %tobool25 = icmp ne i32 %9, 0, !dbg !159, !phasar.instruction.id !161, ID: 78 in function: main
D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	%9 = load i32, i32* %c, align 4, !dbg !159, !phasar.instruction.id !160, ID: 77

D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

--- IFDS START RESULT RECORD ---
N: br label %if.end29, !phasar.instruction.id !174, ID: 85 in function: main
D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	%9 = load i32, i32* %c, align 4, !dbg !159, !phasar.instruction.id !160, ID: 77

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	br i1 %tobool25, label %if.then26, label %if.end28, !dbg !162, !phasar.instruction.id !163, ID: 79
L:	if.end28

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

--- IFDS START RESULT RECORD ---
N: br i1 %tobool25, label %if.then26, label %if.end28, !dbg !162, !phasar.instruction.id !163, ID: 79 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	%9 = load i32, i32* %c, align 4, !dbg !159, !phasar.instruction.id !160, ID: 77

D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	%tobool25 = icmp ne i32 %9, 0, !dbg !159, !phasar.instruction.id !161, ID: 78

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %d27, metadata !164, metadata !35), !dbg !166, !phasar.instruction.id !167, ID: 80 in function: main
D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	%9 = load i32, i32* %c, align 4, !dbg !159, !phasar.instruction.id !160, ID: 77

D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	br i1 %tobool25, label %if.then26, label %if.end28, !dbg !162, !phasar.instruction.id !163, ID: 79
L:	if.end28

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

--- IFDS START RESULT RECORD ---
N: store i32 %10, i32* %d27, align 4, !dbg !166, !phasar.instruction.id !170, ID: 82 in function: main
D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	%9 = load i32, i32* %c, align 4, !dbg !159, !phasar.instruction.id !160, ID: 77

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	%10 = load i32, i32* %a, align 4, !dbg !168, !phasar.instruction.id !169, ID: 81

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool25, label %if.then26, label %if.end28, !dbg !162, !phasar.instruction.id !163, ID: 79
L:	if.end28

D:	call void @llvm.dbg.declare(metadata i32* %d27, metadata !164, metadata !35), !dbg !166, !phasar.instruction.id !167, ID: 80

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

--- IFDS START RESULT RECORD ---
N: store i32 -1, i32* %retval, align 4, !dbg !171, !phasar.instruction.id !172, ID: 83 in function: main
D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	br i1 %tobool25, label %if.then26, label %if.end28, !dbg !162, !phasar.instruction.id !163, ID: 79
L:	if.end28

D:	call void @llvm.dbg.declare(metadata i32* %d27, metadata !164, metadata !35), !dbg !166, !phasar.instruction.id !167, ID: 80

D:	store i32 %10, i32* %d27, align 4, !dbg !166, !phasar.instruction.id !170, ID: 82
A:	%d27 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

--- IFDS START RESULT RECORD ---
N: %21 = load i32, i32* %retval, align 4, !dbg !299, !phasar.instruction.id !300, ID: 149 in function: main
D:	br i1 %tobool25, label %if.then26, label %if.end28, !dbg !162, !phasar.instruction.id !163, ID: 79
L:	if.end28

D:	call void @llvm.dbg.declare(metadata i32* %d27, metadata !164, metadata !35), !dbg !166, !phasar.instruction.id !167, ID: 80

D:	store i32 %10, i32* %d27, align 4, !dbg !166, !phasar.instruction.id !170, ID: 82
A:	%d27 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	store i32 -1, i32* %retval, align 4, !dbg !171, !phasar.instruction.id !172, ID: 83
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141
A:	%t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !171, !phasar.instruction.id !173, ID: 84 in function: main
D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28

D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	br i1 %tobool25, label %if.then26, label %if.end28, !dbg !162, !phasar.instruction.id !163, ID: 79
L:	if.end28

D:	call void @llvm.dbg.declare(metadata i32* %d27, metadata !164, metadata !35), !dbg !166, !phasar.instruction.id !167, ID: 80

D:	store i32 %10, i32* %d27, align 4, !dbg !166, !phasar.instruction.id !170, ID: 82
A:	%d27 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	store i32 -1, i32* %retval, align 4, !dbg !171, !phasar.instruction.id !172, ID: 83
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86 in function: main
D:	%4 = load i32, i32* %c, align 4, !dbg !109, !phasar.instruction.id !110, ID: 53

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	%7 = load i32, i32* %a, align 4, !dbg !148, !phasar.instruction.id !150, ID: 71

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%8 = load i32, i32* %b, align 4, !dbg !154, !phasar.instruction.id !155, ID: 74

D:	%9 = load i32, i32* %c, align 4, !dbg !159, !phasar.instruction.id !160, ID: 77

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	%5 = load i32, i32* %e, align 4, !dbg !114, !phasar.instruction.id !115, ID: 56

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	%3 = load i32, i32* %b, align 4, !dbg !104, !phasar.instruction.id !105, ID: 50

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	%2 = load i32, i32* %a, align 4, !dbg !99, !phasar.instruction.id !100, ID: 47

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: br label %do.cond, !dbg !184, !phasar.instruction.id !185, ID: 90 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: %call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: %tobool31 = icmp ne i8* %call30, null, !dbg !184, !phasar.instruction.id !188, ID: 92 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%tobool31 = icmp ne i8* %call30, null, !dbg !184, !phasar.instruction.id !188, ID: 92

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94 in function: main
D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: br label %for.inc, !dbg !194, !phasar.instruction.id !195, ID: 96 in function: main
D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: %inc = add nsw i32 %11, 1, !dbg !196, !phasar.instruction.id !198, ID: 98 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%11 = load i32, i32* %i, align 4, !dbg !196, !phasar.instruction.id !197, ID: 97

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%inc = add nsw i32 %11, 1, !dbg !196, !phasar.instruction.id !198, ID: 98

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	%11 = load i32, i32* %i, align 4, !dbg !196, !phasar.instruction.id !197, ID: 97

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: br label %for.cond, !dbg !200, !llvm.loop !201, !phasar.instruction.id !203, ID: 100 in function: main
D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut1, metadata !204, metadata !35), !dbg !205, !phasar.instruction.id !206, ID: 101 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %ut1, align 4, !dbg !205, !phasar.instruction.id !207, ID: 102 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i32, i32* %i, align 4, !dbg !67, !phasar.instruction.id !69, ID: 33

D:	%cmp = icmp eq i8* %call, null, !dbg !72, !phasar.instruction.id !73, ID: 35

D:	%conv = zext i1 %cmp to i32, !dbg !72, !phasar.instruction.id !74, ID: 36

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %j, metadata !208, metadata !35), !dbg !210, !phasar.instruction.id !211, ID: 103 in function: main
D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %j, align 4, !dbg !210, !phasar.instruction.id !212, ID: 104 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: br label %for.cond33, !dbg !213, !phasar.instruction.id !214, ID: 105 in function: main
D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: %cmp34 = icmp slt i32 %12, 42, !dbg !218, !phasar.instruction.id !219, ID: 107 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: %13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110 in function: main
D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

--- IFDS START RESULT RECORD ---
N: %20 = load i32, i32* %rc, align 4, !dbg !294, !phasar.instruction.id !295, ID: 146 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141
A:	%t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18

--- IFDS START RESULT RECORD ---
N: br i1 %cmp34, label %for.body36, label %for.end50, !dbg !220, !phasar.instruction.id !221, ID: 108 in function: main
D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

--- IFDS START RESULT RECORD ---
N: br label %while.cond37, !dbg !222, !phasar.instruction.id !224, ID: 109 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

--- IFDS START RESULT RECORD ---
N: %tobool38 = icmp ne i32 %13, 0, !dbg !225, !phasar.instruction.id !227, ID: 111 in function: main
D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: %16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	br i1 %tobool42, label %land.rhs, label %land.end, !dbg !238, !phasar.instruction.id !239, ID: 118
L:	land.end

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: %14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113 in function: main
D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112 in function: main
D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%tobool38 = icmp ne i32 %13, 0, !dbg !225, !phasar.instruction.id !227, ID: 111

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

--- IFDS START RESULT RECORD ---
N: %tobool40 = icmp ne i32 %14, 0, !dbg !230, !phasar.instruction.id !232, ID: 114 in function: main
D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

--- IFDS START RESULT RECORD ---
N: %15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%tobool40 = icmp ne i32 %14, 0, !dbg !230, !phasar.instruction.id !232, ID: 114

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: %tobool42 = icmp ne i32 %15, 0, !dbg !235, !phasar.instruction.id !237, ID: 117 in function: main
D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

--- IFDS START RESULT RECORD ---
N: br label %while.cond37, !dbg !222, !llvm.loop !256, !phasar.instruction.id !258, ID: 128 in function: main
D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: br i1 %tobool42, label %land.rhs, label %land.end, !dbg !238, !phasar.instruction.id !239, ID: 118 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	%tobool42 = icmp ne i32 %15, 0, !dbg !235, !phasar.instruction.id !237, ID: 117

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: %call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	br i1 %tobool42, label %land.rhs, label %land.end, !dbg !238, !phasar.instruction.id !239, ID: 118
L:	land.end

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: %17 = ptrtoint i8* %call43 to i32, !dbg !244, !phasar.instruction.id !245, ID: 121 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	br i1 %tobool42, label %land.rhs, label %land.end, !dbg !238, !phasar.instruction.id !239, ID: 118
L:	land.end

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

--- IFDS START RESULT RECORD ---
N: %cmp44 = icmp ne i32 %16, %17, !dbg !246, !phasar.instruction.id !247, ID: 122 in function: main
D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	%17 = ptrtoint i8* %call43 to i32, !dbg !244, !phasar.instruction.id !245, ID: 121

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	br i1 %tobool42, label %land.rhs, label %land.end, !dbg !238, !phasar.instruction.id !239, ID: 118
L:	land.end

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: br label %land.end, !phasar.instruction.id !248, ID: 123 in function: main
D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	br i1 %tobool42, label %land.rhs, label %land.end, !dbg !238, !phasar.instruction.id !239, ID: 118
L:	land.end

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	%17 = ptrtoint i8* %call43 to i32, !dbg !244, !phasar.instruction.id !245, ID: 121

D:	%cmp44 = icmp ne i32 %16, %17, !dbg !246, !phasar.instruction.id !247, ID: 122

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

--- IFDS START RESULT RECORD ---
N: %18 = phi i1 [ false, %lor.lhs.false41 ], [ %cmp44, %land.rhs ], !phasar.instruction.id !249, ID: 124 in function: main
D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	br i1 %tobool42, label %land.rhs, label %land.end, !dbg !238, !phasar.instruction.id !239, ID: 118
L:	land.end

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	%17 = ptrtoint i8* %call43 to i32, !dbg !244, !phasar.instruction.id !245, ID: 121

D:	%cmp44 = icmp ne i32 %16, %17, !dbg !246, !phasar.instruction.id !247, ID: 122

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

--- IFDS START RESULT RECORD ---
N: %19 = load i32, i32* %j, align 4, !dbg !265, !phasar.instruction.id !266, ID: 132 in function: main
D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125 in function: main
D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	br i1 %tobool38, label %land.rhs, label %lor.lhs.false39, !dbg !228, !phasar.instruction.id !229, ID: 112
L:	land.end

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	br i1 %tobool40, label %land.rhs, label %lor.lhs.false41, !dbg !233, !phasar.instruction.id !234, ID: 115
L:	land.end

D:	br i1 %tobool42, label %land.rhs, label %land.end, !dbg !238, !phasar.instruction.id !239, ID: 118
L:	land.end

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	%17 = ptrtoint i8* %call43 to i32, !dbg !244, !phasar.instruction.id !245, ID: 121

D:	%cmp44 = icmp ne i32 %16, %17, !dbg !246, !phasar.instruction.id !247, ID: 122

D:	%18 = phi i1 [ false, %lor.lhs.false41 ], [ %cmp44, %land.rhs ], !phasar.instruction.id !249, ID: 124

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126 in function: main
D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	%17 = ptrtoint i8* %call43 to i32, !dbg !244, !phasar.instruction.id !245, ID: 121

D:	%cmp44 = icmp ne i32 %16, %17, !dbg !246, !phasar.instruction.id !247, ID: 122

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	%17 = ptrtoint i8* %call43 to i32, !dbg !244, !phasar.instruction.id !245, ID: 121

D:	%cmp44 = icmp ne i32 %16, %17, !dbg !246, !phasar.instruction.id !247, ID: 122

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut4, metadata !259, metadata !35), !dbg !260, !phasar.instruction.id !261, ID: 129 in function: main
D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	%17 = ptrtoint i8* %call43 to i32, !dbg !244, !phasar.instruction.id !245, ID: 121

D:	%cmp44 = icmp ne i32 %16, %17, !dbg !246, !phasar.instruction.id !247, ID: 122

D:	br i1 %18, label %while.body46, label %while.end47, !dbg !222, !phasar.instruction.id !250, ID: 125
L:	while.end47

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %ut4, align 4, !dbg !260, !phasar.instruction.id !262, ID: 130 in function: main
D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%13 = load i32, i32* %a, align 4, !dbg !225, !phasar.instruction.id !226, ID: 110

D:	%16 = load i32, i32* %e, align 4, !dbg !240, !phasar.instruction.id !241, ID: 119

D:	%14 = load i32, i32* %b, align 4, !dbg !230, !phasar.instruction.id !231, ID: 113

D:	%15 = load i32, i32* %c, align 4, !dbg !235, !phasar.instruction.id !236, ID: 116

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	%17 = ptrtoint i8* %call43 to i32, !dbg !244, !phasar.instruction.id !245, ID: 121

D:	%cmp44 = icmp ne i32 %16, %17, !dbg !246, !phasar.instruction.id !247, ID: 122

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

--- IFDS START RESULT RECORD ---
N: br label %for.inc48, !dbg !263, !phasar.instruction.id !264, ID: 131 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: %inc49 = add nsw i32 %19, 1, !dbg !265, !phasar.instruction.id !267, ID: 133 in function: main
D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

--- IFDS START RESULT RECORD ---
N: store i32 %inc49, i32* %j, align 4, !dbg !265, !phasar.instruction.id !268, ID: 134 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: br label %for.cond33, !dbg !269, !llvm.loop !270, !phasar.instruction.id !272, ID: 135 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: br label %if.end57, !dbg !273, !phasar.instruction.id !274, ID: 136 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

--- IFDS START RESULT RECORD ---
N: %call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp53 = icmp ne i8* %call52, null, !dbg !278, !phasar.instruction.id !279, ID: 138 in function: main
D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut6, metadata !290, metadata !35), !dbg !291, !phasar.instruction.id !292, ID: 144 in function: main
D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141
A:	%t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %ut6, align 4, !dbg !291, !phasar.instruction.id !293, ID: 145 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141
A:	%t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: store i32 %20, i32* %retval, align 4, !dbg !296, !phasar.instruction.id !297, ID: 147 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	%20 = load i32, i32* %rc, align 4, !dbg !294, !phasar.instruction.id !295, ID: 146

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141
A:	%t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !296, !phasar.instruction.id !298, ID: 148 in function: main
D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%taint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141
A:	%t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

--- IFDS START RESULT RECORD ---
N: ret i32 %21, !dbg !299, !phasar.instruction.id !301, ID: 150 in function: main
D:	br i1 %tobool25, label %if.then26, label %if.end28, !dbg !162, !phasar.instruction.id !163, ID: 79
L:	if.end28

D:	%call52 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !275, !phasar.instruction.id !277, ID: 137

D:	call void @llvm.dbg.declare(metadata i32* %d27, metadata !164, metadata !35), !dbg !166, !phasar.instruction.id !167, ID: 80

D:	store i32 %10, i32* %d27, align 4, !dbg !166, !phasar.instruction.id !170, ID: 82
A:	%d27 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	store i32 -1, i32* %retval, align 4, !dbg !171, !phasar.instruction.id !172, ID: 83
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	%21 = load i32, i32* %retval, align 4, !dbg !299, !phasar.instruction.id !300, ID: 149

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 4711, i32* %rc, align 4, !dbg !175, !phasar.instruction.id !176, ID: 86
A:	%rc = alloca i32, align 4, !phasar.instruction.id !20, ID: 7

D:	call void @llvm.dbg.declare(metadata i32* %end1, metadata !180, metadata !35), !dbg !181, !phasar.instruction.id !182, ID: 88

D:	store i32 1, i32* %end1, align 4, !dbg !181, !phasar.instruction.id !183, ID: 89
A:	%end1 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%call30 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !186, !phasar.instruction.id !187, ID: 91

D:	br i1 %tobool31, label %do.body, label %do.end32, !dbg !184, !llvm.loop !81, !phasar.instruction.id !189, ID: 93
L:	do.end32

D:	call void @llvm.dbg.declare(metadata i32* %end2, metadata !190, metadata !35), !dbg !191, !phasar.instruction.id !192, ID: 94

D:	store i32 1, i32* %end2, align 4, !dbg !191, !phasar.instruction.id !193, ID: 95
A:	%end2 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	store i32 %inc, i32* %i, align 4, !dbg !196, !phasar.instruction.id !199, ID: 99
A:	%i = alloca i32, align 4, !phasar.instruction.id !21, ID: 8

D:	%call43 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !242, !phasar.instruction.id !243, ID: 120

D:	call void @llvm.dbg.declare(metadata i32* %taint_me, metadata !251, metadata !35), !dbg !253, !phasar.instruction.id !254, ID: 126

D:	store i32 1, i32* %taint_me, align 4, !dbg !253, !phasar.instruction.id !255, ID: 127
A:	%t
[TRACK] Checking end of branch label for: while.cond
[TRACK] End of branch label: while.end
[TRACK] Checking end of branch label for: do.cond
[TRACK] End of branch label: do.end32
[TRACK] Checking end of branch label for: do.cond
[TRACK] End of branch label: do.end32
[TRACK] Checking end of branch label for: for.cond
[TRACK] End of branch label: for.end
[TRACK] Checking end of branch label for: land.end
[TRACK] End of branch label: while.end47
[TRACK] Checking end of branch label for: while.cond37
[TRACK] End of branch label: land.end
[TRACK] Checking end of branch label for: while.cond37
[TRACK] End of branch label: land.end
[TRACK] Checking end of branch label for: lor.lhs.false39
[TRACK] End of branch label: land.end
[TRACK] Checking end of branch label for: lor.lhs.false39
[TRACK] End of branch label: land.end
[TRACK] Checking end of branch label for: lor.lhs.false41
[TRACK] End of branch label: land.end
[TRACK] Checking end of branch label for: lor.lhs.false41
[TRACK] End of branch label: land.end
[TRACK] Checking end of branch label for: land.end
[TRACK] End of branch label: while.end47
[TRACK] Checking end of branch label for: if.else51
[TRACK] End of branch label: if.end56
[TRACK] Checking end of branch label for: if.else51
[TRACK] End of branch label: if.end56
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549639279-trace.txt
aint_me = alloca i32, align 4, !phasar.instruction.id !29, ID: 16

D:	store i32 1, i32* %t, align 4, !dbg !284, !phasar.instruction.id !286, ID: 141
A:	%t = alloca i32, align 4, !phasar.instruction.id !31, ID: 18

D:	%call6 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !92, !phasar.instruction.id !95, ID: 44

D:	%call3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !87, !phasar.instruction.id !88, ID: 41

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !70, !phasar.instruction.id !71, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %for.body, label %for.end, !dbg !77, !phasar.instruction.id !78, ID: 38
L:	for.end

D:	br i1 %cmp4, label %while.body, label %while.end, !dbg !84, !phasar.instruction.id !91, ID: 43
L:	while.end

D:	br i1 %tobool7, label %land.lhs.true, label %lor.lhs.false, !dbg !97, !phasar.instruction.id !98, ID: 46
L:	if.end29

D:	br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false, !dbg !102, !phasar.instruction.id !103, ID: 49
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !282, metadata !35), !dbg !284, !phasar.instruction.id !285, ID: 140

D:	br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !157, !phasar.instruction.id !158, ID: 76
L:	if.end28

D:	br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !107, !phasar.instruction.id !108, ID: 52
L:	if.end29

D:	br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !112, !phasar.instruction.id !113, ID: 55
L:	if.end29

D:	br i1 %tobool13, label %if.then14, label %if.else20, !dbg !117, !phasar.instruction.id !118, ID: 58
L:	if.end29

D:	call void @llvm.dbg.declare(metadata i32* %a18, metadata !131, metadata !35), !dbg !133, !phasar.instruction.id !134, ID: 63

D:	store i32 0, i32* %a18, align 4, !dbg !133, !phasar.instruction.id !135, ID: 64
A:	%a18 = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %b19, metadata !140, metadata !35), !dbg !142, !phasar.instruction.id !143, ID: 67

D:	store i32 1, i32* %b19, align 4, !dbg !142, !phasar.instruction.id !144, ID: 68
A:	%b19 = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	br i1 %tobool21, label %if.then26, label %lor.lhs.false22, !dbg !152, !phasar.instruction.id !153, ID: 73
L:	if.end28


