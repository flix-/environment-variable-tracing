PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %ms = alloca %struct.s1, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %ms, metadata !74, metadata !23), !dbg !75, !phasar.instruction.id !76

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29

getNormalFlowFunction()
  %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31

Got GEP instruction
getNormalFlowFunction()
  store i8* %call, i8** %tainted1, align 8, !dbg !32, !phasar.instruction.id !33

Got store instruction
getSummaryFlowFunction()
  call void @foo(%struct.s1* byval align 8 %ms, i32 42), !dbg !34, !phasar.instruction.id !35

getCallFlowFunction()
  call void @foo(%struct.s1* byval align 8 %ms, i32 42), !dbg !34, !phasar.instruction.id !35

[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %ms = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31
[TRACK] Destination:
[TRACK] %struct.s1* %fs
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31
getNormalFlowFunction()
  %a.addr = alloca i32, align 4, !phasar.instruction.id !21

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %also_tainted = alloca i8*, align 8, !phasar.instruction.id !22

Got operands checking instruction (alloca)
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %fs, metadata !40, metadata !23), !dbg !41, !phasar.instruction.id !42

getNormalFlowFunction()
  store i32 %a, i32* %a.addr, align 4, !phasar.instruction.id !27

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !44, metadata !23), !dbg !45, !phasar.instruction.id !46

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !47, metadata !23), !dbg !48, !phasar.instruction.id !49

getNormalFlowFunction()
  %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !34, !phasar.instruction.id !35

Got GEP instruction
getNormalFlowFunction()
  %0 = load i8*, i8** %tainted1, align 8, !dbg !34, !phasar.instruction.id !36

Got load instruction
getNormalFlowFunction()
  store i8* %0, i8** %also_tainted, align 8, !dbg !32, !phasar.instruction.id !37

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] %struct.s1* %fs
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31
[TRACK] Destination:
[TRACK]   %also_tainted = alloca i8*, align 8, !phasar.instruction.id !22
getNormalFlowFunction()
  %1 = load i8*, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !39

Got load instruction
getNormalFlowFunction()
  %tainted11 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !40, !phasar.instruction.id !41

Got GEP instruction
getNormalFlowFunction()
  store i8* %1, i8** %tainted11, align 8, !dbg !42, !phasar.instruction.id !43

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %also_tainted = alloca i8*, align 8, !phasar.instruction.id !22
[TRACK] Destination:
[TRACK] %struct.s1* %fs
[TRACK]   %tainted11 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !40, !phasar.instruction.id !41
getNormalFlowFunction()
  %tainted12 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45

Got GEP instruction
getNormalFlowFunction()
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8** %tainted12, align 8, !dbg !46, !phasar.instruction.id !47

Got store instruction
getSummaryFlowFunction()
  call void @bar(%struct.s1* byval align 8 %fs), !dbg !48, !phasar.instruction.id !49

getCallFlowFunction()
  call void @bar(%struct.s1* byval align 8 %fs), !dbg !48, !phasar.instruction.id !49

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @foo(%struct.s1* byval align 8 %ms, i32 42), !dbg !34, !phasar.instruction.id !35

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %fs, metadata !40, metadata !23), !dbg !41, !phasar.instruction.id !42

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !44, metadata !23), !dbg !45, !phasar.instruction.id !46

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !47, metadata !23), !dbg !48, !phasar.instruction.id !49

getSummaryFlowFunction()
  call void @bar(%struct.s1* byval align 8 %fs), !dbg !48, !phasar.instruction.id !49

getNormalFlowFunction()
  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !21

Got operands checking instruction (alloca)
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %fs, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !26, metadata !23), !dbg !27, !phasar.instruction.id !28

getNormalFlowFunction()
  %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30

Got GEP instruction
getNormalFlowFunction()
  %0 = load i8*, i8** %tainted1, align 8, !dbg !29, !phasar.instruction.id !31

Got load instruction
getNormalFlowFunction()
  store i8* %0, i8** %not_tainted, align 8, !dbg !27, !phasar.instruction.id !32

Got store instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getRetFlowFunction()
getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %ms, metadata !74, metadata !23), !dbg !75, !phasar.instruction.id !76

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29

[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %ms = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31
[TRACK] Destination:
[TRACK] %struct.s1* %fs
[TRACK]   %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %fs, metadata !40, metadata !23), !dbg !41, !phasar.instruction.id !42

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !44, metadata !23), !dbg !45, !phasar.instruction.id !46

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !47, metadata !23), !dbg !48, !phasar.instruction.id !49

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %fs, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !26, metadata !23), !dbg !27, !phasar.instruction.id !28### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %not_tainted = alloca i8*, align 8, !phasar.instruction.id !21, ID: 2 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %tainted11, align 8, !dbg !42, !phasar.instruction.id !43, ID: 20 in function: foo
D:	%1 = load i8*, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !39, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !22, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %also_tainted, align 8, !dbg !32, !phasar.instruction.id !37, ID: 17 in function: foo
D:	%0 = load i8*, i8** %tainted1, align 8, !dbg !34, !phasar.instruction.id !36, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: store i32 %a, i32* %a.addr, align 4, !phasar.instruction.id !27, ID: 12 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %fs, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25, ID: 3 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %not_tainted, align 8, !dbg !27, !phasar.instruction.id !32, ID: 7 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !33, !phasar.instruction.id !34, ID: 8 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !26, metadata !23), !dbg !27, !phasar.instruction.id !28, ID: 4 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted1, align 8, !dbg !29, !phasar.instruction.id !31, ID: 6 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !29, !phasar.instruction.id !30, ID: 5 in function: bar
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a.addr = alloca i32, align 4, !phasar.instruction.id !21, ID: 9 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: %also_tainted = alloca i8*, align 8, !phasar.instruction.id !22, ID: 10 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %fs, metadata !40, metadata !23), !dbg !41, !phasar.instruction.id !42, ID: 11 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !44, metadata !23), !dbg !45, !phasar.instruction.id !46, ID: 13 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !47, metadata !23), !dbg !48, !phasar.instruction.id !49, ID: 14 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !34, !phasar.instruction.id !35, ID: 15 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted1, align 8, !dbg !34, !phasar.instruction.id !36, ID: 16 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !39, ID: 18 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !22, ID: 10

--- IFDS START RESULT RECORD ---
N: %tainted11 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !40, !phasar.instruction.id !41, ID: 19 in function: foo
D:	%1 = load i8*, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !39, ID: 18

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !22, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

--- IFDS START RESULT RECORD ---
N: %tainted12 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 21 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !22, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted11 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !40, !phasar.instruction.id !41, ID: 19

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8** %tainted12, align 8, !dbg !46, !phasar.instruction.id !47, ID: 22 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !22, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%struct.s1* %fs, ID: foo.0
A:	%tainted11 = getelementptr inbounds %struct.s1, %struct.s1* %fs, i32 0, i32 2, !dbg !40, !phasar.instruction.id !41, ID: 19

--- IFDS START RESULT RECORD ---
N: call void @bar(%struct.s1* byval align 8 %fs), !dbg !48, !phasar.instruction.id !49, 

ID: 23 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !22, ID: 10

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !50, !phasar.instruction.id !51, ID: 24 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted = alloca i8*, align 8, !phasar.instruction.id !22, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ms = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 27 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %ms, metadata !74, metadata !23), !dbg !75, !phasar.instruction.id !76, ID: 28 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 29

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 31 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 29

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @foo(%struct.s1* byval align 8 %ms, i32 42), !dbg !34, !phasar.instruction.id !35, ID: 32 in function: main
D:	store i8* %call, i8** %tainted1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 31
A:	%ms = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 26
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !36, !phasar.instruction.id !37, ID: 33 in function: main
D:	store i8* %call, i8** %tainted1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 31
A:	%ms = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 26
A:	%tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %ms, i32 0, i32 2, !dbg !30, !phasar.instruction.id !31, ID: 30

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!