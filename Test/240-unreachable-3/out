PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %tainted = alloca i8*, align 8, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a = alloca i32, align 4, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a1 = alloca i32, align 4, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !23, !phasar.instruction.id !24

getNormalFlowFunction()
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25

Got store instruction
getNormalFlowFunction()
  %0 = load i8*, i8** %tainted, align 8, !dbg !26, !phasar.instruction.id !28

Got load instruction
getNormalFlowFunction()
  %tobool = icmp ne i8* %0, null, !dbg !26, !phasar.instruction.id !29

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.end, !dbg !30, !phasar.instruction.id !31

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !20), !dbg !34, !phasar.instruction.id !35

getNormalFlowFunction()
  store i32 0, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36

Got store instruction
getSummaryFlowFunction()
  call void @abort() #5, !dbg !37, !phasar.instruction.id !38

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.end, !dbg !30, !phasar.instruction.id !31

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !40, metadata !20), !dbg !41, !phasar.instruction.id !42

getNormalFlowFunction()
  store i32 0, i32* %a1, align 4, !dbg !41, !phasar.instruction.id !43

Got store instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !20), !dbg !34, !phasar.instruction.id !35

getSummaryFlowFunction()
  call void @abort() #5, !dbg !37, !phasar.instruction.id !38

getSummaryFlowFunction()
  call void @abort() #5, !dbg !37, !phasar.instruction.id !38

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !40, metadata !20), !dbg !41, !phasar.instruction.id !42

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !20), !dbg !34, !phasar.instruction.id !35

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !40, metadata !20), !dbg !41, !phasar.instruction.id !42

getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !20), !dbg !34, !phasar.instruction.id !35

getSummaryFlowFunction()
  call void @abort() #5, !dbg !37, !phasar.instruction.id !38

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !40, metadata !20), !dbg !41, !phasar.instruction.id !42

getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !23, !phasar.instruction.id !24

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !20), !dbg !34, !phasar.instruction.id !35

getCallFlowFunction()
  call void @abort() #5, !dbg !37, !phasar.instruction.id !38

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !40, metadata !20), !dbg !41, !phasar.instruction.id !42### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %a1 = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a1, align 4, !dbg !41, !phasar.instruction.id !43, ID: 17 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !26, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36, ID: 13 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %if.then, label %if.end, !dbg !30, !phasar.instruction.id !31, ID: 11
L:	if.end

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !26, !phasar.instruction.id !28, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !20), !dbg !34, !phasar.instruction.id !35, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !23, !phasar.instruction.id !24, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !23, !phasar.instruction.id !24, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !44, !phasar.instruction.id !45, ID: 18 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.end, !dbg !30, !phasar.instruction.id !31, ID: 11 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	%tobool = icmp ne i8* %0, null, !dbg !26, !phasar.instruction.id !29, ID: 10

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !26, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i8* %0, null, !dbg !26, !phasar.instruction.id !29, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !26, !phasar.instruction.id !28, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted, align 8, !db

g !26, !phasar.instruction.id !28, ID: 9 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !20), !dbg !34, !phasar.instruction.id !35, ID: 12 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %if.then, label %if.end, !dbg !30, !phasar.instruction.id !31, ID: 11
L:	if.end

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !26, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @abort() #5, !dbg !37, !phasar.instruction.id !38, ID: 14 in function: main
D:	br i1 %tobool, label %if.then, label %if.end, !dbg !30, !phasar.instruction.id !31, ID: 11
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: unreachable, !dbg !37, !phasar.instruction.id !39, ID: 15 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !34, !phasar.instruction.id !36, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %if.then, label %if.end, !dbg !30, !phasar.instruction.id !31, ID: 11
L:	if.end

D:	call void @abort() #5, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a1, metadata !40, metadata !20), !dbg !41, !phasar.instruction.id !42, ID: 16 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %if.then, label %if.end, !dbg !30, !phasar.instruction.id !31, ID: 11
L:	if.end

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !26, !phasar.instruction.id !28, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!