PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Checking end of branch label for: if.end
[TRACK] End of branch label: if.end32
[TRACK] Checking end of branch label for: if.then17
[TRACK] End of branch label: if.end27
[TRACK] Checking end of branch label for: if.then17
[TRACK] End of branch label: if.end27
[TRACK] Checking end of branch label for: if.end15
[TRACK] End of branch label: if.end30
[TRACK] Checking end of branch label for: if.end15
[TRACK] End of branch label: if.end30
[TRACK] Checking end of branch label for: if.then7
[TRACK] End of branch label: if.end10
[TRACK] Checking end of branch label for: if.then7
[TRACK] End of branch label: if.end10
[TRACK] Checking end of branch label for: if.else
[TRACK] End of branch label: if.end14
[TRACK] Checking end of branch label for: if.else
[TRACK] End of branch label: if.end14
[TRACK] Checking end of branch label for: if.then4
[TRACK] End of branch label: if.end15
[TRACK] Checking end of branch label for: if.then4
[TRACK] End of branch label: if.end15
[TRACK] Checking end of branch label for: if.end
[TRACK] End of branch label: if.end32
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %rc = alloca i32, align 4, !phasar.instruction.id !15
[TRACK] Destination:
[TRACK]   %retval = alloca i32, align 4, !phasar.instruction.id !14### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %ut3 = alloca i32, align 4, !phasar.instruction.id !18, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut4 = alloca i32, align 4, !phasar.instruction.id !19, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut2 = alloca i32, align 4, !phasar.instruction.id !17, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 -1, i32* %retval, align 4, !dbg !65, !phasar.instruction.id !66, ID: 31 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx = getelementptr inbounds i8, i8* %0, i64 12, !dbg !55, !phasar.instruction.id !58, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !30, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !31, metadata !32), !dbg !33, !phasar.instruction.id !34, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %nt = alloca i32, align 4, !phasar.instruction.id !29, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut5 = alloca i32, align 4, !phasar.instruction.id !20, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut1, metadata !35, metadata !32), !dbg !36, !phasar.instruction.id !37, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut2, metadata !38, metadata !32), !dbg !39, !phasar.instruction.id !40, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut3, metadata !41, metadata !32), !dbg !42, !phasar.instruction.id !43, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut4, metadata !44, metadata !32), !dbg !45, !phasar.instruction.id !46, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut5, metadata !47, metadata !32), !dbg !48, !phasar.instruction.id !49, ID: 23 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %taint, metadata !50, metadata !32), !dbg !53, !phasar.instruction.id !54, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8, i8* %arrayidx, align 1, !dbg !55, !phasar.instruction.id !59, ID: 27 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %conv = sext i8 %1 to i32, !dbg !55, !phasar.instruction.id !60, ID: 28 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp ne i32 %conv, 97, !dbg !61, !phasar.instruction.id !62, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %12 = load i32, i32* %retval, align 4, !dbg !183, !phasar.instruction.id !184, ID: 90 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80
A:	%a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15

D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

--- IFDS START RESULT RECORD ---
N: br i1 %cmp, label %if.then, label %if.end, !dbg !63, !phasar.instruction.id !64, ID: 30 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !65, !phasar.instruction.id !67, ID: 32 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp2 = icmp ne i8* %call, null, !dbg !73, !phasar.instruction.id !74, ID: 35 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %taint, align 8, !dbg !81, !phasar.instruction.id !82, ID: 38 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end32, !phasar.instruction.id !173, ID: 84 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	%cmp2 = icmp ne i8* %call, null, !dbg !73, !phasar.instruction.id !74, ID: 35

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp5 = icmp ne i8* %2, null, !dbg !83, !phasar.instruction.id !84, ID: 39 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%2 = load i8*, i8** %taint, align 8, !dbg !81, !phasar.instruction.id !82, ID: 38

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %3 = zext i1 %cmp5 to i64, !dbg !81, !phasar.instruction.id !85, ID: 40 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	%2 = load i8*, i8** %taint, align 8, !dbg !81, !phasar.instruction.id !82, ID: 38

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	%cmp5 = icmp ne i8* %2, null, !dbg !83, !phasar.instruction.id !84, ID: 39

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cond = select i1 %cmp5, i32 0, i32 1, !dbg !81, !phasar.instruction.id !86, ID: 41 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%3 = zext i1 %cmp5 to i64, !dbg !81, !phasar.instruction.id !85, ID: 40

D:	%cmp5 = icmp ne i8* %2, null, !dbg !83, !phasar.instruction.id !84, ID: 39

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	%2 = load i8*, i8** %taint, align 8, !dbg !81, !phasar.instruction.id !82, ID: 38

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

--- IFDS START RESULT RECORD ---
N: store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42 in function: main
D:	%cond = select i1 %cmp5, i32 0, i32 1, !dbg !81, !phasar.instruction.id !86, ID: 41

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%3 = zext i1 %cmp5 to i64, !dbg !81, !phasar.instruction.id !85, ID: 40

D:	%cmp5 = icmp ne i8* %2, null, !dbg !83, !phasar.instruction.id !84, ID: 39

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%2 = load i8*, i8** %taint, align 8, !dbg !81, !phasar.instruction.id !82, ID: 38

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %4, 0, !dbg !88, !phasar.instruction.id !91, ID: 44 in function: main
D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45 in function: main
D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	%tobool = icmp ne i32 %4, 0, !dbg !88, !phasar.instruction.id !91, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

--- IFDS START RESULT RECORD ---
N: %tobool8 = icmp ne i32 %5, 0, !dbg !94, !phasar.instruction.id !98, ID: 47 in function: main
D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: br label %if.end10, !dbg !106, !phasar.instruction.id !107, ID: 51 in function: main
D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	br i1 %tobool8, label %if.then9, label %if.end10, !dbg !99, !phasar.instruction.id !100, ID: 48
L:	if.end10

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

--- IFDS START RESULT RECORD ---
N: br i1 %tobool8, label %if.then9, label %if.end10, !dbg !99, !phasar.instruction.id !100, ID: 48 in function: main
D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool8 = icmp ne i32 %5, 0, !dbg !94, !phasar.instruction.id !98, ID: 47

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49 in function: main
D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool8, label %if.then9, label %if.end10, !dbg !99, !phasar.instruction.id !100, ID: 48
L:	if.end10

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50 in function: main
D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	br i1 %tobool8, label %if.then9, label %if.end10, !dbg !99, !phasar.instruction.id !100, ID: 48
L:	if.end10

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: br label %if.end15, !dbg !108, !phasar.instruction.id !109, ID: 52 in function: main
D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	br i1 %tobool8, label %if.then9, label %if.end10, !dbg !99, !phasar.instruction.id !100, ID: 48
L:	if.end10

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %tobool11 = icmp ne i32 %6, 0, !dbg !110, !phasar.instruction.id !113, ID: 54 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: br label %if.end14, !dbg !121, !phasar.instruction.id !122, ID: 58 in function: main
D:	br i1 %tobool11, label %if.then12, label %if.end14, !dbg !114, !phasar.instruction.id !115, ID: 55
L:	if.end14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: br label %if.end15, !phasar.instruction.id !123, ID: 59 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	br i1 %tobool11, label %if.then12, label %if.end14, !dbg !114, !phasar.instruction.id !115, ID: 55
L:	if.end14

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

--- IFDS START RESULT RECORD ---
N: br i1 %tobool11, label %if.then12, label %if.end14, !dbg !114, !phasar.instruction.id !115, ID: 55 in function: main
D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool11 = icmp ne i32 %6, 0, !dbg !110, !phasar.instruction.id !113, ID: 54

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56 in function: main
D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool11, label %if.then12, label %if.end14, !dbg !114, !phasar.instruction.id !115, ID: 55
L:	if.end14

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57 in function: main
D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	br i1 %tobool11, label %if.then12, label %if.end14, !dbg !114, !phasar.instruction.id !115, ID: 55
L:	if.end14

D:	br i1 %tobool, label %if.then7, label %if.else, !dbg !92, !phasar.instruction.id !93, ID: 45
L:	if.end15

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %tobool16 = icmp ne i32 %7, 0, !dbg !124, !phasar.instruction.id !127, ID: 61 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

--- IFDS START RESULT RECORD ---
N: %8 = load i8*, i8** %taint, align 8, !dbg !134, !phasar.instruction.id !135, ID: 64 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: br label %if.end30, !phasar.instruction.id !167, ID: 81 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80
A:	%a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15

D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool16 = icmp ne i32 %7, 0, !dbg !124, !phasar.instruction.id !127, ID: 61

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

--- IFDS START RESULT RECORD ---
N: %cmp19 = icmp ne i8* %8, null, !dbg !136, !phasar.instruction.id !137, ID: 65 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	%8 = load i8*, i8** %taint, align 8, !dbg !134, !phasar.instruction.id !135, ID: 64

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %9 = zext i1 %cmp19 to i64, !dbg !134, !phasar.instruction.id !138, ID: 66 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	%8 = load i8*, i8** %taint, align 8, !dbg !134, !phasar.instruction.id !135, ID: 64

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	%cmp19 = icmp ne i8* %8, null, !dbg !136, !phasar.instruction.id !137, ID: 65

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

--- IFDS START RESULT RECORD ---
N: %cond21 = select i1 %cmp19, i32 0, i32 1, !dbg !134, !phasar.instruction.id !139, ID: 67 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%9 = zext i1 %cmp19 to i64, !dbg !134, !phasar.instruction.id !138, ID: 66

D:	%cmp19 = icmp ne i8* %8, null, !dbg !136, !phasar.instruction.id !137, ID: 65

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	%8 = load i8*, i8** %taint, align 8, !dbg !134, !phasar.instruction.id !135, ID: 64

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	%8 = load i8*, i8** %taint, align 8, !dbg !134, !phasar.instruction.id !135, ID: 64

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	%cmp19 = icmp ne i8* %8, null, !dbg !136, !phasar.instruction.id !137, ID: 65

D:	%9 = zext i1 %cmp19 to i64, !dbg !134, !phasar.instruction.id !138, ID: 66

D:	%cond21 = select i1 %cmp19, i32 0, i32 1, !dbg !134, !phasar.instruction.id !139, ID: 67

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

--- IFDS START RESULT RECORD ---
N: %10 = load i32, i32* %ut5, align 4, !dbg !141, !phasar.instruction.id !143, ID: 69 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: %tobool22 = icmp ne i32 %10, 0, !dbg !141, !phasar.instruction.id !144, ID: 70 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%10 = load i32, i32* %ut5, align 4, !dbg !141, !phasar.instruction.id !143, ID: 69

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

--- IFDS START RESULT RECORD ---
N: %11 = load i32, i32* %rc, align 4, !dbg !178, !phasar.instruction.id !179, ID: 87 in function: main
D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80
A:	%a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15

D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: br label %if.end27, !phasar.instruction.id !159, ID: 77 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool22, label %if.then23, label %if.else25, !dbg !145, !phasar.instruction.id !146, ID: 71
L:	if.end27

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: br i1 %tobool22, label %if.then23, label %if.else25, !dbg !145, !phasar.instruction.id !146, ID: 71 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool22 = icmp ne i32 %10, 0, !dbg !141, !phasar.instruction.id !144, ID: 70

D:	%10 = load i32, i32* %ut5, align 4, !dbg !141, !phasar.instruction.id !143, ID: 69

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool22, label %if.then23, label %if.else25, !dbg !145, !phasar.instruction.id !146, ID: 71
L:	if.end27

D:	%10 = load i32, i32* %ut5, align 4, !dbg !141, !phasar.instruction.id !143, ID: 69

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73 in function: main
D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	br i1 %tobool22, label %if.then23, label %if.else25, !dbg !145, !phasar.instruction.id !146, ID: 71
L:	if.end27

D:	%10 = load i32, i32* %ut5, align 4, !dbg !141, !phasar.instruction.id !143, ID: 69

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: br label %if.end27, !dbg !152, !phasar.instruction.id !153, ID: 74 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	br i1 %tobool22, label %if.then23, label %if.else25, !dbg !145, !phasar.instruction.id !146, ID: 71
L:	if.end27

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool22, label %if.then23, label %if.else25, !dbg !145, !phasar.instruction.id !146, ID: 71
L:	if.end27

D:	%10 = load i32, i32* %ut5, align 4, !dbg !141, !phasar.instruction.id !143, ID: 69

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76 in function: main
D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool22, label %if.then23, label %if.else25, !dbg !145, !phasar.instruction.id !146, ID: 71
L:	if.end27

D:	%10 = load i32, i32* %ut5, align 4, !dbg !141, !phasar.instruction.id !143, ID: 69

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

--- IFDS START RESULT RECORD ---
N: br label %if.end30, !dbg !160, !phasar.instruction.id !161, ID: 78 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	br i1 %tobool22, label %if.then23, label %if.else25, !dbg !145, !phasar.instruction.id !146, ID: 71
L:	if.end27

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79 in function: main
D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	%7 = load i32, i32* %ut4, align 4, !dbg !124, !phasar.instruction.id !126, ID: 60

D:	%5 = load i32, i32* %ut2, align 4, !dbg !94, !phasar.instruction.id !97, ID: 46

D:	%4 = load i32, i32* %ut1, align 4, !dbg !88, !phasar.instruction.id !90, ID: 43

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%6 = load i32, i32* %ut3, align 4, !dbg !110, !phasar.instruction.id !112, ID: 53

--- IFDS START RESULT RECORD ---
N: br label %if.end32, !dbg !168, !phasar.instruction.id !169, ID: 82 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80
A:	%a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15

D:	br i1 %tobool16, label %if.then17, label %if.else28, !dbg !128, !phasar.instruction.id !129, ID: 62
L:	if.end30

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %nt, metadata !174, metadata !32), !dbg !175, !phasar.instruction.id !176, ID: 85 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80
A:	%a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15

D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	br i1 %cmp2, label %if.then4, label %if.else31, !dbg !75, !phasar.instruction.id !76, ID: 36
L:	if.end32

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %nt, align 4, !dbg !175, !phasar.instruction.id !177, ID: 86 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80
A:	%a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

--- IFDS START RESULT RECORD ---
N: store i32 %11, i32* %retval, align 4, !dbg !180, !phasar.instruction.id !181, ID: 88 in function: main
D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	%11 = load i32, i32* %rc, align 4, !dbg !178, !phasar.instruction.id !179, ID: 87

D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80
A:	%a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !180, !phasar.instruction.id !182, ID: 89 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80
A:	%a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !p
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549710474-trace.txt
hasar.instruction.id !24, ID: 11

--- IFDS START RESULT RECORD ---
N: ret i32 %12, !dbg !183, !phasar.instruction.id !185, ID: 91 in function: main
D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%rc = alloca i32, align 4, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %rc, align 4, !dbg !170, !phasar.instruction.id !172, ID: 83
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 0, i32* %a29, align 4, !dbg !164, !phasar.instruction.id !166, ID: 80
A:	%a29 = alloca i32, align 4, !phasar.instruction.id !28, ID: 15

D:	call void @llvm.dbg.declare(metadata i32* %a29, metadata !162, metadata !32), !dbg !164, !phasar.instruction.id !165, ID: 79

D:	store i32 0, i32* %a26, align 4, !dbg !156, !phasar.instruction.id !158, ID: 76
A:	%a26 = alloca i32, align 4, !phasar.instruction.id !27, ID: 14

D:	call void @llvm.dbg.declare(metadata i32* %a26, metadata !154, metadata !32), !dbg !156, !phasar.instruction.id !157, ID: 75

D:	store i32 0, i32* %a24, align 4, !dbg !149, !phasar.instruction.id !151, ID: 73
A:	%a24 = alloca i32, align 4, !phasar.instruction.id !26, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a24, metadata !147, metadata !32), !dbg !149, !phasar.instruction.id !150, ID: 72

D:	store i32 %cond21, i32* %t18, align 4, !dbg !132, !phasar.instruction.id !140, ID: 68
A:	%t18 = alloca i32, align 4, !phasar.instruction.id !25, ID: 12

D:	call void @llvm.dbg.declare(metadata i32* %t18, metadata !130, metadata !32), !dbg !132, !phasar.instruction.id !133, ID: 63

D:	store i32 0, i32* %a13, align 4, !dbg !118, !phasar.instruction.id !120, ID: 57
A:	%a13 = alloca i32, align 4, !phasar.instruction.id !24, ID: 11

D:	call void @llvm.dbg.declare(metadata i32* %a13, metadata !116, metadata !32), !dbg !118, !phasar.instruction.id !119, ID: 56

D:	store i32 0, i32* %a, align 4, !dbg !103, !phasar.instruction.id !105, ID: 50
A:	%a = alloca i32, align 4, !phasar.instruction.id !23, ID: 10

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !101, metadata !32), !dbg !103, !phasar.instruction.id !104, ID: 49

D:	store i32 %cond, i32* %t, align 4, !dbg !79, !phasar.instruction.id !87, ID: 42
A:	%t = alloca i32, align 4, !phasar.instruction.id !22, ID: 9

D:	call void @llvm.dbg.declare(metadata i32* %t, metadata !77, metadata !32), !dbg !79, !phasar.instruction.id !80, ID: 37

D:	%12 = load i32, i32* %retval, align 4, !dbg !183, !phasar.instruction.id !184, ID: 90

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !68, !phasar.instruction.id !70, ID: 33

D:	store i8* %call, i8** %taint, align 8, !dbg !71, !phasar.instruction.id !72, ID: 34
A:	%taint = alloca i8*, align 8, !phasar.instruction.id !21, ID: 8


