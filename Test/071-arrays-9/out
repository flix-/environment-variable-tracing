PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %str = alloca [2 x i8*], align 16, !phasar.instruction.id !13
[TRACK]   %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   %arr_decay = alloca i8**, align 8, !phasar.instruction.id !14
[TRACK]   %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %arr_decay = alloca i8**, align 8, !phasar.instruction.id !14
[TRACK]   %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !16### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata [2 x i8*]* %str, metadata !18, metadata !24), !dbg !25, !phasar.instruction.id !26, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8*** %arr_decay, metadata !33, metadata !24), !dbg !35, !phasar.instruction.id !36, ID: 11 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i32 0, i32 0, !dbg !37, !phasar.instruction.id !38, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

--- IFDS START RESULT RECORD ---
N: store i8** %arraydecay, i8*** %arr_decay, align 8, !dbg !35, !phasar.instruction.id !39, ID: 13 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %ut1, metadata !40, metadata !24), !dbg !41, !phasar.instruction.id !42, ID: 14 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8**, i8*** %arr_decay, align 8, !dbg !43, !phasar.instruction.id !44, ID: 15 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx1 = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !43, !phasar.instruction.id !45, ID: 16 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %arrayidx1, align 8, !dbg !43, !phasar.instruction.id !46, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %ut1, align 8, !dbg !41, !phasar.instruction.id !47, ID: 18 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !48, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 19 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i8**, i8*** %arr_decay, align 8, !dbg !51, !phasar.instruction.id !52, ID: 20 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx2 = getelementptr inbounds i8*, i8** %2, i64 1, !dbg !51, !phasar.instruction.id !53, ID: 21 in function: main
D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %arrayidx2, align 8, !dbg !51, !phasar.instruction.id !54, ID: 22 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementpt
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549913759-trace.txt
r inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %t1, align 8, !dbg !49, !phasar.instruction.id !55, ID: 23 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	%3 = load i8*, i8** %arrayidx2, align 8, !dbg !51, !phasar.instruction.id !54, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !56, !phasar.instruction.id !57, ID: 24 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 8

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%arr_decay = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %arrayidx, align 8, !dbg !31, !phasar.instruction.id !32, ID: 10
A:	%str = alloca [2 x i8*], align 16, !phasar.instruction.id !13, ID: 2
A:	%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %str, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1


