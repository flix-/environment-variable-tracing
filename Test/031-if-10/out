PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %rc = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %untainted = alloca i32, align 4, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %taint = alloca i32, align 4, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a = alloca i32, align 4, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %untainted, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %taint, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27

getSummaryFlowFunction()
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29

getNormalFlowFunction()
  store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30

Got store instruction
getNormalFlowFunction()
  %0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33

Got load instruction
getNormalFlowFunction()
  %tobool = icmp ne i32 %0, 0, !dbg !31, !phasar.instruction.id !34

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36

Got branch instruction
getSummaryFlowFunction()
  %call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40

getNormalFlowFunction()
  %tobool2 = icmp ne i32 %call1, 0, !dbg !37, !phasar.instruction.id !41

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !42, !phasar.instruction.id !43

Got branch instruction
getNormalFlowFunction()
  store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46

Got store instruction
getNormalFlowFunction()
  br label %if.end, !dbg !47, !phasar.instruction.id !48

Got branch instruction
getNormalFlowFunction()
  br label %if.end10, !dbg !53, !phasar.instruction.id !54

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !72, metadata !19), !dbg !73, !phasar.instruction.id !74

getNormalFlowFunction()
  store i32 1, i32* %a, align 4, !dbg !73, !phasar.instruction.id !75

Got store instruction
getNormalFlowFunction()
  %1 = load i32, i32* %untainted, align 4, !dbg !76, !phasar.instruction.id !78

Got load instruction
getNormalFlowFunction()
  %tobool11 = icmp ne i32 %1, 0, !dbg !76, !phasar.instruction.id !79

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !80, !phasar.instruction.id !81

Got branch instruction
getNormalFlowFunction()
  store i32 0, i32* %a, align 4, !dbg !82, !phasar.instruction.id !84

Got store instruction
getNormalFlowFunction()
  br label %if.end14, !dbg !85, !phasar.instruction.id !86

Got branch instruction
getNormalFlowFunction()
  %2 = load i32, i32* %rc, align 4, !dbg !91, !phasar.instruction.id !92

Got load instruction
getNormalFlowFunction()
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !80, !phasar.instruction.id !81

Got branch instruction
getNormalFlowFunction()
  store i32 1, i32* %a, align 4, !dbg !87, !phasar.instruction.id !89

Got store instruction
getNormalFlowFunction()
  br label %if.end14, !phasar.instruction.id !90

Got branch instruction
getCallToRetFlowFunction()
getNormalFlowFunction()
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !42, !phasar.instruction.id !43

Got branch instruction
getNormalFlowFunction()
  store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51

Got store instruction
getNormalFlowFunction()
  br label %if.end, !phasar.instruction.id !52

Got branch instruction
getCallToRetFlowFunction()
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36

Got branch instruction
getSummaryFlowFunction()
  %call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getNormalFlowFunction()
  %tobool6 = icmp ne i32 %call5, 0, !dbg !55, !phasar.instruction.id !59

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool6, label %if.then7, label %if.else8, !dbg !60, !phasar.instruction.id !61

Got branch instruction
getNormalFlowFunction()
  store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64

Got store instruction
getNormalFlowFunction()
  br label %if.end9, !dbg !65, !phasar.instruction.id !66

Got branch instruction
getNormalFlowFunction()
  br label %if.end10, !phasar.instruction.id !71

Got branch instruction
getNormalFlowFunction()
  br i1 %tobool6, label %if.then7, label %if.else8, !dbg !60, !phasar.instruction.id !61

Got branch instruction
getNormalFlowFunction()
  store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69

Got store instruction
getNormalFlowFunction()
  br label %if.end9, !phasar.instruction.id !70

Got branch instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  %call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !72, metadata !19), !dbg !73, !phasar.instruction.id !74

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !72, metadata !19), !dbg !73, !phasar.instruction.id !74

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !72, metadata !19), !dbg !73, !phasar.instruction.id !74

getSummaryFlowFunction()
  %call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !72, metadata !19), !dbg !73, !phasar.instruction.id !74

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !72, metadata !19), !dbg !73, !phasar.instruction.id !74

getSummaryFlowFunction()
  %call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40

getSummaryFlowFunction()
  %call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getCallToRetFlowFunction()
getSummaryFlowFunction()
  %call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !72, metadata !19), !dbg !73, !phasar.instruction.id !74

getSummaryFlowFunction()
  %call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21

getCallFlowFunction()
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %untainted, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %taint, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27

getCallFlowFunction()
  %call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40

getCallFlowFunction()
  %call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !72, metadata !19), !dbg !73, !phasar.instruction.id !74### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !42, !phasar.instruction.id !43, ID: 17
L:	if.end

D:	%call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40, ID: 15

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	%call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40, ID: 15

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !42, !phasar.instruction.id !43, ID: 17
L:	if.end

--- IFDS START RESULT RECORD ---
N: store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %untainted, metadata !22, metadata !19), !dbg !23, !phasar.instruction.id !24, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %untainted = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %taint, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %0, 0, !dbg !31, !phasar.instruction.id !34, ID: 13 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end10, !phasar.instruction.id !71, ID: 30 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	br i1 %tobool6, label %if.then7, label %if.else8, !dbg !60, !phasar.instruction.id !61, ID: 25
L:	if.end9

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14 in function: main
D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	%tobool = icmp ne i32 %0, 0, !dbg !31, !phasar.instruction.id !34, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40, ID: 15 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

--- IFDS START RESULT RECORD ---
N: %tobool2 = icmp ne i32 %call1, 0, !dbg !37, !phasar.instruction.id !41, ID: 16 in function: main
D:	%call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40, ID: 15

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %untainted, align 4, !dbg !76, !phasar.instruction.id !78, ID: 33 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %if.end, !phasar.instruction.id !52, ID: 21 in function: main
D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !42, !phasar.instruction.id !43, ID: 17
L:	if.end

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br i1 %tobool2, label %if.then3, label %if.else, !dbg !42, !phasar.instruction.id !43, ID: 17 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	%call1 = call i32 (...) @foo(), !dbg !37, !phasar.instruction.id !40, ID: 15

D:	%tobool2 = icmp ne i32 %call1, 0, !dbg !37, !phasar.instruction.id !41, ID: 16

--- IFDS START RESULT RECORD ---
N: br label %if.end, !dbg !47, !phasar.instruction.id !48, ID: 19 in function: main
D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !42, !phasar.instruction.id !43, ID: 17
L:	if.end

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %if.end10, !dbg !53, !phasar.instruction.id !54, ID: 22 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	br i1 %tobool2, label %if.then3, label %if.else, !dbg !42, !phasar.instruction.id !43, ID: 17
L:	if.end

--- IFDS START RESULT RECORD ---
N: %call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 23 in function: main
D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %tobool6 = icmp ne i32 %call5, 0, !dbg !55, !phasar.instruction.id !59, ID: 24 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	%call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 23

--- IFDS START RESULT RECORD ---
N: br label %if.end9, !phasar.instruction.id !70, ID: 29 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool6, label %if.then7, label %if.else8, !dbg !60, !phasar.instruction.id !61, ID: 25
L:	if.end9

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool6, label %if.then7, label %if.else8, !dbg !60, !phasar.instruction.id !61, ID: 25 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	%call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 23

D:	%tobool6 = icmp ne i32 %call5, 0, !dbg !55, !phasar.instruction.id !59, ID: 24

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26 in function: main
D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	br i1 %tobool6, label %if.then7, label %if.else8, !dbg !60, !phasar.instruction.id !61, ID: 25
L:	if.end9

D:	%call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 23

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %if.end9, !dbg !65, !phasar.instruction.id !66, ID: 27 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	br i1 %tobool6, label %if.then7, label %if.else8, !dbg !60, !phasar.instruction.id !61, ID: 25
L:	if.end9

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool6, label %if.then7, label %if.else8, !dbg !60, !phasar.instruction.id !61, ID: 25
L:	if.end9

D:	%call5 = call i32 (...) @foo(), !dbg !55, !phasar.instruction.id !58, ID: 23

D:	%0 = load i32, i32* %taint, align 4, !dbg !31, !phasar.instruction.id !33, ID: 12

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !72, metadata !19), !dbg !73, !phasar.instruction.id !74, ID: 31 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %if.then, label %if.else4, !dbg !35, !phasar.instruction.id !36, ID: 14
L:	if.end10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %a, align 4, !dbg !73, !phasar.instruction.id !75, ID: 32 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %tobool11 = icmp ne i32 %1, 0, !dbg !76, !phasar.instruction.id !79, ID: 34 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %rc, align 4, !dbg !91, !phasar.instruction.id !92, ID: 40 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %if.end14, !phasar.instruction.id !90, ID: 39 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br i1 %tobool11, label %if.then12, label %if.else13, !dbg !80, !phasar.instruction.id !81, ID: 35 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !82, !phasar.instruction.id !84, ID: 36 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end14, !dbg !85, !phasar.instruction.id !86, ID: 37 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %a, align 4, !dbg !87, !phasar.instruction.id !89, ID: 38 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: ret i32 %2, !dbg !93, !phasar.instruction.id !94, ID: 41 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !49, !phasar.instruction.id !51, ID: 20
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %rc, align 4, !dbg !44, !phasar.instruction.id !46, ID: 18
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %call, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !30, ID: 11
A:	%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 1, i32* %rc, align 4, !dbg !62, !phasar.instruction.id !64, ID: 26
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	st

ore i32 1, i32* %rc, align 4, !dbg !67, !phasar.instruction.id !69, ID: 28
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%2 = load i32, i32* %rc, align 4, !dbg !91, !phasar.instruction.id !92, ID: 40


No IFDS report available!