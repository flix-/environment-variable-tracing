PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %taint = alloca i32, align 4, !phasar.instruction.id !14
[TRACK] Destination:
[TRACK]   %a = alloca i32, align 4, !phasar.instruction.id !15### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %tainted, metadata !18, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %taint, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27, ID: 10 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %cmp, label %cond.true, label %cond.false, !dbg !28, !phasar.instruction.id !32, ID: 13 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i32 (...) @foo(), !dbg !28, !phasar.instruction.id !29, ID: 11 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %cmp = icmp eq i32 %call1, 0, !dbg !30, !phasar.instruction.id !31, ID: 12 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %cond.end, !dbg !28, !phasar.instruction.id !38, ID: 18 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call2 = call i32 (...) @bar(), !dbg !33, !phasar.instruction.id !34, ID: 14 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %conv = sext i32 %call2 to i64, !dbg !33, !phasar.instruction.id !35, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %0 = inttoptr i64 %conv to i32*, !dbg !33, !phasar.instruction.id !36, ID: 16 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = ptrtoint i32* %cond to i32, !dbg !28, !phasar.instruction.id !40, ID: 20 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	%cond = phi i32* [ %0, %cond.true ], [ %tainted, %cond.false ], !dbg !28, !phasar.instruction.id !39, ID: 19

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %cond.end, !dbg !28, !phasar.instruction.id !37, ID: 17 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

--- IFDS START RESULT RECORD ---
N: %cond = phi i32* [ %0, %cond.true ], [ %tainted, %cond.false ], !dbg !28, !phasar.instruction.id !39, ID: 19 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, ID: 21 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	%1 = ptrtoint i32* %cond to i32, !dbg !28, !phasar.instruction.id !40, ID: 20

D:	%cond = phi i32* [ %0, %cond.true ], [ %tainted, %cond.false ], !dbg !28, !phasar.instruction.id !39, ID: 19

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !42, metadata !19), !dbg !43, !phasar.instruction.id !44, ID: 22 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, ID: 21
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %taint, align 4, !dbg !45, !phasar.instruction.id !46, ID: 23 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, ID: 21
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %2, i32* %a, align 4, !dbg !43, !phasar.instruction.id !47, ID: 24 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%2 = load i32, i32* %taint, align 4, !dbg !45, !phasar.instruction.id !46, ID: 23

D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, ID: 21
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut, metadata !48, metadata !19), !dbg !49, !phasar.instruction.id !50, ID: 25 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, ID: 21
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, ID: 21
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %ut, align 4, !dbg !49, !phasar.instruction.id !51, ID: 26 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, ID: 21
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, ID: 21
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !52, !phasar.instruction.id !53, ID: 27 in function: main
D:	store i32 %call, i32* %tainted, align 4, !dbg !20, !phasar.instruction.id !24, ID: 9
A:	%tainted = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 8

D:	store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, ID: 21
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 %1, i32* %taint, align 4, !dbg !26, !phasar.instruction.id !41, 
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549752612-trace.txt
ID: 21
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1


