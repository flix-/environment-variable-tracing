PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %tainted = alloca i8*, align 8, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23

getNormalFlowFunction()
  store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24

Got store instruction
getNormalFlowFunction()
  %0 = load i8*, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !26

Got load instruction
getSummaryFlowFunction()
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 3, i32 1, i1 false), !dbg !27, !phasar.instruction.id !28

Got memset instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !29, metadata !19), !dbg !30, !phasar.instruction.id !31

getNormalFlowFunction()
  %1 = load i8*, i8** %tainted, align 8, !dbg !32, !phasar.instruction.id !33

Got load instruction
getNormalFlowFunction()
  store i8* %1, i8** %not_tainted, align 8, !dbg !30, !phasar.instruction.id !34

Got store instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 3, i32 1, i1 false), !dbg !27, !phasar.instruction.id !28

Got memset instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 3, i32 1, i1 false), !dbg !27, !phasar.instruction.id !28

Got memset instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !29, metadata !19), !dbg !30, !phasar.instruction.id !31

getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 3, i32 1, i1 false), !dbg !27, !phasar.instruction.id !28

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24
[TRACK] i8* %0
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !29, metadata !19), !dbg !30, !phasar.instruction.id !31

### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 3, i32 1, i1 false), !dbg !27, !phasar.instruction.id !28, ID: 9 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !26, ID: 8

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !26, ID: 8 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %not_tainted, align 8, !dbg !30, !phasar.instruction.id !34, ID: 12 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !26, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !22, !phasar.instruction.id !23, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !29, metadata !19), !dbg !30, !phasar.instruction.id !31, ID: 10 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !26, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %tainted, align 8, !dbg !32, !phasar.instruction.id !33, ID: 11 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !25, !phasar.instruction.id !26, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !35, !phasar.instruction.id !36, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!