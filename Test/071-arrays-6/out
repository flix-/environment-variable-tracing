PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %tainted1 = alloca i8*, align 8, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %tainted2 = alloca i8*, align 8, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !17

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !18

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata [2 x [2 x %struct.s]]* %str_array, metadata !19, metadata !34), !dbg !35, !phasar.instruction.id !36

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38

getNormalFlowFunction()
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40

Got GEP instruction
getNormalFlowFunction()
  %arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41

Got GEP instruction
getNormalFlowFunction()
  %b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43

Got GEP instruction
getNormalFlowFunction()
  %taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45

Got GEP instruction
getNormalFlowFunction()
  %arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46

Got GEP instruction
getNormalFlowFunction()
  store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48

Got store instruction
getNormalFlowFunction()
  %arrayidx3 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50

Got GEP instruction
getNormalFlowFunction()
  %arrayidx4 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx3, i64 0, i64 0, !dbg !49, !phasar.instruction.id !51

Got GEP instruction
getNormalFlowFunction()
  %b5 = getelementptr inbounds %struct.s, %struct.s* %arrayidx4, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53

Got GEP instruction
getNormalFlowFunction()
  %taint6 = getelementptr inbounds %struct.t, %struct.t* %b5, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55

Got GEP instruction
getNormalFlowFunction()
  %arrayidx7 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint6, i64 0, i64 0, !dbg !49, !phasar.instruction.id !56

Got GEP instruction
getNormalFlowFunction()
  %0 = load i8*, i8** %arrayidx7, align 8, !dbg !49, !phasar.instruction.id !57

Got load instruction
getNormalFlowFunction()
  %arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59

Got GEP instruction
getNormalFlowFunction()
  %arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60

Got GEP instruction
getNormalFlowFunction()
  %b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62

Got GEP instruction
getNormalFlowFunction()
  %taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64

Got GEP instruction
getNormalFlowFunction()
  %arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65

Got GEP instruction
getNormalFlowFunction()
  store i8* %0, i8** %arrayidx12, align 8, !dbg !66, !phasar.instruction.id !67

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14
[TRACK]   %arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40
[TRACK]   %arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41
[TRACK]   %b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43
[TRACK]   %taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
[TRACK]   %arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46
[TRACK] Destination:
[TRACK]   %str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14
[TRACK]   %arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59
[TRACK]   %arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60
[TRACK]   %b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62
[TRACK]   %taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64
[TRACK]   %arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted1, metadata !68, metadata !34), !dbg !69, !phasar.instruction.id !70

getNormalFlowFunction()
  %arrayidx13 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !71, !phasar.instruction.id !72

Got GEP instruction
getNormalFlowFunction()
  %arrayidx14 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx13, i64 0, i64 0, !dbg !71, !phasar.instruction.id !73

Got GEP instruction
getNormalFlowFunction()
  %b15 = getelementptr inbounds %struct.s, %struct.s* %arrayidx14, i32 0, i32 1, !dbg !74, !phasar.instruction.id !75

Got GEP instruction
getNormalFlowFunction()
  %taint16 = getelementptr inbounds %struct.t, %struct.t* %b15, i32 0, i32 0, !dbg !76, !phasar.instruction.id !77

Got GEP instruction
getNormalFlowFunction()
  %arrayidx17 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint16, i64 0, i64 0, !dbg !71, !phasar.instruction.id !78

Got GEP instruction
getNormalFlowFunction()
  %1 = load i8*, i8** %arrayidx17, align 8, !dbg !71, !phasar.instruction.id !79

Got load instruction
getNormalFlowFunction()
  store i8* %1, i8** %tainted1, align 8, !dbg !69, !phasar.instruction.id !80

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14
[TRACK]   %arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40
[TRACK]   %arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41
[TRACK]   %b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43
[TRACK]   %taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
[TRACK]   %arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46
[TRACK] Destination:
[TRACK]   %tainted1 = alloca i8*, align 8, !phasar.instruction.id !15
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !81, metadata !34), !dbg !82, !phasar.instruction.id !83

getNormalFlowFunction()
  %arrayidx18 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !84, !phasar.instruction.id !85

Got GEP instruction
getNormalFlowFunction()
  %arrayidx19 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx18, i64 0, i64 1, !dbg !84, !phasar.instruction.id !86

Got GEP instruction
getNormalFlowFunction()
  %b20 = getelementptr inbounds %struct.s, %struct.s* %arrayidx19, i32 0, i32 1, !dbg !87, !phasar.instruction.id !88

Got GEP instruction
getNormalFlowFunction()
  %taint21 = getelementptr inbounds %struct.t, %struct.t* %b20, i32 0, i32 0, !dbg !89, !phasar.instruction.id !90

Got GEP instruction
getNormalFlowFunction()
  %arrayidx22 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint21, i64 0, i64 1, !dbg !84, !phasar.instruction.id !91

Got GEP instruction
getNormalFlowFunction()
  %2 = load i8*, i8** %arrayidx22, align 8, !dbg !84, !phasar.instruction.id !92

Got load instruction
getNormalFlowFunction()
  store i8* %2, i8** %tainted2, align 8, !dbg !82, !phasar.instruction.id !93

Got store instruction
getNormalFlowFunction()
  %arrayidx23 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95

Got GEP instruction
getNormalFlowFunction()
  %arrayidx24 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx23, i64 0, i64 0, !dbg !94, !phasar.instruction.id !96

Got GEP instruction
getNormalFlowFunction()
  %b25 = getelementptr inbounds %struct.s, %struct.s* %arrayidx24, i32 0, i32 1, !dbg !97, !phasar.instruction.id !98

Got GEP instruction
getNormalFlowFunction()
  %taint26 = getelementptr inbounds %struct.t, %struct.t* %b25, i32 0, i32 0, !dbg !99, !phasar.instruction.id !100

Got GEP instruction
getNormalFlowFunction()
  %arrayidx27 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint26, i64 0, i64 0, !dbg !94, !phasar.instruction.id !101

Got GEP instruction
getNormalFlowFunction()
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx27, align 8, !dbg !102, !phasar.instruction.id !103

Got store instruction
getNormalFlowFunction()
  %arrayidx28 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !104, !phasar.instruction.id !105

Got GEP instruction
getNormalFlowFunction()
  %arrayidx29 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx28, i64 0, i64 0, !dbg !104, !phasar.instruction.id !106

Got GEP instruction
getNormalFlowFunction()
  %b30 = getelementptr inbounds %struct.s, %struct.s* %arrayidx29, i32 0, i32 1, !dbg !107, !phasar.instruction.id !108

Got GEP instruction
getNormalFlowFunction()
  %taint31 = getelementptr inbounds %struct.t, %struct.t* %b30, i32 0, i32 0, !dbg !109, !phasar.instruction.id !110

Got GEP instruction
getNormalFlowFunction()
  %arrayidx32 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint31, i64 0, i64 0, !dbg !104, !phasar.instruction.id !111

Got GEP instruction
getNormalFlowFunction()
  %3 = load i8*, i8** %arrayidx32, align 8, !dbg !104, !phasar.instruction.id !112

Got load instruction
getNormalFlowFunction()
  store i8* %3, i8** %tainted1, align 8, !dbg !113, !phasar.instruction.id !114

Got store instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !81, metadata !34), !dbg !82, !phasar.instruction.id !83

getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted1, metadata !68, metadata !34), !dbg !69, !phasar.instruction.id !70

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !81, metadata !34), !dbg !82, !phasar.instruction.id !83

[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14
[TRACK]   %arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59
[TRACK]   %arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60
[TRACK]   %b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62
[TRACK]   %taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64
[TRACK]   %arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65
[TRACK] Destination:
[TRACK]   %tainted2 = alloca i8*, align 8, !phasar.instruction.id !16
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !115, metadata !34), !dbg !116, !phasar.instruction.id !117

getNormalFlowFunction()
  %4 = load i8*, i8** %tainted1, align 8, !dbg !118, !phasar.instruction.id !119

Got load instruction
getNormalFlowFunction()
  store i8* %4, i8** %not_tainted, align 8, !dbg !116, !phasar.instruction.id !120

Got store instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !115, metadata !34), !dbg !116, !phasar.instruction.id !117

getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted1, metadata !68, metadata !34), !dbg !69, !phasar.instruction.id !70

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !81, metadata !34), !dbg !82, !phasar.instruction.id !83

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !115, metadata !34), !dbg !116, !phasar.instruction.id !117

getCallToRetFlowFunction()
getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata [2 x [2 x %struct.s]]* %str_array, metadata !19, metadata !34), !dbg !35, !phasar.instruction.id !36

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted1, metadata !68, metadata !34), !dbg !69, !phasar.instruction.id !70

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !81, metadata !34), !dbg !82, !phasar.instruction.id !83

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !115, metadata !34), !dbg !116, !phasar.instruction.id !117### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %arrayidx12, align 8, !dbg !66, !phasar.instruction.id !67, ID: 27 in function: main
D:	%0 = load i8*, i8** %arrayidx7, align 8, !dbg !49, !phasar.instruction.id !57, ID: 21

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata [2 x [2 x %struct.s]]* %str_array, metadata !19, metadata !34), !dbg !35, !phasar.instruction.id !36, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 9

--- IFDS START RESULT RECORD ---
N: %b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx3 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 16 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx4 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx3, i64 0, i64 0, !dbg !49, !phasar.instruction.id !51, ID: 17 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b5 = getelementptr inbounds %struct.s, %struct.s* %arrayidx4, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 18 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint6 = getelementptr inbounds %struct.t, %struct.t* %b5, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55, ID: 19 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx7 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint6, i64 0, i64 0, !dbg !49, !phasar.instruction.id !56, ID: 20 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %arrayidx7, align 8, !dbg !49, !phasar.instruction.id !57, ID: 21 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22 in function: main
D:	%0 = load i8*, i8** %arrayidx7, align 8, !dbg !49, !phasar.instruction.id !57, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

--- IFDS START RESULT RECORD ---
N: %arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	%0 = load i8*, i8** %arrayidx7, align 8, !dbg !49, !phasar.instruction.id !57, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	%0 = load i8*, i8** %arrayidx7, align 8, !dbg !49, !phasar.instruction.id !57, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %arrayidx7, align 8, !dbg !49, !phasar.instruction.id !57, ID: 21

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

--- IFDS START RESULT RECORD ---
N: %arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %arrayidx7, align 8, !dbg !49, !phasar.instruction.id !57, ID: 21

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted1, metadata !68, metadata !34), !dbg !69, !phasar.instruction.id !70, ID: 28 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx13 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !71, !phasar.instruction.id !72, ID: 29 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx14 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx13, i64 0, i64 0, !dbg !71, !phasar.instruction.id !73, ID: 30 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

--- IFDS START RESULT RECORD ---
N: %b15 = getelementptr inbounds %struct.s, %struct.s* %arrayidx14, i32 0, i32 1, !dbg !74, !phasar.instruction.id !75, ID: 31 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint16 = getelementptr inbounds %struct.t, %struct.t* %b15, i32 0, i32 0, !dbg !76, !phasar.instruction.id !77, ID: 32 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx17 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint16, i64 0, i64 0, !dbg !71, !phasar.instruction.id !78, ID: 33 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %arrayidx17, align 8, !dbg !71, !phasar.instruction.id !79, ID: 34 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %tainted1, align 8, !dbg !69, !phasar.instruction.id !80, ID: 35 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	%1 = load i8*, i8** %arrayidx17, align 8, !dbg !71, !phasar.instruction.id !79, ID: 34

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !81, metadata !34), !dbg !82, !phasar.instruction.id !83, ID: 36 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %arrayidx18 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !84, !phasar.instruction.id !85, ID: 37 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx19 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx18, i64 0, i64 1, !dbg !84, !phasar.instruction.id !86, ID: 38 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b20 = getelementptr inbounds %struct.s, %struct.s* %arrayidx19, i32 0, i32 1, !dbg !87, !phasar.instruction.id !88, ID: 39 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

--- IFDS START RESULT RECORD ---
N: %taint21 = getelementptr inbounds %struct.t, %struct.t* %b20, i32 0, i32 0, !dbg !89, !phasar.instruction.id !90, ID: 40 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx22 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint21, i64 0, i64 1, !dbg !84, !phasar.instruction.id !91, ID: 41 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %arrayidx22, align 8, !dbg !84, !phasar.instruction.id !92, ID: 42 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %tainted2, align 8, !dbg !82, !phasar.instruction.id !93, ID: 43 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	%2 = load i8*, i8** %arrayidx22, align 8, !dbg !84, !phasar.instruction.id !92, ID: 42

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx23 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95, ID: 44 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

--- IFDS START RESULT RECORD ---
N: %arrayidx24 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx23, i64 0, i64 0, !dbg !94, !phasar.instruction.id !96, ID: 45 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b25 = getelementptr inbounds %struct.s, %struct.s* %arrayidx24, i32 0, i32 1, !dbg !97, !phasar.instruction.id !98, ID: 46 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint26 = getelementptr inbounds %struct.t, %struct.t* %b25, i32 0, i32 0, !dbg !99, !phasar.instruction.id !100, ID: 47 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %arrayidx27 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint26, i64 0, i64 0, !dbg !94, !phasar.instruction.id !101, ID: 48 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx27, align 8, !dbg !102, !phasar.instruction.id !103, ID: 49 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !39, !phasar.instruction.id !40, ID: 10
A:	%arrayidx1 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx, i64 0, i64 0, !dbg !39, !phasar.instruction.id !41, ID: 11
A:	%b = getelementptr inbounds %struct.s, %struct.s* %arrayidx1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%taint = getelementptr inbounds %struct.t, %struct.t* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint, i64 0, i64 0, !dbg !39, !phasar.instruction.id !46, ID: 14

--- IFDS START RESULT RECORD ---
N: %arrayidx28 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !104, !phasar.instruction.id !105, ID: 50 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx29 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx28, i64 0, i64 0, !dbg !104, !phasar.instruction.id !106, ID: 51 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b30 = getelementptr inbounds %struct.s, %struct.s* %arrayidx29, i32 0, i32 1, !dbg !107, !phasar.instruction.id !108, ID: 52 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %taint31 = getelementptr inbounds %struct.t, %struct.t* %b30, i32 0, i32 0, !dbg !109, !phasar.instruction.id !110, ID: 53 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %arrayidx32 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint31, i64 0, i64 0, !dbg !104, !phasar.instruction.id !111, ID: 54 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %arrayidx32, align 8, !dbg !104, !phasar.instruction.id !112, ID: 55 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %tainted1, align 8, !dbg !113, !phasar.instruction.id !114, ID: 56 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !115, metadata !34), !dbg !116, !phasar.instruction.id !117, ID: 57 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: %4 = load i8*, i8** %tainted1, align 8, !dbg !118, !phasar.instruction.id !119, ID: 58 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %4, i8** %not_tainted, align 8, !dbg !116, !phasar.instruction.id !120, ID: 59 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementptr inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !121, !phasar.instruction.id !122, ID: 60 in function: main
D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %arrayidx2, align 8, !dbg !47, !phasar.instruction.id !48, ID: 15
A:	%str_array = alloca [2 x [2 x %struct.s]], align 16, !phasar.instruction.id !14, ID: 3
A:	%arrayidx8 = getelementptr inbounds [2 x [2 x %struct.s]], [2 x [2 x %struct.s]]* %str_array, i64 0, i64 0, !dbg !58, !phasar.instruction.id !59, ID: 22
A:	%arrayidx9 = getelementptr inbounds [2 x %struct.s], [2 x %struct.s]* %arrayidx8, i64 0, i64 1, !dbg !58, !phasar.instruction.id !60, ID: 23
A:	%b10 = getelementpt

r inbounds %struct.s, %struct.s* %arrayidx9, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 24
A:	%taint11 = getelementptr inbounds %struct.t, %struct.t* %b10, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 25
A:	%arrayidx12 = getelementptr inbounds [2 x i8*], [2 x i8*]* %taint11, i64 0, i64 1, !dbg !58, !phasar.instruction.id !65, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!