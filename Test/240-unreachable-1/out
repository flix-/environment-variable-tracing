PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 12 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %if.then, label %if.end, !dbg !32, !phasar.instruction.id !33, ID: 11
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !22, !phasar.instruction.id !23, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !22, !phasar.instruction.id !23, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27, ID: 8 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i8* %0, null, !dbg !28, !phasar.instruction.id !31, ID: 10 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %rc, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %if.then, label %if.end, !dbg !32, !phasar.instruction.id !33, ID: 11
L:	if.end

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.end, !dbg !32, !phasar.instruction.id !33, ID: 11 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruLine numbers output file: main-line-numbers.txt
[TRACK] Checking end of branch label for: if.then
[TRACK] End of branch label: if.end
[TRACK] Checking end of branch label for: if.then
[TRACK] End of branch label: if.end
ction.id !13, ID: 2

D:	%tobool = icmp ne i8* %0, null, !dbg !28, !phasar.instruction.id !31, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @abort() #5, !dbg !37, !phasar.instruction.id !38, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool, label %if.then, label %if.end, !dbg !32, !phasar.instruction.id !33, ID: 11
L:	if.end

D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 12
A:	%rc = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: unreachable, !dbg !37, !phasar.instruction.id !39, ID: 14 in function: main
D:	store i32 0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 12
A:	%rc = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %if.then, label %if.end, !dbg !32, !phasar.instruction.id !33, ID: 11
L:	if.end

D:	call void @abort() #5, !dbg !37, !phasar.instruction.id !38, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 %1, !dbg !42, !phasar.instruction.id !43, ID: 16 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 9

D:	store i8* %call, i8** %tainted, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1


