PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %tainted = alloca i8*, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a = alloca i32, align 4, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %t1 = alloca i8*, align 8, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %b = alloca i32, align 4, !phasar.instruction.id !17

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !18

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !19, metadata !22), !dbg !23, !phasar.instruction.id !24

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !25, !phasar.instruction.id !26

getNormalFlowFunction()
  store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27

Got store instruction
getNormalFlowFunction()
  %0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30

Got load instruction
getNormalFlowFunction()
  %tobool = icmp ne i8* %0, null, !dbg !28, !phasar.instruction.id !31

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.else, !dbg !32, !phasar.instruction.id !33

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !34, metadata !22), !dbg !36, !phasar.instruction.id !37

getNormalFlowFunction()
  store i32 0, i32* %a, align 4, !dbg !36, !phasar.instruction.id !38

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !39, metadata !22), !dbg !40, !phasar.instruction.id !41

getSummaryFlowFunction()
  %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #4, !dbg !42, !phasar.instruction.id !43

getNormalFlowFunction()
  store i8* %call1, i8** %t1, align 8, !dbg !40, !phasar.instruction.id !44

Got store instruction
getSummaryFlowFunction()
  call void @abort() #5, !dbg !45, !phasar.instruction.id !46

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.else, !dbg !32, !phasar.instruction.id !33

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !22), !dbg !50, !phasar.instruction.id !51

getNormalFlowFunction()
  store i32 1, i32* %b, align 4, !dbg !50, !phasar.instruction.id !52

Got store instruction
getNormalFlowFunction()
  br label %if.end, !phasar.instruction.id !53

Got branch instruction
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !34, metadata !22), !dbg !36, !phasar.instruction.id !37

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !22), !dbg !50, !phasar.instruction.id !51

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !34, metadata !22), !dbg !36, !phasar.instruction.id !37

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !22), !dbg !50, !phasar.instruction.id !51

getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !34, metadata !22), !dbg !36, !phasar.instruction.id !37

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !39, metadata !22), !dbg !40, !phasar.instruction.id !41

getSummaryFlowFunction()
  %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #4, !dbg !42, !phasar.instruction.id !43

getSummaryFlowFunction()
  call void @abort() #5, !dbg !45, !phasar.instruction.id !46

getSummaryFlowFunction()
  call void @abort() #5, !dbg !45, !phasar.instruction.id !46

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !22), !dbg !50, !phasar.instruction.id !51

getCallToRetFlowFunction()
getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !25, !phasar.instruction.id !26

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !19, metadata !22), !dbg !23, !phasar.instruction.id !24

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !34, metadata !22), !dbg !36, !phasar.instruction.id !37

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !39, metadata !22), !dbg !40, !phasar.instruction.id !41

getCallFlowFunction()
  %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #4, !dbg !42, !phasar.instruction.id !43

getCallFlowFunction()
  call void @abort() #5, !dbg !45, !phasar.instruction.id !46

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !22), !dbg !50, !phasar.instruction.id !51### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !36, !phasar.instruction.id !38, ID: 15 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%tobool = icmp ne i8* %0, null, !dbg !28, !phasar.instruction.id !31, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 11

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !25, !phasar.instruction.id !26, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !25, !phasar.instruction.id !26, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !19, metadata !22), !dbg !23, !phasar.instruction.id !24, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i8* %0, null, !dbg !28, !phasar.instruction.id !31, ID: 12 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !54, !phasar.instruction.id !55, ID: 24 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 11 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.else, !dbg !32, !phasar.instruction.id !33, ID: 13 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%tobool = icmp ne i8* %0, null, !dbg !28, !phasar.instruction.id !31, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 11

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !34, metadata !22), !dbg !36, !phasar.inst

ruction.id !37, ID: 14 in function: main
D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 11

D:	%tobool = icmp ne i8* %0, null, !dbg !28, !phasar.instruction.id !31, ID: 12

D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !39, metadata !22), !dbg !40, !phasar.instruction.id !41, ID: 16 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #4, !dbg !42, !phasar.instruction.id !43, ID: 17 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %t1, align 8, !dbg !40, !phasar.instruction.id !44, ID: 18 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #4, !dbg !42, !phasar.instruction.id !43, ID: 17

--- IFDS START RESULT RECORD ---
N: call void @abort() #5, !dbg !45, !phasar.instruction.id !46, ID: 19 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t1, align 8, !dbg !40, !phasar.instruction.id !44, ID: 18
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: unreachable, !dbg !45, !phasar.instruction.id !47, ID: 20 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call1, i8** %t1, align 8, !dbg !40, !phasar.instruction.id !44, ID: 18
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !22), !dbg !50, !phasar.instruction.id !51, ID: 21 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%tobool = icmp ne i8* %0, null, !dbg !28, !phasar.instruction.id !31, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 11

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %b, align 4, !dbg !50, !phasar.instruction.id !52, ID: 22 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%tobool = icmp ne i8* %0, null, !dbg !28, !phasar.instruction.id !31, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !28, !phasar.instruction.id !30, ID: 11

--- IFDS START RESULT RECORD ---
N: br label %if.end, !phasar.instruction.id !53, ID: 23 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !23, !phasar.instruction.id !27, ID: 10
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!