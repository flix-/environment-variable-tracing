PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s = alloca i8*, align 8, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %t = alloca i8*, align 8, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %t1 = alloca i8*, align 8, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %s, metadata !32, metadata !16), !dbg !33, !phasar.instruction.id !34

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24

getNormalFlowFunction()
  store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t, metadata !38, metadata !16), !dbg !39, !phasar.instruction.id !40

getNormalFlowFunction()
  %0 = load i8*, i8** %s, align 8, !dbg !29, !phasar.instruction.id !30

Got load instruction
getSummaryFlowFunction()
  %call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32

getCallFlowFunction()
  %call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32

[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s = alloca i8*, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK] i8* %s
getNormalFlowFunction()
  %s.addr = alloca i8*, align 8, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i8* %s, i8** %s.addr, align 8, !phasar.instruction.id !14

Got store instruction
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] i8* %s
[TRACK] Destination:
[TRACK]   %s.addr = alloca i8*, align 8, !phasar.instruction.id !13
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15, metadata !16), !dbg !17, !phasar.instruction.id !18

getNormalFlowFunction()
  %0 = load i8*, i8** %s.addr, align 8, !dbg !19, !phasar.instruction.id !20

Got load instruction
getCallToRetFlowFunction()
getRetFlowFunction()
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK]   %s.addr = alloca i8*, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK]   %call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32
getNormalFlowFunction()
  store i8* %call1, i8** %t, align 8, !dbg !27, !phasar.instruction.id !33

Got store instruction
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK]   %call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32
[TRACK] Destination:
[TRACK]   %t = alloca i8*, align 8, !phasar.instruction.id !14
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !46, metadata !16), !dbg !47, !phasar.instruction.id !48

getNormalFlowFunction()
  %1 = load i8*, i8** %t, align 8, !dbg !37, !phasar.instruction.id !38

Got load instruction
getNormalFlowFunction()
  store i8* %1, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !39

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %t = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !15
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !46, metadata !16), !dbg !47, !phasar.instruction.id !48

getSummaryFlowFunction()
  %call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t, metadata !38, metadata !16), !dbg !39, !phasar.instruction.id !40

getSummaryFlowFunction()
  %call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15, metadata !16), !dbg !17, !phasar.instruction.id !18

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !46, metadata !16), !dbg !47, !phasar.instruction.id !48

getCallToRetFlowFunction()
getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %s, metadata !32, metadata !16), !dbg !33, !phasar.instruction.id !34

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t, metadata !38, metadata !16), !dbg !39, !phasar.instruction.id !40

[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s = alloca i8*, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK] i8* %s
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15, metadata !16), !dbg !17, !phasar.instruction.id !18

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !46, metadata !16), !dbg !47, !phasar.instruction.id !48### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %s.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	i8* %s, ID: foo.0

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 12

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15, metadata !16), !dbg !17, !phasar.instruction.id !18, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %s, i8** %s.addr, align 8, !phasar.instruction.id !14, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	i8* %s, ID: foo.0

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s = alloca i8*, align 8, !phasar.instruction.id !13, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i8* %0, !dbg !21, !phasar.instruction.id !22, ID: 5 in function: foo
D:	%0 = load i8*, i8** %s.addr, align 8, !dbg !19, !phasar.instruction.id !20, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %s.addr, align 8, !dbg !19, !phasar.instruction.id !20, ID: 4 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

--- IFDS START RESULT RECORD ---
N: %t = alloca i8*, align 8, !phasar.instruction.id !14, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %s, metadata !32, metadata !16), !dbg !33, !phasar.instruction.id !34, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t, metadata !38, metadata !16), !dbg !39, !phasar.instruction.id !40, ID: 14 in function: main
D:	store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25, ID: 13
A:	%s = alloca i8*, align 8, !phasar.instruction.id !13, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %s, align 8, !dbg !29, !phasar.instruction.id !30, ID: 15 in function: main
D:	store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25, ID: 13
A:	%s = alloca i8*, align 8, !phasar.instruction.id !13, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32, ID: 16 in function: main
D:	store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25, ID: 13
A:	%s = alloca i8*, align 8, !phasar.ins

truction.id !13, ID: 7

D:	%0 = load i8*, i8** %s, align 8, !dbg !29, !phasar.instruction.id !30, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %t, align 8, !dbg !27, !phasar.instruction.id !33, ID: 17 in function: main
D:	store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25, ID: 13
A:	%s = alloca i8*, align 8, !phasar.instruction.id !13, ID: 7

D:	%0 = load i8*, i8** %s, align 8, !dbg !29, !phasar.instruction.id !30, ID: 15

D:	%call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32, ID: 16
A:	%call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !46, metadata !16), !dbg !47, !phasar.instruction.id !48, ID: 18 in function: main
D:	store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25, ID: 13
A:	%s = alloca i8*, align 8, !phasar.instruction.id !13, ID: 7

D:	%call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32, ID: 16
A:	%t = alloca i8*, align 8, !phasar.instruction.id !14, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %t, align 8, !dbg !37, !phasar.instruction.id !38, ID: 19 in function: main
D:	store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25, ID: 13
A:	%s = alloca i8*, align 8, !phasar.instruction.id !13, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32, ID: 16
A:	%t = alloca i8*, align 8, !phasar.instruction.id !14, ID: 8

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !39, ID: 20 in function: main
D:	store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25, ID: 13
A:	%s = alloca i8*, align 8, !phasar.instruction.id !13, ID: 7

D:	%call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32, ID: 16
A:	%t = alloca i8*, align 8, !phasar.instruction.id !14, ID: 8

D:	%1 = load i8*, i8** %t, align 8, !dbg !37, !phasar.instruction.id !38, ID: 19

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !40, !phasar.instruction.id !41, ID: 21 in function: main
D:	store i8* %call, i8** %s, align 8, !dbg !21, !phasar.instruction.id !25, ID: 13
A:	%s = alloca i8*, align 8, !phasar.instruction.id !13, ID: 7

D:	%call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32, ID: 16
A:	%t = alloca i8*, align 8, !phasar.instruction.id !14, ID: 8

D:	%call1 = call i8* @foo(i8* %0), !dbg !31, !phasar.instruction.id !32, ID: 16
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!