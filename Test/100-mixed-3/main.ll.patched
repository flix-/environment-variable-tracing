; ModuleID = 'main.c'
source_filename = "main.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"gude\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define i32 @foo(i8* %in) #0 !dbg !9 {
entry:
  %in.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  %t1 = alloca i8*, align 8
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !15, metadata !16), !dbg !17
  call void @llvm.dbg.declare(metadata i32* %len, metadata !18, metadata !16), !dbg !19
  %0 = load i32, i32* %len, align 4, !dbg !20
  %1 = load i8*, i8** %in.addr, align 8, !dbg !21
  %idx.ext = sext i32 %0 to i64, !dbg !21
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !21
  store i8* %add.ptr, i8** %in.addr, align 8, !dbg !21
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !22, metadata !16), !dbg !23
  %2 = load i8*, i8** %in.addr, align 8, !dbg !24
  store i8* %2, i8** %t1, align 8, !dbg !23
  %__IFDSENVIRONMENTVARIABLETRACING_DUMMY_BEFORE_RET__0 = urem i4711 4711, 4711
  ret i32 0, !dbg !25
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define i32 @main() #0 !dbg !26 {
entry:
  %retval = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %p = alloca i8*, align 8
  store i32 0, i32* %retval, align 4
  call void @llvm.dbg.declare(metadata i32* %a, metadata !29, metadata !16), !dbg !30
  call void @llvm.dbg.declare(metadata i32* %b, metadata !31, metadata !16), !dbg !32
  call void @llvm.dbg.declare(metadata i32* %c, metadata !33, metadata !16), !dbg !34
  call void @llvm.dbg.declare(metadata i8** %p, metadata !35, metadata !16), !dbg !36
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37
  store i8* %call, i8** %p, align 8, !dbg !36
  %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !38
  %cmp = icmp ne i8* %call1, null, !dbg !40
  br i1 %cmp, label %if.then, label %if.end4, !dbg !41

if.then:                                          ; preds = %entry
  %0 = load i8*, i8** %p, align 8, !dbg !42
  %call2 = call i32 @foo(i8* %0), !dbg !45
  %tobool = icmp ne i32 %call2, 0, !dbg !45
  br i1 %tobool, label %if.end, label %if.then3, !dbg !46

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !47
  br label %return, !dbg !47

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !48

if.end4:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !49
  br label %return, !dbg !49

return:                                           ; preds = %if.end4, %if.then3
  %1 = load i32, i32* %retval, align 4, !dbg !50
  %__IFDSENVIRONMENTVARIABLETRACING_DUMMY_BEFORE_RET__1 = urem i4711 4711, 4711
  ret i32 %1, !dbg !50
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!5, !6, !7}
!llvm.ident = !{!8}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 5.0.1 (tags/RELEASE_501/final 348479)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "main.c", directory: "/home/sebastian/.qt-creator-workspace/Phasar/Test/100-mixed-3")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!5 = !{i32 2, !"Dwarf Version", i32 4}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{!"clang version 5.0.1 (tags/RELEASE_501/final 348479)"}
!9 = distinct !DISubprogram(name: "foo", scope: !1, file: !1, line: 6, type: !10, isLocal: false, isDefinition: true, scopeLine: 6, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!10 = !DISubroutineType(types: !11)
!11 = !{!12, !13}
!12 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!15 = !DILocalVariable(name: "in", arg: 1, scope: !9, file: !1, line: 6, type: !13)
!16 = !DIExpression()
!17 = !DILocation(line: 6, column: 11, scope: !9)
!18 = !DILocalVariable(name: "len", scope: !9, file: !1, line: 7, type: !12)
!19 = !DILocation(line: 7, column: 9, scope: !9)
!20 = !DILocation(line: 9, column: 11, scope: !9)
!21 = !DILocation(line: 9, column: 8, scope: !9)
!22 = !DILocalVariable(name: "t1", scope: !9, file: !1, line: 10, type: !13)
!23 = !DILocation(line: 10, column: 11, scope: !9)
!24 = !DILocation(line: 10, column: 16, scope: !9)
!25 = !DILocation(line: 12, column: 5, scope: !9)
!26 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 16, type: !27, isLocal: false, isDefinition: true, scopeLine: 16, isOptimized: false, unit: !0, variables: !2)
!27 = !DISubroutineType(types: !28)
!28 = !{!12}
!29 = !DILocalVariable(name: "a", scope: !26, file: !1, line: 17, type: !12)
!30 = !DILocation(line: 17, column: 9, scope: !26)
!31 = !DILocalVariable(name: "b", scope: !26, file: !1, line: 17, type: !12)
!32 = !DILocation(line: 17, column: 12, scope: !26)
!33 = !DILocalVariable(name: "c", scope: !26, file: !1, line: 17, type: !12)
!34 = !DILocation(line: 17, column: 15, scope: !26)
!35 = !DILocalVariable(name: "p", scope: !26, file: !1, line: 19, type: !13)
!36 = !DILocation(line: 19, column: 11, scope: !26)
!37 = !DILocation(line: 19, column: 15, scope: !26)
!38 = !DILocation(line: 21, column: 9, scope: !39)
!39 = distinct !DILexicalBlock(scope: !26, file: !1, line: 21, column: 9)
!40 = !DILocation(line: 21, column: 24, scope: !39)
!41 = !DILocation(line: 21, column: 9, scope: !26)
!42 = !DILocation(line: 22, column: 18, scope: !43)
!43 = distinct !DILexicalBlock(scope: !44, file: !1, line: 22, column: 13)
!44 = distinct !DILexicalBlock(scope: !39, file: !1, line: 21, column: 33)
!45 = !DILocation(line: 22, column: 14, scope: !43)
!46 = !DILocation(line: 22, column: 13, scope: !44)
!47 = !DILocation(line: 22, column: 22, scope: !43)
!48 = !DILocation(line: 23, column: 5, scope: !44)
!49 = !DILocation(line: 25, column: 5, scope: !26)
!50 = !DILocation(line: 26, column: 1, scope: !26)
