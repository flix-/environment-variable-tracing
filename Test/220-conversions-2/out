PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31
[TRACK] Destination:
[TRACK]   %t = alloca i8*, align 8, !phasar.instruction.id !17
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !19, metadata !25), !dbg !26, !phasar.instruction.id !27, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !15, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31, ID: 7 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 8 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s1* %s1 to i8*, !dbg !37, !phasar.instruction.id !38, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 8
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31, ID: 7

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t, metadata !34, metadata !25), !dbg !35, !phasar.instruction.id !36, ID: 9 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 8
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %t, align 8, !dbg !35, !phasar.instruction.id !39, ID: 11 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 8
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 6

D:	%0 = bitcast %struct.s1* %s1 to i8*, !dbg !37, !phasar.instruction.id !38, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !40, !phasar.instruction.id !41, ID: 12 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 8
A:	%t = alloca i8*, align 8, !phasar.instruction.id !17, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1,
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550168603-trace.txt
 %struct.s1* %s1, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31, ID: 7

D:	store i8* %call, i8** %t1, align 8, !dbg !32, !phasar.instruction.id !33, ID: 8
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !16, ID: 2
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !30, !phasar.instruction.id !31, ID: 7

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !28, !phasar.instruction.id !29, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1


