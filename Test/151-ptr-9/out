PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK]   %t12 = alloca i8*, align 8, !phasar.instruction.id !16
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15
[TRACK]   %t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15
[TRACK]   %t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   %t24 = alloca i8*, align 8, !phasar.instruction.id !17
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   %s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15
[TRACK]   %t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15
[TRACK]   %t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40
[TRACK] Destination:
[TRACK]   %t3 = alloca i8*, align 8, !phasar.instruction.id !19### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s11, metadata !21, metadata !28), !dbg !29, !phasar.instruction.id !30, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !20, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t3 = alloca i8*, align 8, !phasar.instruction.id !19, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i8*, align 8, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

--- IFDS START RESULT RECORD ---
N: %t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1** %s12, metadata !43, metadata !28), !dbg !45, !phasar.instruction.id !46, ID: 17 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

--- IFDS START RESULT RECORD ---
N: store %struct.s1* %s11, %struct.s1** %s12, align 8, !dbg !45, !phasar.instruction.id !47, ID: 18 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t12, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50, ID: 19 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

--- IFDS START RESULT RECORD ---
N: %0 = load %struct.s1*, %struct.s1** %s12, align 8, !dbg !51, !phasar.instruction.id !52, ID: 20 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t13 = getelementptr inbounds %struct.s1, %struct.s1* %0, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54, ID: 21 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %t13, align 8, !dbg !53, !phasar.instruction.id !55, ID: 22 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %t12, align 8, !dbg !49, !phasar.instruction.id !56, ID: 23 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8*, i8** %t13, align 8, !dbg !53, !phasar.instruction.id !55, ID: 22

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t24, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59, ID: 24 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load %struct.s1*, %struct.s1** %s12, align 8, !dbg !60, !phasar.instruction.id !61, ID: 25 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

--- IFDS START RESULT RECORD ---
N: %t25 = getelementptr inbounds %struct.s1, %struct.s1* %2, i32 0, i32 1, !dbg !62, !phasar.instruction.id !63, ID: 26 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %t25, align 8, !dbg !62, !phasar.instruction.id !64, ID: 27 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %t24, align 8, !dbg !58, !phasar.instruction.id !65, ID: 28 in function: main
D:	%3 = load i8*, i8** %t25, align 8, !dbg !62, !phasar.instruction.id !64, ID: 27

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: %t16 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !66, !phasar.instruction.id !67, ID: 29 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8** %t16, align 8, !dbg !68, !phasar.instruction.id !69, ID: 30 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

--- IFDS START RESULT RECORD ---
N: store %struct.s1* %s11, %struct.s1** %s12, align 8, !dbg !70, !phasar.instruction.id !71, ID: 31 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t1 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34, ID: 12

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %ut1, metadata !72, metadata !28), !dbg !73, !phasar.instruction.id !74, ID: 32 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %4 = load %struct.s1*, %struct.s1** %s12, align 8, !dbg !75, !phasar.instruction.id !76, ID: 33 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

--- IFDS START RESULT RECORD ---
N: %t17 = getelementptr inbounds %struct.s1, %struct.s1* %4, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78, ID: 34 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = load i8*, i8** %t17, align 8, !dbg !77, !phasar.instruction.id !79, ID: 35 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

--- IFDS START RESULT RECORD ---
N: store i8* %5, i8** %ut1, align 8, !dbg !73, !phasar.instruction.id !80, ID: 36 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t3, metadata !81, metadata !28), !dbg !82, !phasar.instruction.id !83, ID: 37 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

--- IFDS START RESULT RECORD ---
N: %6 = load %struct.s1*, %struct.s1** %s12, align 8, !dbg !84, !phasar.instruction.id !85, ID: 38 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t28 = getelementptr inbounds %struct.s1, %struct.s1* %6, i32 0, i32 1, !dbg !86, !phasar.instruction.id !87, ID: 39 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

--- IFDS START RESULT RECORD ---
N: %7 = load i8*, i8** %t28, align 8, !dbg !86, !phasar.instruction.id !88, ID: 40 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549913769-trace.txt
 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %7, i8** %t3, align 8, !dbg !82, !phasar.instruction.id !89, ID: 41 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	%7 = load i8*, i8** %t28, align 8, !dbg !86, !phasar.instruction.id !88, ID: 40

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !90, !phasar.instruction.id !91, ID: 42 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !31, !phasar.instruction.id !32, ID: 11

D:	store i8* %call, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !36, ID: 13
A:	%t12 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !37, !phasar.instruction.id !38, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t24 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s12 = alloca %struct.s1*, align 8, !phasar.instruction.id !15, ID: 4
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%t3 = alloca i8*, align 8, !phasar.instruction.id !19, ID: 8

D:	store i8* %call1, i8** %t2, align 8, !dbg !41, !phasar.instruction.id !42, ID: 16
A:	%s11 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !39, !phasar.instruction.id !40, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1


