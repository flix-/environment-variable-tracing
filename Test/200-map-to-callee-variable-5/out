PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !28, !phasar.instruction.id !29
[TRACK] Destination:
[TRACK] i8* %tainted_foo
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] i8* %tainted_foo
[TRACK] Destination:
[TRACK]   %tainted_foo.addr = alloca i8*, align 8, !phasar.instruction.id !13
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %tainted_foo.addr = alloca i8*, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK]   %also_tainted_foo = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !28, !phasar.instruction.id !29
[TRACK] Destination:
[TRACK] i8* %tainted_foo### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %tainted_foo.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	i8* %tainted_foo, ID: foo.0

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted_foo.addr, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19, ID: 4 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted_foo.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted_foo.addr, align 8, !dbg !23, !phasar.instruction.id !24, ID: 6 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted_foo.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

--- IFDS START RESULT RECORD ---
N: %s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %also_tainted_foo, metadata !20, metadata !17), !dbg !21, !phasar.instruction.id !22, ID: 5 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted_foo.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !26, !phasar.instruction.id !27, ID: 8 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted_foo.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%also_tainted_foo = alloca i8*, align 8, !phasar.instruction.id !14, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %tainted_foo, i8** %tainted_foo.addr, align 8, !phasar.instruction.id !15, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	i8* %tainted_foo, ID: foo.0

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %also_tainted_foo, align 8, !dbg !21, !phasar.instruction.id !25, ID: 7 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%tainted_foo.addr = alloca i8*, align 8, !phasar.instruction.id !13, ID: 1

--- IFDS START RESULT RECORD ---
N: %also_tainted_foo = alloca i8*, align 8, !phasar.instruction.id !14, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	i8* %tainted_foo, ID: foo.0

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !14, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !35, metadata !17), !dbg !41, !phasar.instruction.id !42, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !28, !phasar.instruction.id !29, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 13

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !30, !phasar.instruction.id !31, ID: 15 in function: main
D:	@
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550216428-trace.txt
zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 13

--- IFDS START RESULT RECORD ---
N: %tainted1 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !32, !phasar.instruction.id !33, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !30, !phasar.instruction.id !31, ID: 15
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 10
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !28, !phasar.instruction.id !29, ID: 14

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted1, align 8, !dbg !32, !phasar.instruction.id !34, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !30, !phasar.instruction.id !31, ID: 15
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 10
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !28, !phasar.instruction.id !29, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 13

--- IFDS START RESULT RECORD ---
N: call void @foo(i8* %0), !dbg !35, !phasar.instruction.id !36, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !30, !phasar.instruction.id !31, ID: 15
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 10
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !28, !phasar.instruction.id !29, ID: 14

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !37, !phasar.instruction.id !38, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !26, !phasar.instruction.id !27, ID: 13

D:	store i8* %call, i8** %tainted, align 8, !dbg !30, !phasar.instruction.id !31, ID: 15
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 10
A:	%tainted = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !28, !phasar.instruction.id !29, ID: 14


