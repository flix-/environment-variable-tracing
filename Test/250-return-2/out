PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll.patched 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !20
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Searching end of block label for: if.end
[TRACK] End of closed block label: if.end3
[TRACK] End of block label: return
[TRACK] Searching end of block label for: if.end
[TRACK] End of closed block label: if.end3
[TRACK] End of block label: return
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %call = call i8* @foo(), !dbg !26, !phasar.instruction.id !27
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %call = call i8* @foo(), !dbg !26, !phasar.instruction.id !27
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %coerce.dive = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !26, !phasar.instruction.id !28
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %t1 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %call = call i8* @foo(), !dbg !26, !phasar.instruction.id !27
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %call = call i8* @foo(), !dbg !26, !phasar.instruction.id !27
Writing line number trace to: line-numbers.txt
Writing lcov trace to: static-main-1551732051-trace.txt
Writing lcov return value trace to: static-main-1551732051-return-value-trace.txt
### DUMP LLVMIFDSSolver results
EMPTY

