PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
[TRACK] Destination:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !15### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !18, metadata !39), !dbg !40, !phasar.instruction.id !41, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !46, !phasar.instruction.id !47, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

--- IFDS START RESULT RECORD ---
N: %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !48, !phasar.instruction.id !49, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

--- IFDS START RESULT RECORD ---
N: %taint = bitcast %union.u3* %u2 to i8**, !dbg !50, !phasar.instruction.id !51, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

--- IFDS START RESULT RECORD ---
N: %uuu = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

--- IFDS START RESULT RECORD ---
N: %taint3 = bitcast %union.u3* %uuu to i8**, !dbg !56, !phasar.instruction.id !57, ID: 15 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %taint3, align 8, !dbg !58, !phasar.instruction.id !59, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !60, metadata !39), !dbg !61, !phasar.instruction.id !62, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

--- IFDS START RESULT RECORD ---
N: %u4 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

--- IFDS START RESULT RECORD ---
N: %u5 = bitcast %union.u1* %u4 to %union.u2*, !dbg !65, !phasar.instruction.id !66, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

--- IFDS START RESULT RECORD ---
N: %u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !67, !phasar.instruction.id !68, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	%u5 = bitcast %union.u1* %u4 to %union.u2*, !dbg !65, !phasar.instruction.id !66, ID: 19

--- IFDS START RESULT RECORD ---
N: %taint7 = bitcast %union.u3* %u6 to i8**, !dbg !69, !phasar.instruction.id !70, ID: 21 in function: main
D:	%u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !67, !phasar.instruction.id !68, ID: 20

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	%u5 = bitcast %union.u1* %u4 to %union.u2*, !dbg !65, !phasar.instruction.id !66, ID: 19

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 22 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	%u5 = bitcast %union.u1* %u4 to %union.u2*, !dbg !65, !phasar.instruction.id !66, ID: 19

D:	%u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !67, !phasar.instruction.id !68, ID: 20

D:	%taint7 = bitcast %union.u3* %u6 to i8**, !dbg !69, !phasar.instruction.id !70, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72, ID: 23 in function: main
D:	%u5 = bitcast %union.u1* %u4 to %union.u2*, !dbg !65, !phasar.instruction.id !66, ID: 19

D:	%taint7 = bitcast %union.u3* %u6 to i8**, !dbg !69, !phasar.instruction.id !70, ID: 21

D:	%u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !67, !phasar.instruction.id !68, ID: 20

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !73, metadata !39), !dbg !74, !phasar.instruction.id !75, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %uuu8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !76, !phasar.instruction.id !77, ID: 25 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

--- IFDS START RESULT RECORD ---
N: %taint9 = bitcast %union.u3* %uuu8 to i8**, !dbg !78, !phasar.instruction.id !79, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, 
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550069426-trace.txt
i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %taint9, align 8, !dbg !78, !phasar.instruction.id !80, ID: 27 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %not_tainted, align 8, !dbg !74, !phasar.instruction.id !81, ID: 28 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !82, !phasar.instruction.id !83, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4


