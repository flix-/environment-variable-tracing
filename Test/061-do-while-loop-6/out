PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Checking end of branch bb for: do.cond
[TRACK] End of branch bb: do.end
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %a = alloca i32, align 4, !phasar.instruction.id !14
[TRACK] Destination:
[TRACK]   %rc = alloca i32, align 4, !phasar.instruction.id !13### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !19, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i32, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %do.body1, !dbg !27, !llvm.loop !29, !phasar.instruction.id !31, ID: 10 in function: main
D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %do.body, !dbg !23, !llvm.loop !24, !phasar.instruction.id !26, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	br i1 %tobool, label %while.body, label %while.end, !dbg !43, !phasar.instruction.id !48, ID: 17

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %while.body, label %while.end, !dbg !43, !phasar.instruction.id !48, ID: 17 in function: main
D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

D:	br i1 %tobool, label %while.body, label %while.end, !dbg !43, !phasar.instruction.id !48, ID: 17

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !20), !dbg !34, !phasar.instruction.id !35, ID: 11 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

--- IFDS START RESULT RECORD ---
N: br label %do.body2, !dbg !36, !llvm.loop !37, !phasar.instruction.id !39, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13 in function: main
D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	%tobool3 = icmp ne i32 %call, 0, !dbg !57, !phasar.instruction.id !61, ID: 23

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

--- IFDS START RESULT RECORD ---
N: br label %while.cond, !dbg !43, !phasar.instruction.id !44, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	br i1 %tobool, label %while.body, label %while.end, !dbg !43, !phasar.instruction.id !48, ID: 17

D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

--- IFDS START RESULT RECORD ---
N: br label %while.cond, !dbg !43, !llvm.loop !54, !phasar.instruction.id !56, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	br i1 %tobool, label %while.body, label %while.end, !dbg !43, !phasar.instruction.id !48, ID: 17

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18 in function: main
D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

D:	br i1 %tobool, label %while.body, label %while.end, !dbg !43, !phasar.instruction.id !48, ID: 17

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19 in function: main
D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	br i1 %tobool, label %while.body, label %while.end, !dbg !43, !phasar.instruction.id !48, ID: 17

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

--- IFDS START RESULT RECORD ---
N: br label %do.cond, !dbg !57, !phasar.instruction.id !58, ID: 21 in function: main
D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	br i1 %tobool, label %while.body, label %while.end, !dbg !43, !phasar.instruction.id !48, ID: 17

D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

--- IFDS START RESULT RECORD ---
N: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

--- IFDS START RESULT RECORD ---
N: %tobool3 = icmp ne i32 %call, 0, !dbg !57, !phasar.instruction.id !61, ID: 23 in function: main
D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %a, align 4, !dbg !63, !phasar.instruction.id !64, ID: 25 in function: main
D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	%tobool3 = icmp ne i32 %call, 0, !dbg !57, !phasar.instruction.id !61, ID: 23

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

--- IFDS START RESULT RECORD ---
N: br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	br i1 %tobool3, label %do.body2, label %do.end, !dbg !57, !llvm.loop !37, !phasar.instruction.id !62, ID: 24

D:	%tobool3 = icmp ne i32 %call, 0, !dbg !57, !phasar.instruction.id !61, ID: 23

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

--- IFDS START RESULT RECORD ---
N: store i32 %1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !66, ID: 26 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	%tobool3 = icmp ne i32 %call, 0, !dbg !57, !phasar.instruction.id !61, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	%tobool = icmp ne i32 %0, 0, !dbg !43, !phasar.instruction.id !47, ID: 16

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%0 = load i32, i32* %a, align 4, !dbg !45, !phasar.instruction.id !46, ID: 15

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut, metadata !67, metadata !20), !dbg !68, !phasar.instruction.id !69, ID: 27 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %ut, align 4, !dbg !68, !phasar.instruction.id !70, ID: 28 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

--- IFDS START RESULT RECORD ---
N: br label %do.cond4, !dbg !71, !phasar.instruction.id !72, ID: 29 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

--- IFDS START RESULT RECORD ---
N: %call5 = call i32 (...) @foo(), !dbg !73, !phasar.instruction.id !74, ID: 30 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %tobool6 = icmp ne i32 %call5, 0, !dbg !71, !phasar.instruction.id !75, ID: 31 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: br i1 %tobool6, label %do.body1, label %do.end7, !dbg !71, !llvm.loop !29, !phasar.instruction.id !76, ID: 32 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

--- IFDS START RESULT RECORD ---
N: br label %do.cond8, !dbg !77, !phasar.instruction.id !78, ID: 33 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

--- IFDS START RESULT RECORD ---
N: %call9 = call i32 (...) @bar(), !dbg !79, !phasar.instruction.id !80, ID: 34 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %tobool10 = icmp ne i32 %call9, 0, !dbg !77, !phasar.instruction.id !81, ID: 35 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %rc, align 4, !dbg !87, !phasar.instruction.id !88, ID: 39 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: br i1 %tobool10, label %do.body, label %do.end11, !dbg !77, !llvm.loop !24, !phasar.instruction.id !82, ID: 36 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut1, metadata !83, metadata !20), !dbg !84, !phasar.instruction.id !85, ID: 37 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %ut1, align 4, !dbg !84, !phasar.instruction.id !86, ID: 38 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

--- IFDS START RESULT RECORD ---
N: ret i32 %2, !dbg !89, !phasar.instruction.id !90, ID: 40 in function: main
D:	store i32 1, i32* %a, align 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, alig
[TRACK] Checking end of branch bb for: while.cond
[TRACK] End of branch bb: while.end
[TRACK] Checking end of branch bb for: while.cond
[TRACK] End of branch bb: while.end
[TRACK] Checking end of branch bb for: do.cond
[TRACK] End of branch bb: do.end
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550069420-trace.txt
n 4, !dbg !40, !phasar.instruction.id !42, ID: 13
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !49, metadata !20), !dbg !51, !phasar.instruction.id !52, ID: 18

D:	store i32 0, i32* %b, align 4, !dbg !51, !phasar.instruction.id !53, ID: 19
A:	%b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !59, !phasar.instruction.id !60, ID: 22

D:	%2 = load i32, i32* %rc, align 4, !dbg !87, !phasar.instruction.id !88, ID: 39


