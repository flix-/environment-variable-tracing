PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !14
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55
[TRACK] Destination:
[TRACK]   %t26 = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55
[TRACK] Destination:
[TRACK]   %t316 = alloca i8*, align 8, !phasar.instruction.id !17
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47
[TRACK] Destination:
[TRACK] i8* %0### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !19, metadata !37), !dbg !38, !phasar.instruction.id !39, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t316 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 1024, i32 8, i1 false), !dbg !84, !phasar.instruction.id !89, ID: 35 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

--- IFDS START RESULT RECORD ---
N: %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

--- IFDS START RESULT RECORD ---
N: %s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !58, metadata !37), !dbg !59, !phasar.instruction.id !60, ID: 18 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s23 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

--- IFDS START RESULT RECORD ---
N: %s34 = getelementptr inbounds %struct.s2, %struct.s2* %s23, i32 0, i32 2, !dbg !63, !phasar.instruction.id !64, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

--- IFDS START RESULT RECORD ---
N: %t35 = getelementptr inbounds %struct.s3, %struct.s3* %s34, i32 0, i32 3, !dbg !65, !phasar.instruction.id !66, ID: 21 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %t35, align 8, !dbg !65, !phasar.instruction.id !67, ID: 22 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %t1, align 8, !dbg !59, !phasar.instruction.id !68, ID: 23 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t26, metadata !69, metadata !37), !dbg !70, !phasar.instruction.id !71, ID: 24 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s27 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !72, !phasar.instruction.id !73, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

--- IFDS START RESULT RECORD ---
N: %t28 = getelementptr inbounds %struct.s2, %struct.s2* %s27, i32 0, i32 1, !dbg !74, !phasar.instruction.id !75, ID: 26 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %t28, align 8, !dbg !74, !phasar.instruction.id !76, ID: 27 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %t26, align 8, !dbg !70, !phasar.instruction.id !77, ID: 28 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s29 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !78, !phasar.instruction.id !79, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %s310 = getelementptr inbounds %struct.s2, %struct.s2* %s29, i32 0, i32 2, !dbg !80, !phasar.instruction.id !81, ID: 30 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %t311 = getelementptr inbounds %struct.s3, %struct.s3* %s310, i32 0, i32 3, !dbg !82, !phasar.instruction.id !83, ID: 31 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t112 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 0, !dbg !86, !phasar.instruction.id !87, ID: 33 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32

--- IFDS START RESULT RECORD ---
N: %3 = bitcast i8** %t112 to i8*, !dbg !84, !phasar.instruction.id !88, ID: 34 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 10
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !44, !phasar.instruction.id !45, ID: 11
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !46, !phasar.instruction.id !47, ID: 12

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %ut1, metadata !90, metadata !37), !dbg !91, !phasar.instruction.id !92, ID: 36 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32

--- IFDS START RESULT RECORD ---
N: %s213 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !93, !phasar.instruction.id !94, ID: 37 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s314 = getelementptr inbounds %struct.s2, %struct.s2* %s213, i32 0, i32 2, !dbg !95, !phasar.instruction.id !96, ID: 38 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32

--- IFDS START RESULT RECORD ---
N: %t315 = getelementptr inbounds %struct.s3, %struct.s3* %s314, i32 0, i32 3, !dbg !97, !phasar.instruction.id !98, ID: 39 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

--- IFDS START RESULT RECORD ---
N: %4 = load i8*, i8** %t315, align 8, !dbg !97, !phasar.instruction.id !99, ID: 40 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32

--- IFDS START RESULT RECORD ---
N: store i8* %4, i8** %ut1, align 8, !dbg !91, !phasar.instruction.id !100, ID: 41 in function: main
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	%2 = bitcast i8** %t311 to i8*, !dbg !84, !phasar.instruction.id !85, ID: 32

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t316, metadata !101, metadata !37), !dbg !102, !phasar.instruction.id !103, ID: 42 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %s217 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !104, !phasar.instruction.id !105, ID: 43 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %t218 = getelementptr inbounds %struct.s2, %struct.s2* %s217, i32 0, i32 1, !dbg !106, !phasar.instruction.id !107, ID: 44 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %5 = load i8*, i8** %t218, align 8, !dbg !106, !phasar.instruction.id !108, ID: 45 in function: main
D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %5, i8** %t316, align 8, !dbg !102, !phasar.instruction.id !109, ID: 46 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550131599-trace.txt
 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !110, !phasar.instruction.id !111, ID: 47 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !40, !phasar.instruction.id !41, ID: 9

D:	store i8* %call, i8** %t3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !50, !phasar.instruction.id !51, ID: 14

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
A:	%s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !52, !phasar.instruction.id !53, ID: 15
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s22, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 16

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t316 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6

D:	store i8* %call1, i8** %t2, align 8, !dbg !56, !phasar.instruction.id !57, ID: 17
A:	%t26 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4


