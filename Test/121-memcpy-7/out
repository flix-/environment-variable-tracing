PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64
[TRACK] Destination:
[TRACK]   %s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15
[TRACK]   %s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68
[TRACK]   %s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70
[TRACK]   %s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15
[TRACK]   %s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68
[TRACK]   %s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70
[TRACK]   %s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64
[TRACK] Destination:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !16
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64
[TRACK] Destination:
[TRACK] i8* %1
[TRACK]   %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62
[TRACK]   %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !19, metadata !37), !dbg !38, !phasar.instruction.id !39, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s4* %s4, metadata !40, metadata !37), !dbg !55, !phasar.instruction.id !56, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %untainted = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 1024, i32 8, i1 false), !dbg !73, !phasar.instruction.id !78, ID: 21 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

--- IFDS START RESULT RECORD ---
N: %s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s2* %s21 to i8*, !dbg !73, !phasar.instruction.id !74, ID: 18 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s22 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !75, !phasar.instruction.id !76, ID: 19 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = bitcast %struct.s2* %s22 to i8*, !dbg !73, !phasar.instruction.id !77, ID: 20 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !79, metadata !37), !dbg !80, !phasar.instruction.id !81, ID: 22 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s53 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !82, !phasar.instruction.id !83, ID: 23 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s64 = getelementptr inbounds %struct.s5, %struct.s5* %s53, i32 0, i32 0, !dbg !84, !phasar.instruction.id !85, ID: 24 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s25 = getelementptr inbounds %struct.s6, %struct.s6* %s64, i32 0, i32 0, !dbg !86, !phasar.instruction.id !87, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

--- IFDS START RESULT RECORD ---
N: %s36 = getelementptr inbounds %struct.s2, %struct.s2* %s25, i32 0, i32 2, !dbg !88, !phasar.instruction.id !89, ID: 26 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t37 = getelementptr inbounds %struct.s3, %struct.s3* %s36, i32 0, i32 3, !dbg !90, !phasar.instruction.id !91, ID: 27 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %t37, align 8, !dbg !90, !phasar.instruction.id !92, ID: 28 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %tainted, align 8, !dbg !80, !phasar.instruction.id !93, ID: 29 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%2 = load i8*, i8** %t37, align 8, !dbg !90, !phasar.instruction.id !92, ID: 28

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

--- IFDS START RESULT RECORD ---
N: %s58 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !94, !phasar.instruction.id !95, ID: 30 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

--- IFDS START RESULT RECORD ---
N: %s69 = getelementptr inbounds %struct.s5, %struct.s5* %s58, i32 0, i32 0, !dbg !96, !phasar.instruction.id !97, ID: 31 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

--- IFDS START RESULT RECORD ---
N: %s210 = getelementptr inbounds %struct.s6, %struct.s6* %s69, i32 0, i32 0, !dbg !98, !phasar.instruction.id !99, ID: 32 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s311 = getelementptr inbounds %struct.s2, %struct.s2* %s210, i32 0, i32 2, !dbg !100, !phasar.instruction.id !101, ID: 33 in function: main
D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

--- IFDS START RESULT RECORD ---
N: %t312 = getelementptr inbounds %struct.s3, %struct.s3* %s311, i32 0, i32 3, !dbg !102, !phasar.instruction.id !103, ID: 34 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %t312, align 8, !dbg !104, !phasar.instruction.id !105, ID: 35 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s4 = alloca %struct.s4, align 8, !phasar.instruction.id !15, ID: 4
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !67, !phasar.instruction.id !68, ID: 15
A:	%s6 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !69, !phasar.instruction.id !70, ID: 16
A:	%s21 = getelementptr inbounds %struct.s6, %struct.s6* %s6, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 17
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %untainted, metadata !106, metadata !37), !dbg !107, !phasar.instruction.id !108, ID: 36 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: %s513 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 5, !dbg !109, !phasar.instruction.id !110, ID: 37 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s614 = getelementptr inbounds %struct.s5, %struct.s5* %s513, i32 0, i32 0, !dbg !111, !phasar.instruction.id !112, ID: 38 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s215 = getelementptr inbounds %struct.s6, %struct.s6* %s614, i32 0, i32 0, !dbg !113, !phasar.instruction.id !114, ID: 39 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s316 = getelementptr inbounds %struct.s2, %struct.s2* %s215, i32 0, i32 2, !dbg !115, !phasar.instruction.id !116, ID: 40 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: %t317 = getelementptr inbounds %struct.s3, %struct.s3* %s316, i32 0, i32 3, !dbg !117, !phasar.instruction.id !118, ID: 41 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %t317, align 8, !dbg !117, !phasar.instruction.id !119, ID: 42 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %untainted, align 8, !dbg !107, !phasar.instruction.id !120, ID: 43 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549967432-trace.txt
dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !121, !phasar.instruction.id !122, ID: 44 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !57, !phasar.instruction.id !58, ID: 10

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %t3, align 8, !dbg !65, !phasar.instruction.id !66, ID: 14
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !59, !phasar.instruction.id !60, ID: 11
A:	%s3 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !61, !phasar.instruction.id !62, ID: 12
A:	%t3 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 3, !dbg !63, !phasar.instruction.id !64, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1


