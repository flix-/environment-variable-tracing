PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !14

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !61, metadata !29), !dbg !67, !phasar.instruction.id !68

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32

getNormalFlowFunction()
  %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34

Got GEP instruction
getNormalFlowFunction()
  %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36

Got GEP instruction
getNormalFlowFunction()
  store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38

Got store instruction
getNormalFlowFunction()
  %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40

Got GEP instruction
getNormalFlowFunction()
  %0 = bitcast %struct.s2* %s21 to { i64, i8* }*, !dbg !41, !phasar.instruction.id !42

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !dbg !41, !phasar.instruction.id !43

Got GEP instruction
getNormalFlowFunction()
  %2 = load i64, i64* %1, align 8, !dbg !41, !phasar.instruction.id !44

Got load instruction
getNormalFlowFunction()
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !dbg !41, !phasar.instruction.id !45

Got GEP instruction
getNormalFlowFunction()
  %4 = load i8*, i8** %3, align 8, !dbg !41, !phasar.instruction.id !46

Got load instruction
getSummaryFlowFunction()
  call void @foo(i64 %2, i8* %4), !dbg !41, !phasar.instruction.id !47

getCallFlowFunction()
  call void @foo(i64 %2, i8* %4), !dbg !41, !phasar.instruction.id !47

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK] i64 %fs.coerce0
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK] i8* %fs.coerce1
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
getNormalFlowFunction()
  %fs = alloca %struct.s2, align 8, !phasar.instruction.id !19

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %t2 = alloca i8*, align 8, !phasar.instruction.id !20

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %ut1 = alloca i32, align 4, !phasar.instruction.id !21

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %ut2 = alloca i32, align 4, !phasar.instruction.id !22

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %0 = bitcast %struct.s2* %fs to { i64, i8* }*, !phasar.instruction.id !23

Got operands checking instruction (bitcast)
getNormalFlowFunction()
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !phasar.instruction.id !24

Got GEP instruction
getNormalFlowFunction()
  store i64 %fs.coerce0, i64* %1, align 8, !phasar.instruction.id !25

Got store instruction
[TRACK] Patched memory location (arg / store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK] i64 %fs.coerce0
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %fs = alloca %struct.s2, align 8, !phasar.instruction.id !19
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
getNormalFlowFunction()
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !phasar.instruction.id !26

Got GEP instruction
getNormalFlowFunction()
  store i8* %fs.coerce1, i8** %2, align 8, !phasar.instruction.id !27

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s2* %fs, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t2, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34

getNormalFlowFunction()
  %t1 = getelementptr inbounds %struct.s2, %struct.s2* %fs, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36

Got GEP instruction
getNormalFlowFunction()
  %3 = load i8*, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !37

Got load instruction
getNormalFlowFunction()
  store i8* %3, i8** %t2, align 8, !dbg !33, !phasar.instruction.id !38

Got store instruction
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %fs = alloca %struct.s2, align 8, !phasar.instruction.id !19
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %t2 = alloca i8*, align 8, !phasar.instruction.id !20
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut1, metadata !39, metadata !29), !dbg !40, !phasar.instruction.id !41

getNormalFlowFunction()
  %a = getelementptr inbounds %struct.s2, %struct.s2* %fs, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43

Got GEP instruction
getNormalFlowFunction()
  %4 = load i32, i32* %a, align 8, !dbg !42, !phasar.instruction.id !44

Got load instruction
getNormalFlowFunction()
  store i32 %4, i32* %ut1, align 4, !dbg !40, !phasar.instruction.id !45

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut2, metadata !46, metadata !29), !dbg !47, !phasar.instruction.id !48

getNormalFlowFunction()
  %b = getelementptr inbounds %struct.s2, %struct.s2* %fs, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50

Got GEP instruction
getNormalFlowFunction()
  %5 = load i32, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51

Got load instruction
getNormalFlowFunction()
  store i32 %5, i32* %ut2, align 4, !dbg !47, !phasar.instruction.id !52

Got store instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut1, metadata !39, metadata !29), !dbg !40, !phasar.instruction.id !41

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut2, metadata !46, metadata !29), !dbg !47, !phasar.instruction.id !48

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getRetFlowFunction()
[TRACK] Patched memory location (arg / store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK] i8* %fs.coerce1
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %fs = alloca %struct.s2, align 8, !phasar.instruction.id !19
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s2* %fs, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t2, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34

[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %fs = alloca %struct.s2, align 8, !phasar.instruction.id !19
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %t2 = alloca i8*, align 8, !phasar.instruction.id !20
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut1, metadata !39, metadata !29), !dbg !40, !phasar.instruction.id !41

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut2, metadata !46, metadata !29), !dbg !47, !phasar.instruction.id !48

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut1, metadata !39, metadata !29), !dbg !40, !phasar.instruction.id !41

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut2, metadata !46, metadata !29), !dbg !47, !phasar.instruction.id !48

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @foo(i64 %2, i8* %4), !dbg !41, !phasar.instruction.id !47

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s2* %fs, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t2, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut1, metadata !39, metadata !29), !dbg !40, !phasar.instruction.id !41

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut2, metadata !46, metadata !29), !dbg !47, !phasar.instruction.id !48

getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !61, metadata !29), !dbg !67, !phasar.instruction.id !68

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata %struct.s2* %fs, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %t2, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut1, metadata !39, metadata !29), !dbg !40, !phasar.instruction.id !41

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %ut2, metadata !46, metadata !29), !dbg !47, !phasar.instruction.id !48

[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK] i64 %fs.coerce0
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Relocated memory location (caller -> callee)
[TRACK] Source:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38
[TRACK] i8* %fs.coerce1
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !phasar.instruction.id !24, ID: 6 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i64 %fs.coerce0, ID: foo.0
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i8* %fs.coerce1, ID: foo.1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i32, align 4, !phasar.instruction.id !21, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i64 %fs.coerce0, ID: foo.0
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i8* %fs.coerce1, ID: foo.1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %ut2 = alloca i32, align 4, !phasar.instruction.id !22, ID: 4 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i64 %fs.coerce0, ID: foo.0
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i8* %fs.coerce1, ID: foo.1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i64 %fs.coerce0, ID: foo.0
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i8* %fs.coerce1, ID: foo.1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: store i32 %5, i32* %ut2, align 4, !dbg !47, !phasar.instruction.id !52, ID: 22 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %4, i32* %ut1, align 4, !dbg !40, !phasar.instruction.id !45, ID: 18 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !phasar.instruction.id !26, ID: 8 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i8* %fs.coerce1, ID: foo.1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %t2, align 8, !dbg !33, !phasar.instruction.id !38, ID: 14 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%3 = load i8*, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !37, ID: 13

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: store i8* %fs.coerce1, i8** %2, align 8, !phasar.instruction.id !27, ID: 9 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i8* %fs.coerce1, ID: foo.1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: store i64 %fs.coerce0, i64* %1, align 8, !phasar.instruction.id !25, ID: 7 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i64 %fs.coerce0, ID: foo.0
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i8* %fs.coerce1, ID: foo.1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s2* %fs, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31, ID: 10 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i64 %fs.coerce0, ID: foo.0
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i8* %fs.coerce1, ID: foo.1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s2* %fs to { i64, i8* }*, !phasar.instruction.id !23, ID: 5 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i8* %fs.coerce1, ID: foo.1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	i64 %fs.coerce0, ID: foo.0
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t2, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34, ID: 11 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s2, %struct.s2* %fs, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 12 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %t1, align 8, !dbg !35, !phasar.instruction.id !37, ID: 13 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut1, metadata !39, metadata !29), !dbg !40, !phasar.instruction.id !41, ID: 15 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = getelementptr inbounds %struct.s2, %struct.s2* %fs, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43, ID: 16 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2

--- IFDS START RESULT RECORD ---
N: %4 = load i32, i32* %a, align 8, !dbg !42, !phasar.instruction.id !44, ID: 17 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %ut2, metadata !46, metadata !29), !dbg !47, !phasar.instruction.id !48, ID: 19 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %b = getelementptr inbounds %struct.s2, %struct.s2* %fs, i32 0, i32 1, !dbg !49, !phasar.instruction.id !50, ID: 20 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %5 = load i32, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 21 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !53, !phasar.instruction.id !54, ID: 23 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !20, ID: 2

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%fs = alloca %struct.s2, align 8, !phasar.instruction.id !19, ID: 1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !14, ID: 26 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !61, metadata !29), !dbg !67, !phasar.instruction.id !68, ID: 27 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 28 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34, ID: 29 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 28

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 28

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 28

--- IFDS START RESULT RECORD ---
N: %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !39, !phasar.instruction.id !40, ID: 32 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 25
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34, ID: 29
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %0 = bitcast %struct.s2* %s21 to { i64, i8* }*, !dbg !41, !phasar.instruction.id !42, ID: 33 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 25
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34, ID: 29
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 0, !dbg !41, !phasar.instruction.id !43, ID: 34 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 25
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34, ID: 29
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load i64, i64* %1, align 8, !dbg !41, !phasar.instruction.id !44, ID: 35 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 25
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34, ID: 29
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %0, i32 0, i32 1, !dbg !41, !phasar.instruction.id !45, ID: 36 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 25
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34, ID: 29
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: %4 = load i8*, i8** %3, align 8, !dbg !41, !phasar.instruction.id !46, ID: 37 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 25
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34, ID: 29
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: call void @foo(i64 %2, i8* %4), !dbg !41, !phasar.instruction.id !47, ID: 38 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 31
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 25
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34, ID: 29
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !48, !phasar.instruction.id !49, ID: 39 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %t1, align 8, !dbg 
!37, !phasar.instruction.id !38, ID: 31
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 25
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 2, !dbg !33, !phasar.instruction.id !34, ID: 29
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !35, !phasar.instruction.id !36, ID: 30


No IFDS report available!