PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] Destination:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] VarArg Index: 0
[TRACK] Current VarArg Index: -1
[TRACK] Patched memory location (arg/memcpy)
[TRACK] Source:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] VarArg Index: 0
[TRACK] Current VarArg Index: 0
[TRACK] Destination:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK] VarArg Index: 0
[TRACK] Current VarArg Index: -1
[TRACK] Patched memory location (arg/memcpy)
[TRACK] Source:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK] VarArg Index: 0
[TRACK] Current VarArg Index: 0
[TRACK] Destination:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   %t2 = alloca i8*, align 8, !phasar.instruction.id !16
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29
[TRACK] VarArg Index: 0
[TRACK] Current VarArg Index: -1
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK] @zero_value = constant i2 0, align 4
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %n.addr = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 8 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %t2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !23, metadata !20), !dbg !38, !phasar.instruction.id !39, ID: 9 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: store i32 %n, i32* %n.addr, align 4, !phasar.instruction.id !18, ID: 7 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %t11, align 8, !dbg !32, !phasar.instruction.id !34, ID: 47 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 45
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 40
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !26, !phasar.instruction.id !27, ID: 43

--- IFDS START RESULT RECORD ---
N: %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 10 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !13, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %ut1 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 24, i32 8, i1 false), !dbg !54, !phasar.instruction.id !63, ID: 22 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	0

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	0

--- IFDS START RESULT RECORD ---
N: %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !40, !phasar.instruction.id !42, ID: 11 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: call void @llvm.va_start(i8* %arraydecay1), !dbg !40, !phasar.instruction.id !43, ID: 12 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s2* %s2, metadata !44, metadata !20), !dbg !52, !phasar.instruction.id !53, ID: 13 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55, ID: 14 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !54, !phasar.instruction.id !56, ID: 15 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !54, !phasar.instruction.id !57, ID: 16 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: %0 = bitcast i8* %overflow_arg_area to %struct.s2*, !dbg !54, !phasar.instruction.id !58, ID: 17 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 24, !dbg !54, !phasar.instruction.id !59, ID: 18 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	-1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	-1

--- IFDS START RESULT RECORD ---
N: store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !54, !phasar.instruction.id !60, ID: 19 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	0

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	0

--- IFDS START RESULT RECORD ---
N: %1 = bitcast %struct.s2* %s2 to i8*, !dbg !54, !phasar.instruction.id !61, ID: 20 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	0

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	0

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = bitcast %struct.s2* %0 to i8*, !dbg !54, !phasar.instruction.id !62, ID: 21 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44
VI:	0
CI:	0

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48
VI:	0
CI:	0

--- IFDS START RESULT RECORD ---
N: %s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 40 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !64, metadata !20), !dbg !65, !phasar.instruction.id !66, ID: 23 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: %t13 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !67, !phasar.instruction.id !68, ID: 24 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %t13, align 8, !dbg !67, !phasar.instruction.id !69, ID: 25 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %t1, align 8, !dbg !65, !phasar.instruction.id !70, ID: 26 in function: foo
D:	%3 = load i8*, i8** %t13, align 8, !dbg !67, !phasar.instruction.id !69, ID: 25

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t2, metadata !71, metadata !20), !dbg !72, !phasar.instruction.id !73, ID: 27 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

--- IFDS START RESULT RECORD ---
N: %t24 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !74, !phasar.instruction.id !75, ID: 28 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: %4 = load i8*, i8** %t24, align 8, !dbg !74, !phasar.instruction.id !76, ID: 29 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: store i8* %4, i8** %t2, align 8, !dbg !72, !phasar.instruction.id !77, ID: 30 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%4 = load i8*, i8** %t24, align 8, !dbg !74, !phasar.instruction.id !76, ID: 29

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %ut1, metadata !78, metadata !20), !dbg !79, !phasar.instruction.id !80, ID: 31 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: %ut15 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 2, !dbg !81, !phasar.instruction.id !82, ID: 32 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %5 = load i8*, i8** %ut15, align 8, !dbg !81, !phasar.instruction.id !83, ID: 33 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: store i8* %5, i8** %ut1, align 8, !dbg !79, !phasar.instruction.id !84, ID: 34 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: %arraydecay6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !dbg !85, !phasar.instruction.id !86, ID: 35 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: %arraydecay67 = bitcast %struct.__va_list_tag* %arraydecay6 to i8*, !dbg !85, !phasar.instruction.id !87, ID: 36 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 39 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.va_end(i8* %arraydecay67), !dbg !85, !phasar.instruction.id !88, ID: 37 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

--- IFDS START RESULT RECORD ---
N: ret void, !dbg !89, !phasar.instruction.id !90, ID: 38 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !14, ID: 3
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !14, ID: 41 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s2* %s2, metadata !97, metadata !20), !dbg !98, !phasar.instruction.id !99, ID: 42 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !26, !phasar.instruction.id !27, ID: 43 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !26, !phasar.instruction.id !27, ID: 43

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 45 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !26, !phasar.instruction.id !27, ID: 43

--- IFDS START RESULT RECORD ---
N: %t11 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 46 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !26, !phasar.instruction.id !27, ID: 43

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 45
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 40
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48 in function: main
D:	%0 = load i8*, i8** %t11, align 8, !dbg !32, !phasar.instruction.id !34, ID: 47

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !26, !phasar.instruction.id !27, ID: 43

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 45
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 40
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %t2, align 8, !dbg !37, !phasar.instruction.id !38, ID: 49 in function: main
D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 45
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 40
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !26, !phasar.instruction.id !27, ID: 43

D:	%0 = load i8*, i8** %t11, align 8, !dbg !32, !phasar.instruction.id !34, ID: 47

--- IFDS START RESULT RECORD ---
N: call void (i32, ...) @foo(i32 1, %struct.s2* byval align 8 %s2), !dbg !39, !phasar.instruction.id !40, ID: 50 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !26, !phasar.instruction.id !27, ID: 43

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruc
[TRACK] VarArg Index: 0
[TRACK] Current VarArg Index: -1
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549838143-trace.txt
tion.id !31, ID: 45
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 40
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 45
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 40
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !41, !phasar.instruction.id !42, ID: 51 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #2, !dbg !26, !phasar.instruction.id !27, ID: 43

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 45
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 40
A:	%t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !28, !phasar.instruction.id !29, ID: 44

D:	store i8* %call, i8** %t1, align 8, !dbg !30, !phasar.instruction.id !31, ID: 45
A:	%s2 = alloca %struct.s2, align 8, !phasar.instruction.id !13, ID: 40
A:	%t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !35, !phasar.instruction.id !36, ID: 48

D:	@zero_value = constant i2 0, align 4, ID: -1


