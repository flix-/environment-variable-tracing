PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK]   %s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18
[TRACK]   %s4 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 1, !dbg !41, !phasar.instruction.id !42
[TRACK]   %s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 0, !dbg !43, !phasar.instruction.id !44
[TRACK]   %s2 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46
[TRACK]   %t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK]   %call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33
[TRACK]   %t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK]   %call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33
[TRACK]   %t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35
[TRACK]   %t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !14### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4 in function: foo
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call1, i8** %t12, align 8, !dbg !49, !phasar.instruction.id !50, ID: 11 in function: foo
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s3* %s3, metadata !19, metadata !30), !dbg !31, !phasar.instruction.id !32, ID: 2 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5 in function: foo
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3 in function: foo
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s4 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 1, !dbg !41, !phasar.instruction.id !42, ID: 7 in function: foo
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 0, !dbg !43, !phasar.instruction.id !44, ID: 8 in function: foo
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46, ID: 9 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6

--- IFDS START RESULT RECORD ---
N: %t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10 in function: foo
D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6

--- IFDS START RESULT RECORD ---
N: %s43 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52, ID: 12 in function: foo
D:	store i8* %call1, i8** %t12, align 8, !dbg !49, !phasar.instruction.id !50, ID: 11
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%s4 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 1, !dbg !41, !phasar.instruction.id !42, ID: 7
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 0, !dbg !43, !phasar.instruction.id !44, ID: 8
A:	%s2 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46, ID: 9
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s54 = getelementptr inbounds %struct.s4, %struct.s4* %s43, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54, ID: 13 in function: foo
D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

D:	store i8* %call1, i8** %t12, align 8, !dbg !49, !phasar.instruction.id !50, ID: 11
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%s4 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 1, !dbg !41, !phasar.instruction.id !42, ID: 7
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 0, !dbg !43, !phasar.instruction.id !44, ID: 8
A:	%s2 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46, ID: 9
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

--- IFDS START RESULT RECORD ---
N: %s25 = getelementptr inbounds %struct.s5, %struct.s5* %s54, i32 0, i32 0, !dbg !55, !phasar.instruction.id !56, ID: 14 in function: foo
D:	store i8* %call1, i8** %t12, align 8, !dbg !49, !phasar.instruction.id !50, ID: 11
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%s4 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 1, !dbg !41, !phasar.instruction.id !42, ID: 7
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 0, !dbg !43, !phasar.instruction.id !44, ID: 8
A:	%s2 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46, ID: 9
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret %struct.s2* %s25, !dbg !57, !phasar.instruction.id !58, ID: 15 in function: foo
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call1, i8** %t12, align 8, !dbg !49, !phasar.instruction.id !50, ID: 11
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%s4 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 1, !dbg !41, !phasar.instruction.id !42, ID: 7
A:	%s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 0, !dbg !43, !phasar.instruction.id !44, ID: 8
A:	%s2 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46, ID: 9
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	%call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 6

D:	store i8* %call, i8** %t1, align 8, !dbg !37, !phasar.instruction.id !38, ID: 5
A:	%s3 = alloca %struct.s3, align 8, !phasar.instruction.id !18, ID: 1
A:	%t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 4

--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 18 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %nt1 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 19 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !68, metadata !30), !dbg !73, !phasar.instruction.id !74, ID: 21 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store %struct.s2* %call, %struct.s2** %s2, align 8, !dbg !36, !phasar.instruction.id !37, ID: 24 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !81, metadata !30), !dbg !82, !phasar.instruction.id !83, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

--- IFDS START RESULT RECORD ---
N: %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !41, !phasar.instruction.id !42, ID: 26 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load %struct.s2*, %struct.s2** %s21, align 8, !dbg !41, !phasar.instruction.id !43, ID: 27 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %t12 = getelementptr inbounds %struct.s2, %struct.s2* %0, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 28 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %t12, align 8, !dbg !44, !phasar.instruction.id !46, ID: 29 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %t1, align 8, !dbg !39, !phasar.instruction.id !47, ID: 30 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8*, i8** %t12, align 8, !dbg !44, !phasar.instruction.id !46, ID: 29

D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %nt1, metadata !91, metadata !30), !dbg !92, !phasar.instruction.id !93, ID: 31 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 18

D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %s23 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52, ID: 32 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 18

D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %2 = load %struct.s2*, %struct.s2** %s23, align 8, !dbg !51, !phasar.instruction.id !53, ID: 33 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 18

D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %nt14 = getelementptr inbounds %struct.s2, %struct.s2* %2, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 34 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID:
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549710529-trace.txt
 18

--- IFDS START RESULT RECORD ---
N: %3 = load i8*, i8** %nt14, align 8, !dbg !54, !phasar.instruction.id !56, ID: 35 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 18

D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %3, i8** %nt1, align 8, !dbg !49, !phasar.instruction.id !57, ID: 36 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 18

D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !58, !phasar.instruction.id !59, ID: 37 in function: main
D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !14, ID: 18

D:	%call = call %struct.s2* @foo(), !dbg !32, !phasar.instruction.id !33, ID: 22
A:	%s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 17
A:	%s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !34, !phasar.instruction.id !35, ID: 23
A:	%t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1


