; ModuleID = 'main.c'
source_filename = "main.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.s2 = type { i8*, i8* }
%struct.s3 = type { i8*, %struct.s4 }
%struct.s4 = type { %struct.s5 }
%struct.s5 = type { %struct.s2 }
%struct.s1 = type { i8*, %struct.s2* }

@.str = private unnamed_addr constant [5 x i8] c"gude\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define %struct.s2* @foo() #0 !dbg !7 {
entry:
  %s3 = alloca %struct.s3, align 8
  call void @llvm.dbg.declare(metadata %struct.s3* %s3, metadata !17, metadata !28), !dbg !29
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30
  %t1 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 0, !dbg !31
  store i8* %call, i8** %t1, align 8, !dbg !32
  %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33
  %s4 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 1, !dbg !34
  %s5 = getelementptr inbounds %struct.s4, %struct.s4* %s4, i32 0, i32 0, !dbg !35
  %s2 = getelementptr inbounds %struct.s5, %struct.s5* %s5, i32 0, i32 0, !dbg !36
  %t12 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !37
  store i8* %call1, i8** %t12, align 8, !dbg !38
  %s43 = getelementptr inbounds %struct.s3, %struct.s3* %s3, i32 0, i32 1, !dbg !39
  %s54 = getelementptr inbounds %struct.s4, %struct.s4* %s43, i32 0, i32 0, !dbg !40
  %s25 = getelementptr inbounds %struct.s5, %struct.s5* %s54, i32 0, i32 0, !dbg !41
  %__IFDSENVIRONMENTVARIABLETRACING_DUMMY_BEFORE_RET__0 = urem i4711 4711, 4711
  ret %struct.s2* %s25, !dbg !42
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define i32 @main() #0 !dbg !43 {
entry:
  %retval = alloca i32, align 4
  %s1 = alloca %struct.s1, align 8
  %t1 = alloca i8*, align 8
  %nt1 = alloca i8*, align 8
  store i32 0, i32* %retval, align 4
  call void @llvm.dbg.declare(metadata %struct.s1* %s1, metadata !47, metadata !28), !dbg !52
  %call = call %struct.s2* @foo(), !dbg !53
  %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !54
  store %struct.s2* %call, %struct.s2** %s2, align 8, !dbg !55
  call void @llvm.dbg.declare(metadata i8** %t1, metadata !56, metadata !28), !dbg !57
  %s21 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !58
  %0 = load %struct.s2*, %struct.s2** %s21, align 8, !dbg !58
  %t12 = getelementptr inbounds %struct.s2, %struct.s2* %0, i32 0, i32 0, !dbg !59
  %1 = load i8*, i8** %t12, align 8, !dbg !59
  store i8* %1, i8** %t1, align 8, !dbg !57
  call void @llvm.dbg.declare(metadata i8** %nt1, metadata !60, metadata !28), !dbg !61
  %s23 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 1, !dbg !62
  %2 = load %struct.s2*, %struct.s2** %s23, align 8, !dbg !62
  %nt14 = getelementptr inbounds %struct.s2, %struct.s2* %2, i32 0, i32 1, !dbg !63
  %3 = load i8*, i8** %nt14, align 8, !dbg !63
  store i8* %3, i8** %nt1, align 8, !dbg !61
  %__IFDSENVIRONMENTVARIABLETRACING_DUMMY_BEFORE_RET__1 = urem i4711 4711, 4711
  ret i32 0, !dbg !64
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 5.0.1 (tags/RELEASE_501/final 348479)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "main.c", directory: "/home/sebastian/.qt-creator-workspace/Phasar/Test/210-map-to-caller-ptr-3")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 5.0.1 (tags/RELEASE_501/final 348479)"}
!7 = distinct !DISubprogram(name: "foo", scope: !1, file: !1, line: 27, type: !8, isLocal: false, isDefinition: true, scopeLine: 28, isOptimized: false, unit: !0, variables: !2)
!8 = !DISubroutineType(types: !9)
!9 = !{!10}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s2", file: !1, line: 3, size: 128, elements: !12)
!12 = !{!13, !16}
!13 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !11, file: !1, line: 4, baseType: !14, size: 64)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!15 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "nt1", scope: !11, file: !1, line: 5, baseType: !14, size: 64, offset: 64)
!17 = !DILocalVariable(name: "s3", scope: !7, file: !1, line: 29, type: !18)
!18 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s3", file: !1, line: 16, size: 192, elements: !19)
!19 = !{!20, !21}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !18, file: !1, line: 17, baseType: !14, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "s4", scope: !18, file: !1, line: 18, baseType: !22, size: 128, offset: 64)
!22 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s4", file: !1, line: 12, size: 128, elements: !23)
!23 = !{!24}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "s5", scope: !22, file: !1, line: 13, baseType: !25, size: 128)
!25 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s5", file: !1, line: 8, size: 128, elements: !26)
!26 = !{!27}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !25, file: !1, line: 9, baseType: !11, size: 128)
!28 = !DIExpression()
!29 = !DILocation(line: 29, column: 15, scope: !7)
!30 = !DILocation(line: 30, column: 13, scope: !7)
!31 = !DILocation(line: 30, column: 8, scope: !7)
!32 = !DILocation(line: 30, column: 11, scope: !7)
!33 = !DILocation(line: 31, column: 22, scope: !7)
!34 = !DILocation(line: 31, column: 8, scope: !7)
!35 = !DILocation(line: 31, column: 11, scope: !7)
!36 = !DILocation(line: 31, column: 14, scope: !7)
!37 = !DILocation(line: 31, column: 17, scope: !7)
!38 = !DILocation(line: 31, column: 20, scope: !7)
!39 = !DILocation(line: 33, column: 16, scope: !7)
!40 = !DILocation(line: 33, column: 19, scope: !7)
!41 = !DILocation(line: 33, column: 22, scope: !7)
!42 = !DILocation(line: 33, column: 5, scope: !7)
!43 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 37, type: !44, isLocal: false, isDefinition: true, scopeLine: 38, isOptimized: false, unit: !0, variables: !2)
!44 = !DISubroutineType(types: !45)
!45 = !{!46}
!46 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!47 = !DILocalVariable(name: "s1", scope: !43, file: !1, line: 39, type: !48)
!48 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s1", file: !1, line: 21, size: 128, elements: !49)
!49 = !{!50, !51}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !48, file: !1, line: 22, baseType: !14, size: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !48, file: !1, line: 23, baseType: !10, size: 64, offset: 64)
!52 = !DILocation(line: 39, column: 15, scope: !43)
!53 = !DILocation(line: 40, column: 13, scope: !43)
!54 = !DILocation(line: 40, column: 8, scope: !43)
!55 = !DILocation(line: 40, column: 11, scope: !43)
!56 = !DILocalVariable(name: "t1", scope: !43, file: !1, line: 42, type: !14)
!57 = !DILocation(line: 42, column: 11, scope: !43)
!58 = !DILocation(line: 42, column: 19, scope: !43)
!59 = !DILocation(line: 42, column: 23, scope: !43)
!60 = !DILocalVariable(name: "nt1", scope: !43, file: !1, line: 43, type: !14)
!61 = !DILocation(line: 43, column: 11, scope: !43)
!62 = !DILocation(line: 43, column: 20, scope: !43)
!63 = !DILocation(line: 43, column: 24, scope: !43)
!64 = !DILocation(line: 45, column: 5, scope: !43)
