PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll.patched 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK] @str = common global [1024 x i8*] zeroinitializer, align 16, !dbg !7, !phasar.instruction.id !15
[TRACK]   <badref> = getelementptr inbounds [1024 x i8*], [1024 x i8*]* @str, i64 0, i64 10
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] varArgIndex: 0
[TRACK] currentVarArgIndex: -1
[TRACK] Created new VarArg from template
[TRACK] Template:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] varArgIndex: 0
[TRACK] currentVarArgIndex: -1
[TRACK] VarArg:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !25
[TRACK] varArgIndex: 0
[TRACK] currentVarArgIndex: -1
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !25
[TRACK] varArgIndex: 0
[TRACK] currentVarArgIndex: 0
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !26
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] varArgIndex: 2
[TRACK] currentVarArgIndex: -1
[TRACK] Created new VarArg from template
[TRACK] Template:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] varArgIndex: 2
[TRACK] currentVarArgIndex: -1
[TRACK] VarArg:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !25
[TRACK] varArgIndex: 2
[TRACK] currentVarArgIndex: -1
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK] @zero_value = constant i2 0, align 4
[TRACK] vaListMemLocationSeq: 
[TRACK]   %ap = alloca [1 x %struct.__va_list_tag], align 16, !phasar.instruction.id !25
[TRACK] varArgIndex: 2
[TRACK] currentVarArgIndex: 2
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %t2 = alloca i8*, align 8, !phasar.instruction.id !28
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK] @gt = common global i8* null, align 8, !dbg !1, !phasar.instruction.id !14
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %call2 = call i8* (i32, ...) @foo(i32 2, i8* %0, i8* %1, i8* %call1), !dbg !42, !phasar.instruction.id !43
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %call2 = call i8* (i32, ...) @foo(i32 2, i8* %0, i8* %1, i8* %call1), !dbg !42, !phasar.instruction.id !43
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %ret = alloca i8*, align 8, !phasar.instruction.id !25
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %ret = alloca i8*, align 8, !phasar.instruction.id !25
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !26
Writing line number trace to: line-numbers.txt
Writing lcov trace to: static-main-1551693139-trace.txt
Writing lcov return value trace to: static-main-1551693139-return-value-trace.txt
### DUMP LLVMIFDSSolver results
EMPTY

