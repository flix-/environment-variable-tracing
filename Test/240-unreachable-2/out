PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - makeIFDSEnvironmentVariableTracing
initialSeeds()
getNormalFlowFunction()
  %retval = alloca i32, align 4, !phasar.instruction.id !12

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %tainted = alloca i8*, align 8, !phasar.instruction.id !13

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a = alloca i32, align 4, !phasar.instruction.id !14

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %b = alloca i32, align 4, !phasar.instruction.id !15

Got operands checking instruction (alloca)
getNormalFlowFunction()
  %a1 = alloca i32, align 4, !phasar.instruction.id !16

Got operands checking instruction (alloca)
getNormalFlowFunction()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17

Got store instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23

getSummaryFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !24, !phasar.instruction.id !25

getNormalFlowFunction()
  store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26

Got store instruction
getNormalFlowFunction()
  %0 = load i8*, i8** %tainted, align 8, !dbg !27, !phasar.instruction.id !29

Got load instruction
getNormalFlowFunction()
  %tobool = icmp ne i8* %0, null, !dbg !27, !phasar.instruction.id !30

Got operands checking instruction (icmp)
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.else, !dbg !31, !phasar.instruction.id !32

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !21), !dbg !35, !phasar.instruction.id !36

getNormalFlowFunction()
  store i32 0, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37

Got store instruction
getNormalFlowFunction()
  br label %if.end, !dbg !38, !phasar.instruction.id !39

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50

getNormalFlowFunction()
  store i32 0, i32* %a1, align 4, !dbg !49, !phasar.instruction.id !51

Got store instruction
getCallToRetFlowFunction()
getCallToRetFlowFunction()
getNormalFlowFunction()
  br i1 %tobool, label %if.then, label %if.else, !dbg !31, !phasar.instruction.id !32

Got branch instruction
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !40, metadata !21), !dbg !42, !phasar.instruction.id !43

getNormalFlowFunction()
  store i32 1, i32* %b, align 4, !dbg !42, !phasar.instruction.id !44

Got store instruction
getSummaryFlowFunction()
  call void @abort() #5, !dbg !45, !phasar.instruction.id !46

getCallToRetFlowFunction()
getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !21), !dbg !35, !phasar.instruction.id !36

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !40, metadata !21), !dbg !42, !phasar.instruction.id !43

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !21), !dbg !35, !phasar.instruction.id !36

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !40, metadata !21), !dbg !42, !phasar.instruction.id !43

getCallToRetFlowFunction()
getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !21), !dbg !35, !phasar.instruction.id !36

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50

getSummaryFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !40, metadata !21), !dbg !42, !phasar.instruction.id !43

getSummaryFlowFunction()
  call void @abort() #5, !dbg !45, !phasar.instruction.id !46

getCallToRetFlowFunction()
getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23

getCallFlowFunction()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !24, !phasar.instruction.id !25

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !21), !dbg !35, !phasar.instruction.id !36

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %b, metadata !40, metadata !21), !dbg !42, !phasar.instruction.id !43

getCallFlowFunction()
  call void @abort() #5, !dbg !45, !phasar.instruction.id !46

getCallFlowFunction()
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %a1 = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %b, align 4, !dbg !42, !phasar.instruction.id !44, ID: 17 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !27, !phasar.instruction.id !29, ID: 10

D:	%tobool = icmp ne i8* %0, null, !dbg !27, !phasar.instruction.id !30, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !35, !phasar.instruction.id !37, ID: 14 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !27, !phasar.instruction.id !29, ID: 10

D:	%tobool = icmp ne i8* %0, null, !dbg !27, !phasar.instruction.id !30, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !24, !phasar.instruction.id !25, ID: 8

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #4, !dbg !24, !phasar.instruction.id !25, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !52, !phasar.instruction.id !53, ID: 22 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %if.then, label %if.else, !dbg !31, !phasar.instruction.id !32, ID: 12 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !27, !phasar.instruction.id !29, ID: 10

D:	%tobool = icmp ne i8* %0, null, !dbg !27, !phasar.instruction.id !30, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %tainted, align 8, !dbg !27, !phasar.instruction.id !29, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i8* %0, null, !dbg !27, !phasar.instruction.id !30, ID: 11 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !27, !phasar.instruction.id !29, ID: 10

D:	@zero_value

 = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !21), !dbg !35, !phasar.instruction.id !36, ID: 13 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !27, !phasar.instruction.id !29, ID: 10

D:	%tobool = icmp ne i8* %0, null, !dbg !27, !phasar.instruction.id !30, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %if.end, !dbg !38, !phasar.instruction.id !39, ID: 15 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !40, metadata !21), !dbg !42, !phasar.instruction.id !43, ID: 16 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%tobool = icmp ne i8* %0, null, !dbg !27, !phasar.instruction.id !30, ID: 11

D:	%0 = load i8*, i8** %tainted, align 8, !dbg !27, !phasar.instruction.id !29, ID: 10

--- IFDS START RESULT RECORD ---
N: call void @abort() #5, !dbg !45, !phasar.instruction.id !46, ID: 18 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: unreachable, !dbg !45, !phasar.instruction.id !47, ID: 19 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a1, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 20 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a1, align 4, !dbg !49, !phasar.instruction.id !51, ID: 21 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1


No IFDS report available!