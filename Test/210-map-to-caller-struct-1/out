PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll.patched 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s11 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Patched memory location (arg/store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK] i32 %s.coerce0
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !19
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s = alloca %struct.s1, align 8, !phasar.instruction.id !19
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %retval = alloca %struct.s1, align 8, !phasar.instruction.id !18
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !38, !phasar.instruction.id !44
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %call1 = call { i32, i8* } @foo(i32 %2, i8* %4), !dbg !38, !phasar.instruction.id !44
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %tainted = getelementptr inbounds %struct.s1, %struct.s1* %s11, i32 0, i32 1, !dbg !31, !phasar.instruction.id !32
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %tainted2 = alloca i8*, align 8, !phasar.instruction.id !17
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %8 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 1, !dbg !38, !phasar.instruction.id !49
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %8 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 1, !dbg !38, !phasar.instruction.id !49
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK] memLocationSeq: 
[TRACK]   %coerce = alloca %struct.s1, align 8, !phasar.instruction.id !15
[TRACK]   %6 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 0, !dbg !38, !phasar.instruction.id !46
[TRACK] Destination:
[TRACK] memLocationSeq: 
[TRACK]   %s12 = alloca %struct.s1, align 8, !phasar.instruction.id !14
[TRACK]   %6 = getelementptr inbounds { i32, i8* }, { i32, i8* }* %5, i32 0, i32 0, !dbg !38, !phasar.instruction.id !46
Writing line number trace to: line-numbers.txt
Writing lcov trace to: static-main-1551436107-trace.txt
Writing lcov return value trace to: static-main-1551436107-return-value-trace.txt
### DUMP LLVMIFDSSolver results
EMPTY

