PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %taint = alloca i32, align 4, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK]   %a = alloca i32, align 4, !phasar.instruction.id !14### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %1, i32* %a, align 4, !dbg !33, !phasar.instruction.id !37, ID: 17 in function: main
D:	store i32 %land.ext, i32* %taint, align 4, !dbg !18, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%1 = load i32, i32* %taint, align 4, !dbg !35, !phasar.instruction.id !36, ID: 16

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %land.ext, i32* %taint, align 4, !dbg !18, !phasar.instruction.id !31, ID: 14 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

D:	%land.ext = zext i1 %0 to i32, !dbg !23, !phasar.instruction.id !30, ID: 13

D:	%tobool2 = icmp ne i32 %call1, 0, !dbg !23, !phasar.instruction.id !27, ID: 10

D:	%0 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !phasar.instruction.id !29, ID: 12

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %taint, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i32 (...) @bar(), !dbg !20, !phasar.instruction.id !21, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %tobool, label %land.rhs, label %land.end, !dbg !23, !phasar.instruction.id !24, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tobool = icmp ne i32 %call, 0, !dbg !20, !phasar.instruction.id !22, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %land.ext = zext i1 %0 to i32, !dbg !23, !phasar.instruction.id !30, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !phasar.instruction.id !29, ID: 12

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

D:	%tobool2 = icmp ne i32 %call1, 0, !dbg !23, !phasar.instruction.id !27, ID: 10

--- IFDS START RESULT RECORD ---
N: %tobool2 = icmp ne i32 %call1, 0, !dbg !23, !phasar.instruction.id !27, ID: 10 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %land.end, !phasar.instruction.id !28, ID: 11 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

D:	%tobool2 = icmp ne i32 %call1, 0, !dbg !23, !phasar.instruction.id !27, ID: 10

D:	@zero_value = constant i2 0, align 4,
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549637036-trace.txt
 ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !phasar.instruction.id !29, ID: 12 in function: main
D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

D:	%tobool2 = icmp ne i32 %call1, 0, !dbg !23, !phasar.instruction.id !27, ID: 10

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !32, metadata !17), !dbg !33, !phasar.instruction.id !34, ID: 15 in function: main
D:	store i32 %land.ext, i32* %taint, align 4, !dbg !18, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %taint, align 4, !dbg !35, !phasar.instruction.id !36, ID: 16 in function: main
D:	store i32 %land.ext, i32* %taint, align 4, !dbg !18, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !38, !phasar.instruction.id !39, ID: 18 in function: main
D:	store i32 %land.ext, i32* %taint, align 4, !dbg !18, !phasar.instruction.id !31, ID: 14
A:	%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 %land.ext, i32* %taint, align 4, !dbg !18, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	%call1 = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !25, !phasar.instruction.id !26, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1


