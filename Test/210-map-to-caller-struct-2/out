PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Added patchable memory location (caller -> callee)
[TRACK] Source:
[TRACK]   %s1 = alloca %struct.s1, align 8, !phasar.instruction.id !13
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !36, !phasar.instruction.id !37
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Destination:
[TRACK] %struct.s1* %s1
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !36, !phasar.instruction.id !37
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK] %struct.s1* %s1
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !36, !phasar.instruction.id !37
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Destination:
[TRACK]   %retval = alloca %struct.s2, align 8, !phasar.instruction.id !24
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK]   %retval = alloca %struct.s2, align 8, !phasar.instruction.id !24
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Destination:
[TRACK]   %call2 = call { i8*, i8* } @foo(%struct.s1* byval align 8 %s1), !dbg !45, !phasar.instruction.id !46
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK]   %call2 = call { i8*, i8* } @foo(%struct.s1* byval align 8 %s1), !dbg !45, !phasar.instruction.id !46
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Destination:
[TRACK]   %s21 = alloca %struct.s2, align 8, !phasar.instruction.id !14
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s21 = alloca %struct.s2, align 8, !phasar.instruction.id !14
[TRACK]   %t1 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
[TRACK] Destination:
[TRACK]   %t13 = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK] Relocated memory location (memcpy/memmove)
[TRACK] Source:
[TRACK] %struct.s1* %s1
[TRACK]   %s2 = getelementptr inbounds %struct.s1, %struct.s1* %s1, i32 0, i32 3, !dbg !31, !phasar.instruction.id !32
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK]   %retval = alloca %struct.s2, align 8, !phasar.instruction.id !24
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
[TRACK] Added patchable memory location (caller <- callee)
[TRACK] Source:
[TRACK]   %retval = alloca %struct.s2, align 8, !phasar.instruction.id !24
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK]   %call2 = call { i8*, i8* } @foo(%struct.s1* byval align 8 %s1), !dbg !45, !phasar.instruction.id !46
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
[TRACK] Patched memory location (ret/store)
[TRACK] Source:
[TRACK]   %call2 = call { i8*, i8* } @foo(%struct.s1* byval align 8 %s1), !dbg !45, !phasar.instruction.id !46
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK]   %s21 = alloca %struct.s2, align 8, !phasar.instruction.id !14
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %s21 = alloca %struct.s2, align 8, !phasar.instruction.id !14
[TRACK]   %t2 = getelementptr inbounds %struct.s2, %struct.s2* %s2, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
[TRACK] Destination:
[TRACK]   %t2 = alloca i8*, align 8, !phasar.instruction.id !16
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550582398-trace.txt
### DUMP LLVMIFDSSolver results
EMPTY

