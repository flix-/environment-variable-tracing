PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Release/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25, ID: 11 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %f = alloca i32, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %taint, metadata !26, metadata !23), !dbg !27, !phasar.instruction.id !28, ID: 12 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !21, ID: 10 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %no_taint = alloca i32, align 4, !phasar.instruction.id !20, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b6 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a4 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %rc, align 4, !dbg !32, !phasar.instruction.id !33, ID: 15 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog7, !dbg !74, !phasar.instruction.id !75, ID: 35 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

--- IFDS START RESULT RECORD ---
N: %1 = load i32, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !38, ID: 17 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog7, !dbg !68, !phasar.instruction.id !69, ID: 32 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: switch i32 %0, label %sw.default5 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
  ], !dbg !34, !phasar.instruction.id !35, ID: 16 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !56, !phasar.instruction.id !57, ID: 26 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18
L:	sw.epilog

D:	store i32 3, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 25
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %2 = load i32, i32* %rc, align 4, !dbg !80, !phasar.instruction.id !81, ID: 38 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 3, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 25
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 2, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 1, i32* %a, align 4, !dbg !43, !phasar.instruction.id !45, ID: 20
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !52, !phasar.instruction.id !53, ID: 24 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18
L:	sw.epilog

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	store i32 2, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

--- IFDS START RESULT RECORD ---
N: switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18
L:	sw.epilog

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %a, align 4, !dbg !43, !phasar.instruction.id !45, ID: 20 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18
L:	sw.epilog

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog, !dbg !46, !phasar.instruction.id !47, ID: 21 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18
L:	sw.epilog

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i32 1, i32* %a, align 4, !dbg !43, !phasar.instruction.id !45, ID: 20
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18
L:	sw.epilog

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18
L:	sw.epilog

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 3, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 25 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18
L:	sw.epilog

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %f, metadata !58, metadata !23), !dbg !59, !phasar.instruction.id !60, ID: 27 in function: main
D:	switch i32 %1, label %sw.default [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb2
  ], !dbg !39, !phasar.instruction.id !40, ID: 18
L:	sw.epilog

D:	store i32 3, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 25
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 2, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	store i32 1, i32* %a, align 4, !dbg !43, !phasar.instruction.id !45, ID: 20
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %f, align 4, !dbg !59, !phasar.instruction.id !61, ID: 28 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i32 3, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 25
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 2, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	store i32 1, i32* %a, align 4, !dbg !43, !phasar.instruction.id !45, ID: 20
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

--- IFDS START RESULT RECORD ---
N: br label %sw.epilog7, !dbg !62, !phasar.instruction.id !63, ID: 29 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i32 1, i32* %a, align 4, !dbg !43, !phasar.instruction.id !45, ID: 20
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	store i32 2, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	store i32 3, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 25
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a4, metadata !64, metadata !23), !dbg !65, !phasar.instruction.id !66, ID: 30 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %a4, align 4, !dbg !65, !phasar.instruction.id !67, ID: 31 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %b6, metadata !70, metadata !23), !dbg !71, !phasar.instruction.id !72, ID: 33 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 2, i32* %b6, align 4, !dbg !71, !phasar.instruction.id !73, ID: 34 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %no_taint, metadata !76, metadata !23), !dbg !77, !phasar.instruction.id !78, ID: 36 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 3, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 25
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 2, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	store i32 1, i32* %a, align 4, !dbg !43, !phasar.instruction.id !45, ID: 20
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %no_taint, align 4, !dbg !77, !phasar.instruction.id !79, ID: 37 in function: main
D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	store i32 3, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 25
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	store i32 2, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22

D[TRACK] Searching end of block label for: sw.bb
[TRACK] End of closed block label: sw.epilog
[TRACK] End of block label: sw.epilog
[TRACK] Searching end of block label for: sw.bb
[TRACK] End of closed block label: sw.epilog
[TRACK] End of block label: sw.epilog
[TRACK] Searching end of block label for: sw.bb
[TRACK] End of closed block label: sw.epilog
[TRACK] End of block label: sw.epilog
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1550328194-trace.txt
:	store i32 1, i32* %a, align 4, !dbg !43, !phasar.instruction.id !45, ID: 20
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

--- IFDS START RESULT RECORD ---
N: ret i32 %2, !dbg !82, !phasar.instruction.id !83, ID: 39 in function: main
D:	%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13

D:	store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
A:	%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !41, metadata !23), !dbg !43, !phasar.instruction.id !44, ID: 19

D:	store i32 1, i32* %a, align 4, !dbg !43, !phasar.instruction.id !45, ID: 20
A:	%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4

D:	call void @llvm.dbg.declare(metadata i32* %b, metadata !48, metadata !23), !dbg !49, !phasar.instruction.id !50, ID: 22

D:	store i32 2, i32* %b, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
A:	%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5

D:	store i32 3, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !55, ID: 25
A:	%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2

D:	ret i32 %2, !dbg !82, !phasar.instruction.id !83, ID: 39


