PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %u = alloca %union.u1, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK]   %u2 = alloca %union.u1, align 8, !phasar.instruction.id !14
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %u = alloca %union.u1, align 8, !phasar.instruction.id !13
[TRACK] Destination:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %u2 = alloca %union.u1, align 8, !phasar.instruction.id !14
[TRACK] Destination:
[TRACK]   %tainted2 = alloca i8*, align 8, !phasar.instruction.id !16### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24

D:	%taint10 = bitcast %union.u1* %u to i8**, !dbg !69, !phasar.instruction.id !70, ID: 23

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52, ID: 14

D:	%u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56, ID: 16

D:	%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !18, metadata !35), !dbg !36, !phasar.instruction.id !37, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %union.u1* %u2, metadata !38, metadata !35), !dbg !39, !phasar.instruction.id !40, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !43, !phasar.instruction.id !44, ID: 10 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u3 = bitcast %union.u2* %u1 to %union.u3*, !dbg !45, !phasar.instruction.id !46, ID: 11 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint = bitcast %union.u3* %u3 to i8**, !dbg !47, !phasar.instruction.id !48, ID: 12 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52, ID: 14 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54, ID: 15 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52, ID: 14

--- IFDS START RESULT RECORD ---
N: %taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56, ID: 16 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52, ID: 14

D:	%u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	%taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54, ID: 15

D:	%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52, ID: 14

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %u7 = bitcast %union.u1* %u2 to %union.u2*, !dbg !58, !phasar.instruction.id !59, ID: 18 in function: main
D:	%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52, ID: 14

D:	%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17

D:	%taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

--- IFDS START RESULT RECORD ---
N: %u8 = bitcast %union.u2* %u7 to %union.u3*, !dbg !60, !phasar.instruction.id !61, ID: 19 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52, ID: 14

D:	%u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54, ID: 15

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56, ID: 16

D:	%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17

--- IFDS START RESULT RECORD ---
N: %taint9 = bitcast %union.u3* %u8 to i8**, !dbg !62, !phasar.instruction.id !63, ID: 20 in function: main
D:	%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17

D:	%taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56, ID: 16

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54, ID: 15

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52, ID: 14

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !66, metadata !35), !dbg !67, !phasar.instruction.id !68, ID: 22 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %taint10 = bitcast %union.u1* %u to i8**, !dbg !69, !phasar.instruction.id !70, ID: 23 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24 in function: main
D:	%taint10 = bitcast %union.u1* %u to i8**, !dbg !69, !phasar.instruction.id !70, ID: 23

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

--- IFDS START RESULT RECORD ---
N: %u11 = bitcast %union.u1* %u to %union.u2*, !dbg !73, !phasar.instruction.id !74, ID: 26 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %d = bitcast %union.u2* %u11 to double*, !dbg !75, !phasar.instruction.id !76, ID: 27 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%u11 = bitcast %union.u1* %u to %union.u2*, !dbg !73, !phasar.instruction.id !74, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: store double 1.000000e+00, double* %d, align 8, !dbg !77, !phasar.instruction.id !78, ID: 28 in function: main
D:	%d = bitcast %union.u2* %u11 to double*, !dbg !75, !phasar.instruction.id !76, ID: 27

D:	%u11 = bitcast %union.u1* %u to %union.u2*, !dbg !73, !phasar.instruction.id !74, ID: 26

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !79, metadata !35), !dbg !80, !phasar.instruction.id !81, ID: 29 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %u12 = bitcast %union.u1* %u2 to %union.u2*, !dbg !82, !phasar.instruction.id !83, ID: 30 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

--- IFDS START RESULT RECORD ---
N: %taint13 = bitcast %union.u2* %u12 to i8**, !dbg !84, !phasar.instruction.id !85, ID: 31 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted = alloca i8*, align 8, !pha
sar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%u12 = bitcast %union.u1* %u2 to %union.u2*, !dbg !82, !phasar.instruction.id !83, ID: 30

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %taint13, align 8, !dbg !84, !phasar.instruction.id !86, ID: 32 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	%taint13 = bitcast %union.u2* %u12 to i8**, !dbg !84, !phasar.instruction.id !85, ID: 31

D:	%u12 = bitcast %union.u1* %u2 to %union.u2*, !dbg !82, !phasar.instruction.id !83, ID: 30

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %tainted2, align 8, !dbg !80, !phasar.instruction.id !87, ID: 33 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%u12 = bitcast %union.u1* %u2 to %union.u2*, !dbg !82, !phasar.instruction.id !83, ID: 30

D:	%taint13 = bitcast %union.u2* %u12 to i8**, !dbg !84, !phasar.instruction.id !85, ID: 31

D:	%2 = load i8*, i8** %taint13, align 8, !dbg !84, !phasar.instruction.id !86, ID: 32

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !88, !phasar.instruction.id !89, ID: 34 in function: main
D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5

D:	store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9

D:	@zero_value = constant i2 0, align 4, ID: -1


