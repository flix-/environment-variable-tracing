PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
[TRACK]   %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36
[TRACK] Destination:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43
[TRACK]   %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
[TRACK]   %a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
[TRACK]   %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43
[TRACK]   %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
[TRACK]   %a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47
[TRACK] Destination:
[TRACK]   %a4 = alloca i8*, align 8, !phasar.instruction.id !15### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %0, i8** %a3, align 8, !dbg !48, !phasar.instruction.id !49, ID: 15 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	%0 = load i8*, i8** %a1, align 8, !dbg !39, !phasar.instruction.id !41, ID: 11

--- IFDS START RESULT RECORD ---
N: %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !17, metadata !30), !dbg !31, !phasar.instruction.id !32, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !39, !phasar.instruction.id !40, ID: 10 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

--- IFDS START RESULT RECORD ---
N: %0 = load i8*, i8** %a1, align 8, !dbg !39, !phasar.instruction.id !41, ID: 11 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	%0 = load i8*, i8** %a1, align 8, !dbg !39, !phasar.instruction.id !41, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%0 = load i8*, i8** %a1, align 8, !dbg !39, !phasar.instruction.id !41, ID: 11

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

--- IFDS START RESULT RECORD ---
N: %a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	%0 = load i8*, i8** %a1, align 8, !dbg !39, !phasar.instruction.id !41, ID: 11

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %a4, metadata !50, metadata !30), !dbg !51, !phasar.instruction.id !52, ID: 16 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %b5 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !53, !phasar.instruction.id !54, ID: 17 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

--- IFDS START RESULT RECORD ---
N: %a6 = getelementptr inbounds %struct.b, %struct.b* %b5, i32 0, i32 0, !dbg !55, !phasar.instruction.id !56, ID: 18 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a7 = getelementptr inbounds %struct.c, %struct.c* %a6, i32 0, i32 0, !dbg !57, !phasar.instruction.id !58, ID: 19 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %a7, align 8, !dbg !57, !phasar.instruction.id !59, ID: 20 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

--- IFDS START RESULT RECORD ---
N: store i8* %1, i8** %a4, align 8, !dbg !51, !phasar.instruction.id !60, ID: 21 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	%1 = load i8*, i8** %a7, align 8, !dbg !57, !phasar.instruction.id !59, ID: 20

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

--- IFDS START RESULT RECORD ---
N: %b8 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 22 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a9 = getelementptr inbounds %struct.b, %struct.b* %b8, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 23 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %a10 = getelementptr inbounds %struct.c, %struct.c* %a9, i32 0, i32 0, !dbg !65, !phasar.instruction.id !66, ID: 24 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %a10, align 8, !dbg !67, !phasar.instruction.id !68, ID: 25 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 12
A:	%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 13
A:	%a3 = getelementptr inbounds %struct.c, %struct.c* %a2, i32 0, i32 0, !dbg !46, !phasar.instruction.id !47, ID: 14

--- IFDS START RESULT RECORD ---
N: %b11 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !69, !phasar.instruction.id !70, ID: 26 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a12 = getelementptr inbounds %struct.b, %struct.b* %b11, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 27 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a13 = getelementptr inbounds %struct.c, %struct.c* %a12, i32 0, i32 0, !dbg !73, !phasar.instruction.id !74, ID: 28 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %a13, align 8, !dbg !73, !phasar.instruction.id !75, ID: 29 in function: main
D:	store i8* %call, i8** %a, align 8, !d
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549639288-trace.txt
bg !37, !phasar.instruction.id !38, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %2, i8** %a4, align 8, !dbg !76, !phasar.instruction.id !77, ID: 30 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4

D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: ret i32 0, !dbg !78, !phasar.instruction.id !79, ID: 31 in function: main
D:	store i8* %call, i8** %a, align 8, !dbg !37, !phasar.instruction.id !38, ID: 9
A:	%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
A:	%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 8

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7

D:	@zero_value = constant i2 0, align 4, ID: -1


