PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/IFDSEnvironmentVariableTracing/libIFDSEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
[TRACK] Checking end of branch label for: if.then2
[TRACK] End of branch label: if.end
[TRACK] Checking end of branch label for: if.then2
[TRACK] End of branch label: if.end
[TRACK] Checking end of branch label for: if.then
[TRACK] End of branch label: if.end6
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %rc = alloca i32, align 4, !phasar.instruction.id !16
[TRACK] Destination:
[TRACK]   %retval = alloca i32, align 4, !phasar.instruction.id !14
[TRACK] Checking end of branch label for: if.then
[TRACK] End of branch label: if.end6
[TRACK] Relocated memory location (store)
[TRACK] Source:
[TRACK]   %tainted = alloca i8*, align 8, !phasar.instruction.id !15
[TRACK] Destination:
[TRACK]   %t1 = alloca i8*, align 8, !phasar.instruction.id !18### DUMP LLVMIFDSSolver results
--- IFDS START RESULT RECORD ---
N: %t1 = alloca i8*, align 8, !phasar.instruction.id !18, ID: 5 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 -1, i32* %retval, align 4, !dbg !69, !phasar.instruction.id !71, ID: 25 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

D:	%2 = load i8*, i8** %tainted, align 8, !dbg !47, !phasar.instruction.id !50, ID: 17

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22 in function: main
D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	%2 = load i8*, i8** %tainted, align 8, !dbg !47, !phasar.instruction.id !50, ID: 17

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !20, metadata !23), !dbg !24, !phasar.instruction.id !25, ID: 7 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 0, i32* %retval, align 4, !phasar.instruction.id !19, ID: 6 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %rc, metadata !29, metadata !23), !dbg !30, !phasar.instruction.id !31, ID: 10 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %rc = alloca i32, align 4, !phasar.instruction.id !16, ID: 3 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %0 = load i32, i32* %rc, align 4, !dbg !32, !phasar.instruction.id !34, ID: 11 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

--- IFDS START RESULT RECORD ---
N: %cmp = icmp ne i32 %0, 0, !dbg !35, !phasar.instruction.id !36, ID: 12 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: %3 = load i32, i32* %rc, align 4, !dbg !83, !phasar.instruction.id !86, ID: 32 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %cmp, label %if.then, label %if.else7, !dbg !37, !phasar.instruction.id !38, ID: 13 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: %cmp1 = icmp ne i8* %1, null, !dbg !43, !phasar.instruction.id !44, ID: 15 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

--- IFDS START RESULT RECORD ---
N: %2 = load i8*, i8** %tainted, align 8, !dbg !47, !phasar.instruction.id !50, ID: 17 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !77, !phasar.instruction.id !80, ID: 30 in function: main
D:	store i32 -1, i32* %retval, align 4, !dbg !77, !phasar.instruction.id !79, ID: 29
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

D:	%cmp1 = icmp ne i8* %1, null, !dbg !43, !phasar.instruction.id !44, ID: 15

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: %cmp3 = icmp ne i8* %2, null, !dbg !51, !phasar.instruction.id !52, ID: 18 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

D:	%2 = load i8*, i8** %tainted, align 8, !dbg !47, !phasar.instruction.id !50, ID: 17

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

--- IFDS START RESULT RECORD ---
N: %5 = load i32, i32* %rc, align 4, !dbg !102, !phasar.instruction.id !103, ID: 41 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !18, ID: 5

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%rc = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: %6 = load i32, i32* %retval, align 4, !dbg !107, !phasar.instruction.id !108, ID: 44 in function: main
D:	store i32 -1, i32* %retval, align 4, !dbg !77, !phasar.instruction.id !79, ID: 29
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%rc = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !18, ID: 5

D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 -1, i32* %retval, align 4, !dbg !69, !phasar.instruction.id !71, ID: 25
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

--- IFDS START RESULT RECORD ---
N: br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19 in function: main
D:	%cmp3 = icmp ne i8* %2, null, !dbg !51, !phasar.instruction.id !52, ID: 18

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	%2 = load i8*, i8** %tainted, align 8, !dbg !47, !phasar.instruction.id !50, ID: 17

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %do.body, !dbg !55, !llvm.loop !57, !phasar.instruction.id !59, ID: 20 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

D:	%2 = load i8*, i8** %tainted, align 8, !dbg !47, !phasar.instruction.id !50, ID: 17

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21 in function: main
D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	%2 = load i8*, i8** %tainted, align 8, !dbg !47, !phasar.instruction.id !50, ID: 17

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %do.end, !dbg !65, !phasar.instruction.id !66, ID: 23 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

--- IFDS START RESULT RECORD ---
N: br label %if.end, !dbg !67, !phasar.instruction.id !68, ID: 24 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !69, !phasar.instruction.id !72, ID: 26 in function: main
D:	store i32 -1, i32* %retval, align 4, !dbg !69, !phasar.instruction.id !71, ID: 25
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

--- IFDS START RESULT RECORD ---
N: store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27 in function: main
D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

--- IFDS START RESULT RECORD ---
N: br label %if.end6, !dbg !75, !phasar.instruction.id !76, ID: 28 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%rc = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: store i32 -1, i32* %retval, align 4, !dbg !77, !phasar.instruction.id !79, ID: 29 in function: main
D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	%1 = load i8*, i8** %tainted, align 8, !dbg !39, !phasar.instruction.id !42, ID: 14

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %if.end11, !dbg !81, !phasar.instruction.id !82, ID: 31 in function: main
D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%rc = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

--- IFDS START RESULT RECORD ---
N: %cmp8 = icmp eq i32 %3, 1, !dbg !87, !phasar.instruction.id !88, ID: 33 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !91, !phasar.instruction.id !94, ID: 36 in function: main
D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

--- IFDS START RESULT RECORD ---
N: %4 = load i8*, i8** %tainted, align 8, !dbg !98, !phasar.instruction.id !99, ID: 38 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

--- IFDS START RESULT RECORD ---
N: br i1 %cmp8, label %if.then9, label %if.end10, !dbg !89, !phasar.instruction.id !90, ID: 34 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 -1, i32* %retval, align 4, !dbg !91, !phasar.instruction.id !93, ID: 35 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: call void @llvm.dbg.declare(metadata i8** %t1, metadata !95, metadata !23), !dbg !96, !phasar.instruction.id !97, ID: 37 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i8* %4, i8** %t1, align 8, !dbg !96, !phasar.instruction.id !100, ID: 39 in function: main
D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	%4 = load i8*, i8** %tainted, align 8, !dbg !98, !phasar.instruction.id !99, ID: 38

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

--- IFDS START RESULT RECORD ---
N: br label %if.end11, !phasar.instruction.id !101, ID: 40 in function: main
D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !18, ID: 5

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	@zero_value = constant i2 0, align 4, ID: -1

--- IFDS START RESULT RECORD ---
N: store i32 %5, i32* %retval, align 4, !dbg !104, !phasar.instruction.id !105, ID: 42 in function: main
D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%rc = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	%5 = load i32, i32* %rc, align 4, !dbg !102, !phasar.instruction.id !103, ID: 41

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !18, ID: 5

D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

--- IFDS START RESULT RECORD ---
N: br label %return, !dbg !104, !phasar.instruction.id !106, ID: 43 in function: main
D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%rc = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !18, ID: 5

D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

--- IFDS START RESULT RECORD ---
N: ret i32 %6, !dbg !107, !phasar.instruction.id !109, ID: 45 in function: main
D:	store i32 -1, i32* %retval, align 4, !dbg !77, !phasar.instruction.id !79, ID: 29
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	store
Writing simple report to: line-numbers.txt
Writing lcov trace to: static-main-1549637044-trace.txt
 i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%rc = alloca i32, align 4, !phasar.instruction.id !16, ID: 3

D:	store i32 1, i32* %rc, align 4, !dbg !73, !phasar.instruction.id !74, ID: 27
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1

D:	call void @llvm.dbg.declare(metadata i32* %a, metadata !60, metadata !23), !dbg !62, !phasar.instruction.id !63, ID: 21

D:	br i1 %cmp3, label %if.then4, label %if.else, !dbg !53, !phasar.instruction.id !54, ID: 19
L:	if.end

D:	%6 = load i32, i32* %retval, align 4, !dbg !107, !phasar.instruction.id !108, ID: 44

D:	br i1 %cmp1, label %if.then2, label %if.else5, !dbg !45, !phasar.instruction.id !46, ID: 16
L:	if.end6

D:	@zero_value = constant i2 0, align 4, ID: -1

D:	%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !26, !phasar.instruction.id !27, ID: 8

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2

D:	store i8* %call, i8** %tainted, align 8, !dbg !24, !phasar.instruction.id !28, ID: 9
A:	%t1 = alloca i8*, align 8, !phasar.instruction.id !18, ID: 5

D:	store i32 0, i32* %a, align 4, !dbg !62, !phasar.instruction.id !64, ID: 22
A:	%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4

D:	store i32 -1, i32* %retval, align 4, !dbg !69, !phasar.instruction.id !71, ID: 25
A:	%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1


