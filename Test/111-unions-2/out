0 2019-Jan-05 22:32:42.853819 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 22:32:42.854503 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 22:32:42.854886 - [INFO] No configuration file is used.
3 2019-Jan-05 22:32:42.854967 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 22:32:42.855071 - [INFO] Check program options for logical errors.
5 2019-Jan-05 22:32:42.855201 - [INFO] Set-up IR database.
6 2019-Jan-05 22:32:42.864081 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 22:32:42.864253 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 22:32:42.864315 - [INFO] 	main.ll
9 2019-Jan-05 22:32:42.864398 - [INFO] Check for chosen entry points.
10 2019-Jan-05 22:32:42.864461 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 22:32:42.864687 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 22:32:42.864751 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 22:32:42.865172 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 22:32:42.865346 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 22:32:42.865899 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 22:32:42.865983 - [INFO] Allocated Types    : 3
17 2019-Jan-05 22:32:42.866053 - [INFO] Allocation Sites   : 4
18 2019-Jan-05 22:32:42.866148 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 22:32:42.866206 - [INFO] Calls Sites        : 4
20 2019-Jan-05 22:32:42.866264 - [INFO] Functions          : 3
21 2019-Jan-05 22:32:42.866322 - [INFO] Globals            : 1
22 2019-Jan-05 22:32:42.866379 - [INFO] Global Pointer     : 1
23 2019-Jan-05 22:32:42.866437 - [INFO] Instructions       : 25
24 2019-Jan-05 22:32:42.866494 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 22:32:42.866552 - [INFO] Store Instructions : 5
26 2019-Jan-05 22:32:42.866610 - [INFO]  
27 2019-Jan-05 22:32:42.866692 - [INFO]   i32
28 2019-Jan-05 22:32:42.866760 - [INFO]   %union.u1 = type { %union.u2 }
29 2019-Jan-05 22:32:42.866823 - [INFO]   i8*
30 2019-Jan-05 22:32:42.867630 - [DEBUG] Analyzing function: main
31 2019-Jan-05 22:32:42.871381 - [INFO] Reconstruct the class hierarchy.
32 2019-Jan-05 22:32:42.871513 - [INFO] Construct type hierarchy
33 2019-Jan-05 22:32:42.871576 - [DEBUG] Analyse types in module: main.ll
34 2019-Jan-05 22:32:42.872013 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2019-Jan-05 22:32:42.872201 - [INFO] Reconstruction of class hierarchy completed.
36 2019-Jan-05 22:32:42.872269 - [INFO] Starting CallGraphAnalysisType: OTF
37 2019-Jan-05 22:32:42.872565 - [DEBUG] Walking in function: main
38 2019-Jan-05 22:32:42.872653 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !17, metadata !34), !dbg !35, !phasar.instruction.id !36, ID: 6
39 2019-Jan-05 22:32:42.873314 - [DEBUG] Found 1 possible target(s)
40 2019-Jan-05 22:32:42.873378 - [DEBUG] Target name: llvm.dbg.declare
41 2019-Jan-05 22:32:42.873471 - [DEBUG] Walking in function: llvm.dbg.declare
42 2019-Jan-05 22:32:42.873537 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2019-Jan-05 22:32:42.873604 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
44 2019-Jan-05 22:32:42.874033 - [DEBUG] Found 1 possible target(s)
45 2019-Jan-05 22:32:42.874145 - [DEBUG] Target name: getenv
46 2019-Jan-05 22:32:42.874239 - [DEBUG] Walking in function: getenv
47 2019-Jan-05 22:32:42.874302 - [DEBUG] Function already visited or only declaration: getenv
48 2019-Jan-05 22:32:42.874370 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !47, metadata !34), !dbg !48, !phasar.instruction.id !49, ID: 12
49 2019-Jan-05 22:32:42.875444 - [DEBUG] Found 1 possible target(s)
50 2019-Jan-05 22:32:42.875511 - [DEBUG] Target name: llvm.dbg.declare
51 2019-Jan-05 22:32:42.875598 - [DEBUG] Walking in function: llvm.dbg.declare
52 2019-Jan-05 22:32:42.875663 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2019-Jan-05 22:32:42.875756 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !60, metadata !34), !dbg !61, !phasar.instruction.id !62, ID: 19
54 2019-Jan-05 22:32:42.876161 - [DEBUG] Found 1 possible target(s)
55 2019-Jan-05 22:32:42.876222 - [DEBUG] Target name: llvm.dbg.declare
56 2019-Jan-05 22:32:42.876303 - [DEBUG] Walking in function: llvm.dbg.declare
57 2019-Jan-05 22:32:42.876366 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2019-Jan-05 22:32:42.876430 - [INFO] Call graph has been constructed
59 2019-Jan-05 22:32:42.876494 - [INFO] Performing analysis: plugin
60 2019-Jan-05 22:32:42.876562 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/MonoIntraEnvironmentVariableTracing/libMonoIntraEnvironmentVariableTracing.so'
61 2019-Jan-05 22:32:42.877370 - [INFO] Solving plugin: monoIntraEnvironmentVariableTracing
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/MonoIntraEnvironmentVariableTracing/libMonoIntraEnvironmentVariableTracing.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %u = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %tainted = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !17, metadata !34), !dbg !35, !phasar.instruction.id !36
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============

Added line number: 25

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !39, !phasar.instruction.id !40
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============

Added line number: 25

  %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !41, !phasar.instruction.id !42
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============

Added line number: 25

  %taint = bitcast %union.u3* %u2 to i8**, !dbg !43, !phasar.instruction.id !44
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============

Added line number: 25

  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============

Added line number: 25
Added line number: 25

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !47, metadata !34), !dbg !48, !phasar.instruction.id !49
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============

Added line number: 25
Added line number: 25

  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
=============

Added line number: 25
Added line number: 25
Added line number: 27

  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
=============

Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27

  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
=============

Added line number: 27
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27

  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
=============

Added line number: 27
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29

  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============

Added line number: 27
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 29

  store double 1.000000e+00, double* %d, align 8, !dbg !58, !phasar.instruction.id !59
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============

Added line number: 27
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 29

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !60, metadata !34), !dbg !61, !phasar.instruction.id !62
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============

Added line number: 27
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 29

  %u5 = bitcast %union.u1* %u to %union.u2*, !dbg !63, !phasar.instruction.id !64
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============

Added line number: 27
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 29

  %u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !65, !phasar.instruction.id !66
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============

Added line number: 27
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 29

  %taint7 = bitcast %union.u3* %u6 to i8**, !dbg !67, !phasar.instruction.id !68
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============

Added line number: 27
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 29

  %1 = load i8*, i8** %taint7, align 8, !dbg !67, !phasar.instruction.id !69
Got load instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============

Added line number: 27
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 29

  store i8* %1, i8** %not_tainted, align 8, !dbg !61, !phasar.instruction.id !70
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============

Added line number: 27
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 29

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !39, !phasar.instruction.id !40
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============


  %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !41, !phasar.instruction.id !42
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============


  %taint = bitcast %union.u3* %u2 to i8**, !dbg !43, !phasar.instruction.id !44
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============


  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============


  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !47, metadata !34), !dbg !48, !phasar.instruction.id !49
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
=============


  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
=============


  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
=============


  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
=============


  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
=============


  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============


  store double 1.000000e+00, double* %d, align 8, !dbg !58, !phasar.instruction.id !59
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============


  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !60, metadata !34), !dbg !61, !phasar.instruction.id !62
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============


  %u5 = bitcast %union.u1* %u to %union.u2*, !dbg !63, !phasar.instruction.id !64
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============


  %u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !65, !phasar.instruction.id !66
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============


  %taint7 = bitcast %union.u3* %u6 to i8**, !dbg !67, !phasar.instruction.id !68
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============


  %1 = load i8*, i8** %taint7, align 8, !dbg !67, !phasar.instruction.id !69
Got load instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============


  store i8* %1, i8** %not_tainted, align 8, !dbg !61, !phasar.instruction.id !70
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
=============


  %tainted = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store double 1.000000e+00, double* %d, align 8, !dbg !58, !phasar.instruction.id !59
Got store instruction
Removed 1 memory locations from facts

  %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !41, !phasar.instruction.id !42
Got operands checking instruction (bitcast)

  store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !39, !phasar.instruction.id !40
Got operands checking instruction (bitcast)

  store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %taint = bitcast %union.u3* %u2 to i8**, !dbg !43, !phasar.instruction.id !44
Got operands checking instruction (bitcast)

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !47, metadata !34), !dbg !48, !phasar.instruction.id !49
Got call instruction

  call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !17, metadata !34), !dbg !35, !phasar.instruction.id !36
Got call instruction

  %u = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)
Adding fact

  %0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52
Got load instruction
Adding load instruction fact

  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55
Got operands checking instruction (bitcast)
Adding fact

  %d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)
Adding fact

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !60, metadata !34), !dbg !61, !phasar.instruction.id !62
Got call instruction

  %u5 = bitcast %union.u1* %u to %union.u2*, !dbg !63, !phasar.instruction.id !64
Got operands checking instruction (bitcast)

  %u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !65, !phasar.instruction.id !66
Got operands checking instruction (bitcast)

  %taint7 = bitcast %union.u3* %u6 to i8**, !dbg !67, !phasar.instruction.id !68
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint7, align 8, !dbg !67, !phasar.instruction.id !69
Got load instruction

  store i8* %1, i8** %not_tainted, align 8, !dbg !61, !phasar.instruction.id !70
Got store instruction
Removed 0 memory locations from facts

  ret i32 0, !dbg !71, !phasar.instruction.id !72worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store double 1.000000e+00, double* %d, align 8, !dbg !58, !phasar.instruction.id !59, ID: 18
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55, ID: 16
%d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57, ID: 17


Instruction:
%u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !41, !phasar.instruction.id !42, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7


Instruction:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
Facts:
store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14


Instruction:
%u1 = bitcast %union.u1* %u to %union.u2*, !dbg !39, !phasar.instruction.id !40, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%not_tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%taint = bitcast %union.u3* %u2 to i8**, !dbg !43, !phasar.instruction.id !44, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !47, metadata !34), !dbg !48, !phasar.instruction.id !49, ID: 12
Facts:
store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !17, metadata !34), !dbg !35, !phasar.instruction.id !36, ID: 6
Facts:
	EMPTY


Instruction:
%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
Facts:
store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7


Instruction:
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
Facts:
store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13


Instruction:
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55, ID: 16
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14


Instruction:
%d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57, ID: 17
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !45, !phasar.instruction.id !46, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55, ID: 16


Instruction:
call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !60, metadata !34), !dbg !61, !phasar.instruction.id !62, ID: 19
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55, ID: 16
%d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57, ID: 17


Instruction:
%u5 = bitcast %union.u1* %u to %union.u2*, !dbg !63, !phasar.instruction.id !64, ID: 20
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55, ID: 16
%d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57, ID: 17


Instruction:
%u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !65, !phasar.instruction.id !66, ID: 21
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.i62 2019-Jan-05 22:32:42.971368 - [INFO] Write results to file
63 2019-Jan-05 22:32:42.971611 - [INFO] Shutdown llvm and the analysis framework.

nstruction.id !55, ID: 16
%d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57, ID: 17


Instruction:
%taint7 = bitcast %union.u3* %u6 to i8**, !dbg !67, !phasar.instruction.id !68, ID: 22
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55, ID: 16
%d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57, ID: 17


Instruction:
%1 = load i8*, i8** %taint7, align 8, !dbg !67, !phasar.instruction.id !69, ID: 23
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55, ID: 16
%d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57, ID: 17


Instruction:
store i8* %1, i8** %not_tainted, align 8, !dbg !61, !phasar.instruction.id !70, ID: 24
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55, ID: 16
%d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57, ID: 17


Instruction:
ret i32 0, !dbg !71, !phasar.instruction.id !72, ID: 25
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !48, !phasar.instruction.id !53, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !37, !phasar.instruction.id !38, ID: 7
%taint3 = bitcast %union.u1* %u to i8**, !dbg !50, !phasar.instruction.id !51, ID: 13
%0 = load i8*, i8** %taint3, align 8, !dbg !50, !phasar.instruction.id !52, ID: 14
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !54, !phasar.instruction.id !55, ID: 16
%d = bitcast %union.u2* %u4 to double*, !dbg !56, !phasar.instruction.id !57, ID: 17


