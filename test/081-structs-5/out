0 2019-Jan-05 14:31:33.425647 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 14:31:33.426064 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 14:31:33.426409 - [INFO] No configuration file is used.
3 2019-Jan-05 14:31:33.426486 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 14:31:33.426576 - [INFO] Check program options for logical errors.
5 2019-Jan-05 14:31:33.426665 - [INFO] Set-up IR database.
6 2019-Jan-05 14:31:33.435307 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 14:31:33.435418 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 14:31:33.435479 - [INFO] 	main.ll
9 2019-Jan-05 14:31:33.435538 - [INFO] Check for chosen entry points.
10 2019-Jan-05 14:31:33.435599 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 14:31:33.435657 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 14:31:33.435717 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 14:31:33.436050 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 14:31:33.436207 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 14:31:33.436773 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 14:31:33.436836 - [INFO] Allocated Types    : 3
17 2019-Jan-05 14:31:33.436900 - [INFO] Allocation Sites   : 5
18 2019-Jan-05 14:31:33.436958 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 14:31:33.437015 - [INFO] Calls Sites        : 5
20 2019-Jan-05 14:31:33.437073 - [INFO] Functions          : 3
21 2019-Jan-05 14:31:33.437130 - [INFO] Globals            : 2
22 2019-Jan-05 14:31:33.437187 - [INFO] Global Pointer     : 2
23 2019-Jan-05 14:31:33.437245 - [INFO] Instructions       : 49
24 2019-Jan-05 14:31:33.437335 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 14:31:33.437393 - [INFO] Store Instructions : 7
26 2019-Jan-05 14:31:33.437451 - [INFO]  
27 2019-Jan-05 14:31:33.437526 - [INFO]   i32
28 2019-Jan-05 14:31:33.437592 - [INFO]   %struct.a = type { i8*, %struct.b }
29 2019-Jan-05 14:31:33.437655 - [INFO]   i8*
30 2019-Jan-05 14:31:33.438472 - [DEBUG] Analyzing function: main
31 2019-Jan-05 14:31:33.459586 - [INFO] Reconstruct the class hierarchy.
32 2019-Jan-05 14:31:33.459673 - [INFO] Construct type hierarchy
33 2019-Jan-05 14:31:33.459736 - [DEBUG] Analyse types in module: main.ll
34 2019-Jan-05 14:31:33.460039 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2019-Jan-05 14:31:33.460202 - [INFO] Reconstruction of class hierarchy completed.
36 2019-Jan-05 14:31:33.460267 - [INFO] Starting CallGraphAnalysisType: OTF
37 2019-Jan-05 14:31:33.461088 - [DEBUG] Walking in function: main
38 2019-Jan-05 14:31:33.461171 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !19, metadata !36), !dbg !37, !phasar.instruction.id !38, ID: 8
39 2019-Jan-05 14:31:33.461683 - [DEBUG] Found 1 possible target(s)
40 2019-Jan-05 14:31:33.461743 - [DEBUG] Target name: llvm.dbg.declare
41 2019-Jan-05 14:31:33.461825 - [DEBUG] Walking in function: llvm.dbg.declare
42 2019-Jan-05 14:31:33.461888 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2019-Jan-05 14:31:33.461951 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.a* %bar, metadata !39, metadata !36), !dbg !40, !phasar.instruction.id !41, ID: 9
44 2019-Jan-05 14:31:33.462382 - [DEBUG] Found 1 possible target(s)
45 2019-Jan-05 14:31:33.462441 - [DEBUG] Target name: llvm.dbg.declare
46 2019-Jan-05 14:31:33.462516 - [DEBUG] Walking in function: llvm.dbg.declare
47 2019-Jan-05 14:31:33.462578 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
48 2019-Jan-05 14:31:33.462642 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
49 2019-Jan-05 14:31:33.463111 - [DEBUG] Found 1 possible target(s)
50 2019-Jan-05 14:31:33.463170 - [DEBUG] Target name: getenv
51 2019-Jan-05 14:31:33.463249 - [DEBUG] Walking in function: getenv
52 2019-Jan-05 14:31:33.463312 - [DEBUG] Function already visited or only declaration: getenv
53 2019-Jan-05 14:31:33.463393 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %a5, metadata !62, metadata !36), !dbg !63, !phasar.instruction.id !64, ID: 21
54 2019-Jan-05 14:31:33.463823 - [DEBUG] Found 1 possible target(s)
55 2019-Jan-05 14:31:33.463882 - [DEBUG] Target name: llvm.dbg.declare
56 2019-Jan-05 14:31:33.463975 - [DEBUG] Walking in function: llvm.dbg.declare
57 2019-Jan-05 14:31:33.464038 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2019-Jan-05 14:31:33.464102 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %b11, metadata !76, metadata !36), !dbg !77, !phasar.instruction.id !78, ID: 29
59 2019-Jan-05 14:31:33.464531 - [DEBUG] Found 1 possible target(s)
60 2019-Jan-05 14:31:33.464590 - [DEBUG] Target name: llvm.dbg.declare
61 2019-Jan-05 14:31:33.464665 - [DEBUG] Walking in function: llvm.dbg.declare
62 2019-Jan-05 14:31:33.464728 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
63 2019-Jan-05 14:31:33.464793 - [INFO] Call graph has been constructed
64 2019-Jan-05 14:31:33.464855 - [INFO] Performing analysis: plugin
65 2019-Jan-05 14:31:33.464921 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
66 2019-Jan-05 14:31:33.465427 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %bar = alloca %struct.a, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a5 = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %b11 = alloca i8*, align 8, !phasar.instruction.id !17
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !18
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !19, metadata !36), !dbg !37, !phasar.instruction.id !38
Got call instruction
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata %struct.a* %bar, metadata !39, metadata !36), !dbg !40, !phasar.instruction.id !41
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
=============

Added line number: 23

  %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
=============

Added line number: 23

  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
=============

Added line number: 23
Added line number: 23

  %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
=============

Added line number: 23
Added line number: 23

  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 23
Added line number: 23
Added line number: 24

  %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 23
Added line number: 23
Added line number: 24

  %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 23
Added line number: 23
Added line number: 24

  %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !55, !phasar.instruction.id !56
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 23
Added line number: 23
Added line number: 24

  %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !57, !phasar.instruction.id !58
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 23
Added line number: 23
Added line number: 24

  %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !55, !phasar.instruction.id !59
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 23
Added line number: 23
Added line number: 24

  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24

  call void @llvm.dbg.declare(metadata i8** %a5, metadata !62, metadata !36), !dbg !63, !phasar.instruction.id !64
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24

  %b6 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !65, !phasar.instruction.id !66
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24

  %a7 = getelementptr inbounds %struct.b, %struct.b* %b6, i32 0, i32 0, !dbg !67, !phasar.instruction.id !68
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24

  %arrayidx8 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a7, i64 0, i64 0, !dbg !69, !phasar.instruction.id !70
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24

  %a9 = getelementptr inbounds %struct.c, %struct.c* %arrayidx8, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24

  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a9, i64 0, i64 0, !dbg !69, !phasar.instruction.id !73
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24

  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26

  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  call void @llvm.dbg.declare(metadata i8** %b11, metadata !76, metadata !36), !dbg !77, !phasar.instruction.id !78
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %b12 = getelementptr inbounds %struct.a, %struct.a* %bar, i32 0, i32 1, !dbg !79, !phasar.instruction.id !80
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %a13 = getelementptr inbounds %struct.b, %struct.b* %b12, i32 0, i32 0, !dbg !81, !phasar.instruction.id !82
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %arrayidx14 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a13, i64 0, i64 0, !dbg !83, !phasar.instruction.id !84
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %a15 = getelementptr inbounds %struct.c, %struct.c* %arrayidx14, i32 0, i32 0, !dbg !85, !phasar.instruction.id !86
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %arrayidx16 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a15, i64 0, i64 0, !dbg !83, !phasar.instruction.id !87
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %2 = load i8*, i8** %arrayidx16, align 8, !dbg !83, !phasar.instruction.id !88
Got load instruction
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  store i8* %2, i8** %b11, align 8, !dbg !77, !phasar.instruction.id !89
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %b17 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !90, !phasar.instruction.id !91
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %a18 = getelementptr inbounds %struct.b, %struct.b* %b17, i32 0, i32 0, !dbg !92, !phasar.instruction.id !93
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %arrayidx19 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a18, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %a20 = getelementptr inbounds %struct.c, %struct.c* %arrayidx19, i32 0, i32 0, !dbg !96, !phasar.instruction.id !97
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %arrayidx21 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a20, i64 0, i64 0, !dbg !94, !phasar.instruction.id !98
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 24
Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx21, align 8, !dbg !99, !phasar.instruction.id !100
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %b22 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !101, !phasar.instruction.id !102
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %a23 = getelementptr inbounds %struct.b, %struct.b* %b22, i32 0, i32 0, !dbg !103, !phasar.instruction.id !104
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %arrayidx24 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a23, i64 0, i64 0, !dbg !105, !phasar.instruction.id !106
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %a25 = getelementptr inbounds %struct.c, %struct.c* %arrayidx24, i32 0, i32 0, !dbg !107, !phasar.instruction.id !108
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %arrayidx26 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a25, i64 0, i64 0, !dbg !105, !phasar.instruction.id !109
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  %3 = load i8*, i8** %arrayidx26, align 8, !dbg !105, !phasar.instruction.id !110
Got load instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============

Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26
Added line number: 26

  store i8* %3, i8** %a5, align 8, !dbg !111, !phasar.instruction.id !112
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
=============

Added line number: 23
Added line number: 23
Added line number: 24
Added line number: 26

  %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
=============


  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
=============


  %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
=============


  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !55, !phasar.instruction.id !56
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !57, !phasar.instruction.id !58
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !55, !phasar.instruction.id !59
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  call void @llvm.dbg.declare(metadata i8** %a5, metadata !62, metadata !36), !dbg !63, !phasar.instruction.id !64
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %b6 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !65, !phasar.instruction.id !66
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %a7 = getelementptr inbounds %struct.b, %struct.b* %b6, i32 0, i32 0, !dbg !67, !phasar.instruction.id !68
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %arrayidx8 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a7, i64 0, i64 0, !dbg !69, !phasar.instruction.id !70
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %a9 = getelementptr inbounds %struct.c, %struct.c* %arrayidx8, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a9, i64 0, i64 0, !dbg !69, !phasar.instruction.id !73
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
=============


  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
=============


  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  call void @llvm.dbg.declare(metadata i8** %b11, metadata !76, metadata !36), !dbg !77, !phasar.instruction.id !78
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %b12 = getelementptr inbounds %struct.a, %struct.a* %bar, i32 0, i32 1, !dbg !79, !phasar.instruction.id !80
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %a13 = getelementptr inbounds %struct.b, %struct.b* %b12, i32 0, i32 0, !dbg !81, !phasar.instruction.id !82
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %arrayidx14 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a13, i64 0, i64 0, !dbg !83, !phasar.instruction.id !84
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %a15 = getelementptr inbounds %struct.c, %struct.c* %arrayidx14, i32 0, i32 0, !dbg !85, !phasar.instruction.id !86
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %arrayidx16 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a15, i64 0, i64 0, !dbg !83, !phasar.instruction.id !87
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %2 = load i8*, i8** %arrayidx16, align 8, !dbg !83, !phasar.instruction.id !88
Got load instruction
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  store i8* %2, i8** %b11, align 8, !dbg !77, !phasar.instruction.id !89
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %b17 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !90, !phasar.instruction.id !91
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %a18 = getelementptr inbounds %struct.b, %struct.b* %b17, i32 0, i32 0, !dbg !92, !phasar.instruction.id !93
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %arrayidx19 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a18, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %a20 = getelementptr inbounds %struct.c, %struct.c* %arrayidx19, i32 0, i32 0, !dbg !96, !phasar.instruction.id !97
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %arrayidx21 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a20, i64 0, i64 0, !dbg !94, !phasar.instruction.id !98
Dumping facts
=============
  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx21, align 8, !dbg !99, !phasar.instruction.id !100
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %b22 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !101, !phasar.instruction.id !102
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %a23 = getelementptr inbounds %struct.b, %struct.b* %b22, i32 0, i32 0, !dbg !103, !phasar.instruction.id !104
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %arrayidx24 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a23, i64 0, i64 0, !dbg !105, !phasar.instruction.id !106
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %a25 = getelementptr inbounds %struct.c, %struct.c* %arrayidx24, i32 0, i32 0, !dbg !107, !phasar.instruction.id !108
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %arrayidx26 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a25, i64 0, i64 0, !dbg !105, !phasar.instruction.id !109
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  %3 = load i8*, i8** %arrayidx26, align 8, !dbg !105, !phasar.instruction.id !110
Got load instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
=============


  store i8* %3, i8** %a5, align 8, !dbg !111, !phasar.instruction.id !112
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
=============


  call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !19, metadata !36), !dbg !37, !phasar.instruction.id !38
Got call instruction

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45

  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !18
Got store instruction
Removed 0 memory locations from facts

  %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49

  %b11 = alloca i8*, align 8, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %a5 = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %bar = alloca %struct.a, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata %struct.a* %bar, metadata !39, metadata !36), !dbg !40, !phasar.instruction.id !41
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %a5, metadata !62, metadata !36), !dbg !63, !phasar.instruction.id !64
Got call instruction

  %0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50
Got load instruction
Adding load instruction fact

  %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52

  %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54

  %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !55, !phasar.instruction.id !56

  %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !57, !phasar.instruction.id !58

  %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !55, !phasar.instruction.id !59

  %b6 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !65, !phasar.instruction.id !66

  %a7 = getelementptr inbounds %struct.b, %struct.b* %b6, i32 0, i32 0, !dbg !67, !phasar.instruction.id !68

  %arrayidx8 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a7, i64 0, i64 0, !dbg !69, !phasar.instruction.id !70

  %a9 = getelementptr inbounds %struct.c, %struct.c* %arrayidx8, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72

  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a9, i64 0, i64 0, !dbg !69, !phasar.instruction.id !73

  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74
Got load instruction
Adding load instruction fact

  store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  call void @llvm.dbg.declare(metadata i8** %b11, metadata !76, metadata !36), !dbg !77, !phasar.instruction.id !78
Got call instruction

  %b12 = getelementptr inbounds %struct.a, %struct.a* %bar, i32 0, i32 1, !dbg !79, !phasar.instruction.id !80

  %a13 = getelementptr inbounds %struct.b, %struct.b* %b12, i32 0, i32 0, !dbg !81, !phasar.instruction.id !82

  %arrayidx14 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a13, i64 0, i64 0, !dbg !83, !phasar.instruction.id !84

  %a15 = getelementptr inbounds %struct.c, %struct.c* %arrayidx14, i32 0, i32 0, !dbg !85, !phasar.instruction.id !86

  %arrayidx16 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a15, i64 0, i64 0, !dbg !83, !phasar.instruction.id !87

  %2 = load i8*, i8** %arrayidx16, align 8, !dbg !83, !phasar.instruction.id !88
Got load instruction

  store i8* %2, i8** %b11, align 8, !dbg !77, !phasar.instruction.id !89
Got store instruction
Removed 0 memory locations from facts

  %b17 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !90, !phasar.instruction.id !91

  %a18 = getelementptr inbounds %struct.b, %struct.b* %b17, i32 0, i32 0, !dbg !92, !phasar.instruction.id !93

  %arrayidx19 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a18, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95

  %a20 = getelementptr inbounds %struct.c, %struct.c* %arrayidx19, i32 0, i32 0, !dbg !96, !phasar.instruction.id !97

  %arrayidx21 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a20, i64 0, i64 0, !dbg !94, !phasar.instruction.id !98

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx21, align 8, !dbg !99, !phasar.instruction.id !100
Got store instruction
Removed 1 memory locations from facts

  %b22 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !101, !phasar.instruction.id !102

  %a23 = getelementptr inbounds %struct.b, %struct.b* %b22, i32 0, i32 0, !dbg !103, !phasar.instruction.id !104

  %arrayidx24 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a23, i64 0, i64 0, !dbg !105, !phasar.instruction.id !106

  %a25 = getelementptr inbounds %struct.c, %struct.c* %arrayidx24, i32 0, i32 0, !dbg !107, !phasar.instruction.id !108

  %arrayidx26 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a25, i64 0, i64 0, !dbg !105, !phasar.instruction.id !109

  %3 = load i8*, i8** %arrayidx26, align 8, !dbg !105, !phasar.instruction.id !110
Got load instruction

  store i8* %3, i8** %a5, align 8, !dbg !111, !phasar.instruction.id !112
Got store instruction
Removed 1 memory locations from facts

  ret i32 0, !dbg !113, !phasar.instruction.id !114worklist size: 48
worklist size: 47
worklist size: 46
worklist size: 45
worklist size: 44
worklist size: 43
worklist size: 42
worklist size: 41
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 40
worklist size: 39
worklist size: 38
worklist size: 37
worklist size: 36
worklist size: 35
worklist size: 34
worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !19, metadata !36), !dbg !37, !phasar.instruction.id !38, ID: 8
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10


Instruction:
%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7
Facts:
	EMPTY


Instruction:
%a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !48, !phasar.instruction.id !49, ID: 13
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10


Instruction:
%b11 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%a5 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%bar = alloca %struct.a, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata %struct.a* %bar, metadata !39, metadata !36), !dbg !40, !phasar.instruction.id !41, ID: 9
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %a5, metadata !62, metadata !36), !dbg !63, !phasar.instruction.id !64, ID: 21
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10


Instruction:
%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52, ID: 15
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54, ID: 16
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !55, !phasar.instruction.id !56, ID: 17
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !57, !phasar.instruction.id !58, ID: 18
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a3, i64 0, i64 0, !dbg !55, !phasar.instruction.id !59, ID: 19
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%b6 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !65, !phasar.instruction.id !66, ID: 22
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%a7 = getelementptr inbounds %struct.b, %struct.b* %b6, i32 0, i32 0, !dbg !67, !phasar.instruction.id !68, ID: 23
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%arrayidx8 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a7, i64 0, i64 0, !dbg !69, !phasar.instruction.id !70, ID: 24
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%a9 = getelementptr inbounds %struct.c, %struct.c* %arrayidx8, i32 0, i32 0, !dbg !71, !phasar.instruction.id !72, ID: 25
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a9, i64 0, i64 0, !dbg !69, !phasar.instruction.id !73, ID: 26
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14


Instruction:
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27


Instruction:
call void @llvm.dbg.declare(metadata i8** %b11, metadata !76, metadata !36), !dbg !77, !phasar.instruction.id !78, ID: 29
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%b12 = getelementptr inbounds %struct.a, %struct.a* %bar, i32 0, i32 1, !dbg !79, !phasar.instruction.id !80, ID: 30
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%a13 = getelementptr inbounds %struct.b, %struct.b* %b12, i32 0, i32 0, !dbg !81, !phasar.instruction.id !82, ID: 31
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%arrayidx14 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a13, i64 0, i64 0, !dbg !83, !phasar.instruction.id !84, ID: 32
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%a15 = getelementptr inbounds %struct.c, %struct.c* %arrayidx14, i32 0, i32 0, !dbg !85, !phasar.instruction.id !86, ID: 33
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%arrayidx16 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a15, i64 0, i64 0, !dbg !83, !phasar.instruction.id !87, ID: 34
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%2 = load i8*, i8** %arrayidx16, align 8, !dbg !83, !phasar.instruction.id !88, ID: 35
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
store i8* %2, i8** %b11, align 8, !dbg !77, !phasar.instruction.id !89, ID: 36
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%b17 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !90, !phasar.instruction.id !91, ID: 37
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%a18 = getelementptr inbounds %struct.b, %struct.b* %b17, i32 0, i32 0, !dbg !92, !phasar.instruction.id !93, ID: 38
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%arrayidx19 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a18, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95, ID: 39
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%a20 = getelementptr inbounds %struct.c, %struct.c* %arrayidx19, i32 0, i32 0, !dbg !96, !phasar.instruction.id !97, ID: 40
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%arrayidx21 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a20, i64 0, i64 0, !dbg !94, !phasar.instruction.id !98, ID: 41
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx21, align 8, !dbg !99, !phasar.instruction.id !100, ID: 42
Facts:
store i8* %0, i8** %arrayidx4, align 8, !dbg !60, !phasar.instruction.id !61, ID: 20
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%b22 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !101, !phasar.instruction.id !102, ID: 43
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%a23 = getelementptr inbounds %struct.b, %struct.b* %b22, i32 0, i32 0, !dbg !103, !phasar.instruction.id !104, ID: 44
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%arrayidx24 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a23, i64 0, i64 0, !dbg !105, !phasar.instruction.id !106, ID: 45
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%a25 = getelementptr inbounds %struct.c, %struct.c* %arrayidx24, i32 0, i32 0, !dbg !107, !phasar.instruction.id !108, ID: 46
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%arrayidx26 = getelementptr inbounds [2 x i8*], [2 x i8*]* %a25, i64 0, i64 0, !dbg !105, !phasar.instruction.id !109, ID: 47
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
%3 = load i8*, i8** %arrayidx26, align 8, !dbg !105, !phasar.instruction.id !110, ID: 48
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, align 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
store i8* %3, i8** %a5, align 8, !dbg !111, !phasar.instruction.id !112, ID: 49
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27
store i8* %1, i8** %a5, a67 2019-Jan-05 14:31:33.733009 - [INFO] Write results to file
68 2019-Jan-05 14:31:33.733232 - [INFO] Shutdown llvm and the analysis framework.

lign 8, !dbg !63, !phasar.instruction.id !75, ID: 28


Instruction:
ret i32 0, !dbg !113, !phasar.instruction.id !114, ID: 50
Facts:
store i8* %call, i8** %a, align 8, !dbg !46, !phasar.instruction.id !47, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 10
%0 = load i8*, i8** %a1, align 8, !dbg !48, !phasar.instruction.id !50, ID: 14
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !69, !phasar.instruction.id !74, ID: 27


