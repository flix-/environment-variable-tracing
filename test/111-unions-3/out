0 2018-Dec-30 13:54:55.364991 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-30 13:54:55.365405 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-30 13:54:55.365806 - [INFO] No configuration file is used.
3 2018-Dec-30 13:54:55.365895 - [INFO] Program options have been successfully parsed.
4 2018-Dec-30 13:54:55.365998 - [INFO] Check program options for logical errors.
5 2018-Dec-30 13:54:55.366087 - [INFO] Set-up IR database.
6 2018-Dec-30 13:54:55.373209 - [INFO] Constructed the analysis controller.
7 2018-Dec-30 13:54:55.373323 - [INFO] Found the following IR files for this project: 
8 2018-Dec-30 13:54:55.373385 - [INFO] 	main.ll
9 2018-Dec-30 13:54:55.373444 - [INFO] Check for chosen entry points.
10 2018-Dec-30 13:54:55.373505 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-30 13:54:55.373563 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-30 13:54:55.373623 - [INFO] Preprocess module: main.ll
13 2018-Dec-30 13:54:55.373964 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-30 13:54:55.374104 - [INFO] Running ValueAnnotationPass
15 2018-Dec-30 13:54:55.374519 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-30 13:54:55.374582 - [INFO] Allocated Types    : 3
17 2018-Dec-30 13:54:55.374646 - [INFO] Allocation Sites   : 5
18 2018-Dec-30 13:54:55.374704 - [INFO] Basic Blocks       : 1
19 2018-Dec-30 13:54:55.374761 - [INFO] Calls Sites        : 5
20 2018-Dec-30 13:54:55.374818 - [INFO] Functions          : 3
21 2018-Dec-30 13:54:55.374875 - [INFO] Globals            : 1
22 2018-Dec-30 13:54:55.374932 - [INFO] Global Pointer     : 1
23 2018-Dec-30 13:54:55.374989 - [INFO] Instructions       : 34
24 2018-Dec-30 13:54:55.375046 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-30 13:54:55.375103 - [INFO] Store Instructions : 6
26 2018-Dec-30 13:54:55.375160 - [INFO]  
27 2018-Dec-30 13:54:55.375229 - [INFO]   i32
28 2018-Dec-30 13:54:55.375294 - [INFO]   %union.u1 = type { %union.u2 }
29 2018-Dec-30 13:54:55.375357 - [INFO]   i8*
30 2018-Dec-30 13:54:55.375979 - [DEBUG] Analyzing function: main
31 2018-Dec-30 13:54:55.380804 - [INFO] Reconstruct the class hierarchy.
32 2018-Dec-30 13:54:55.380879 - [INFO] Construct type hierarchy
33 2018-Dec-30 13:54:55.380939 - [DEBUG] Analyse types in module: main.ll
34 2018-Dec-30 13:54:55.381196 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2018-Dec-30 13:54:55.381357 - [INFO] Reconstruction of class hierarchy completed.
36 2018-Dec-30 13:54:55.381422 - [INFO] Starting CallGraphAnalysisType: OTF
37 2018-Dec-30 13:54:55.381742 - [DEBUG] Walking in function: main
38 2018-Dec-30 13:54:55.381822 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !18, metadata !35), !dbg !36, !phasar.instruction.id !37, ID: 7
39 2018-Dec-30 13:54:55.382272 - [DEBUG] Found 1 possible target(s)
40 2018-Dec-30 13:54:55.382333 - [DEBUG] Target name: llvm.dbg.declare
41 2018-Dec-30 13:54:55.382415 - [DEBUG] Walking in function: llvm.dbg.declare
42 2018-Dec-30 13:54:55.382478 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2018-Dec-30 13:54:55.382542 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %union.u1* %u2, metadata !38, metadata !35), !dbg !39, !phasar.instruction.id !40, ID: 8
44 2018-Dec-30 13:54:55.382889 - [DEBUG] Found 1 possible target(s)
45 2018-Dec-30 13:54:55.382948 - [DEBUG] Target name: llvm.dbg.declare
46 2018-Dec-30 13:54:55.383023 - [DEBUG] Walking in function: llvm.dbg.declare
47 2018-Dec-30 13:54:55.383085 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
48 2018-Dec-30 13:54:55.383149 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
49 2018-Dec-30 13:54:55.383534 - [DEBUG] Found 1 possible target(s)
50 2018-Dec-30 13:54:55.383593 - [DEBUG] Target name: getenv
51 2018-Dec-30 13:54:55.383673 - [DEBUG] Walking in function: getenv
52 2018-Dec-30 13:54:55.383735 - [DEBUG] Function already visited or only declaration: getenv
53 2018-Dec-30 13:54:55.383819 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !66, metadata !35), !dbg !67, !phasar.instruction.id !68, ID: 22
54 2018-Dec-30 13:54:55.384160 - [DEBUG] Found 1 possible target(s)
55 2018-Dec-30 13:54:55.384219 - [DEBUG] Target name: llvm.dbg.declare
56 2018-Dec-30 13:54:55.384293 - [DEBUG] Walking in function: llvm.dbg.declare
57 2018-Dec-30 13:54:55.384356 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2018-Dec-30 13:54:55.384420 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !79, metadata !35), !dbg !80, !phasar.instruction.id !81, ID: 29
59 2018-Dec-30 13:54:55.384760 - [DEBUG] Found 1 possible target(s)
60 2018-Dec-30 13:54:55.384819 - [DEBUG] Target name: llvm.dbg.declare
61 2018-Dec-30 13:54:55.384893 - [DEBUG] Walking in function: llvm.dbg.declare
62 2018-Dec-30 13:54:55.384956 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
63 2018-Dec-30 13:54:55.385018 - [INFO] Call graph has been constructed
64 2018-Dec-30 13:54:55.385081 - [INFO] Performing analysis: plugin
65 2018-Dec-30 13:54:55.385146 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
66 2018-Dec-30 13:54:55.385663 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %u = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %u2 = alloca %union.u1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %tainted2 = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction

  call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !18, metadata !35), !dbg !36, !phasar.instruction.id !37
Got call instruction

  call void @llvm.dbg.declare(metadata %union.u1* %u2, metadata !38, metadata !35), !dbg !39, !phasar.instruction.id !40
Got call instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42
Got call instruction
Adding call instruction fact
Adding line: 27

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !43, !phasar.instruction.id !44
Got operands checking instruction (bitcast)
Adding line: 27

  %u3 = bitcast %union.u2* %u1 to %union.u3*, !dbg !45, !phasar.instruction.id !46
Got operands checking instruction (bitcast)
Adding line: 27

  %taint = bitcast %union.u3* %u3 to i8**, !dbg !47, !phasar.instruction.id !48
Got operands checking instruction (bitcast)
Adding line: 27

  store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50
Got store instruction
Adding store instruction
Adding line: 27
Adding line: 27

  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52
Got operands checking instruction (bitcast)
Adding line: 27
Adding line: 27

  %u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)
Adding line: 27
Adding line: 27

  %taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56
Got operands checking instruction (bitcast)
Adding line: 27
Adding line: 27

  %0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57
Got load instruction
Adding load instruction fact
Adding line: 27
Adding line: 27
Adding line: 28

  %u7 = bitcast %union.u1* %u2 to %union.u2*, !dbg !58, !phasar.instruction.id !59
Got operands checking instruction (bitcast)
Adding line: 27
Adding line: 27
Adding line: 28

  %u8 = bitcast %union.u2* %u7 to %union.u3*, !dbg !60, !phasar.instruction.id !61
Got operands checking instruction (bitcast)
Adding line: 27
Adding line: 27
Adding line: 28

  %taint9 = bitcast %union.u3* %u8 to i8**, !dbg !62, !phasar.instruction.id !63
Got operands checking instruction (bitcast)
Adding line: 27
Adding line: 27
Adding line: 28

  store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65
Got store instruction
Adding store instruction
Adding line: 28
Adding line: 27
Adding line: 27
Adding line: 28

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !66, metadata !35), !dbg !67, !phasar.instruction.id !68
Got call instruction
Adding line: 28
Adding line: 27
Adding line: 27
Adding line: 28

  %taint10 = bitcast %union.u1* %u to i8**, !dbg !69, !phasar.instruction.id !70
Got operands checking instruction (bitcast)
Adding line: 28
Adding line: 27
Adding line: 27
Adding line: 28

  %1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71
Got load instruction
Adding load instruction fact
Adding line: 28
Adding line: 27
Adding line: 27
Adding line: 28
Adding line: 30

  store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72
Got store instruction
Adding store instruction
Adding line: 30
Adding line: 28
Adding line: 27
Adding line: 27
Adding line: 28
Adding line: 30

  %u11 = bitcast %union.u1* %u to %union.u2*, !dbg !73, !phasar.instruction.id !74
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 28
Adding line: 27
Adding line: 27
Adding line: 28
Adding line: 30

  %d = bitcast %union.u2* %u11 to double*, !dbg !75, !phasar.instruction.id !76
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 28
Adding line: 27
Adding line: 27
Adding line: 28
Adding line: 30

  store double 1.000000e+00, double* %d, align 8, !dbg !77, !phasar.instruction.id !78
Got store instruction
Removing store instruction
Adding line: 30
Adding line: 28
Adding line: 27
Adding line: 28
Adding line: 30

  call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !79, metadata !35), !dbg !80, !phasar.instruction.id !81
Got call instruction
Adding line: 30
Adding line: 28
Adding line: 27
Adding line: 28
Adding line: 30

  %u12 = bitcast %union.u1* %u2 to %union.u2*, !dbg !82, !phasar.instruction.id !83
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 28
Adding line: 27
Adding line: 28
Adding line: 30

  %taint13 = bitcast %union.u2* %u12 to i8**, !dbg !84, !phasar.instruction.id !85
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 28
Adding line: 27
Adding line: 28
Adding line: 30

  %2 = load i8*, i8** %taint13, align 8, !dbg !84, !phasar.instruction.id !86
Got load instruction
Adding load instruction fact
Adding line: 30
Adding line: 28
Adding line: 27
Adding line: 28
Adding line: 30
Adding line: 34

  store i8* %2, i8** %tainted2, align 8, !dbg !80, !phasar.instruction.id !87
Got store instruction
Adding store instruction
Adding line: 30
Adding line: 28
Adding line: 27
Adding line: 28
Adding line: 30
Adding line: 34
Adding line: 34

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !43, !phasar.instruction.id !44
Got operands checking instruction (bitcast)

  %u3 = bitcast %union.u2* %u1 to %union.u3*, !dbg !45, !phasar.instruction.id !46
Got operands checking instruction (bitcast)

  %taint = bitcast %union.u3* %u3 to i8**, !dbg !47, !phasar.instruction.id !48
Got operands checking instruction (bitcast)

  store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50
Got store instruction
Adding store instruction

  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52
Got operands checking instruction (bitcast)

  %u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)

  %taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57
Got load instruction
Adding load instruction fact

  %u7 = bitcast %union.u1* %u2 to %union.u2*, !dbg !58, !phasar.instruction.id !59
Got operands checking instruction (bitcast)

  %u8 = bitcast %union.u2* %u7 to %union.u3*, !dbg !60, !phasar.instruction.id !61
Got operands checking instruction (bitcast)

  %taint9 = bitcast %union.u3* %u8 to i8**, !dbg !62, !phasar.instruction.id !63
Got operands checking instruction (bitcast)

  store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !66, metadata !35), !dbg !67, !phasar.instruction.id !68
Got call instruction

  %taint10 = bitcast %union.u1* %u to i8**, !dbg !69, !phasar.instruction.id !70
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71
Got load instruction
Adding load instruction fact

  store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72
Got store instruction
Adding store instruction

  %u11 = bitcast %union.u1* %u to %union.u2*, !dbg !73, !phasar.instruction.id !74
Got operands checking instruction (bitcast)

  %d = bitcast %union.u2* %u11 to double*, !dbg !75, !phasar.instruction.id !76
Got operands checking instruction (bitcast)

  store double 1.000000e+00, double* %d, align 8, !dbg !77, !phasar.instruction.id !78
Got store instruction
Removing store instruction

  call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !79, metadata !35), !dbg !80, !phasar.instruction.id !81
Got call instruction

  %u12 = bitcast %union.u1* %u2 to %union.u2*, !dbg !82, !phasar.instruction.id !83
Got operands checking instruction (bitcast)

  %taint13 = bitcast %union.u2* %u12 to i8**, !dbg !84, !phasar.instruction.id !85
Got operands checking instruction (bitcast)

  %2 = load i8*, i8** %taint13, align 8, !dbg !84, !phasar.instruction.id !86
Got load instruction
Adding load instruction fact

  store i8* %2, i8** %tainted2, align 8, !dbg !80, !phasar.instruction.id !87
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !18, metadata !35), !dbg !36, !phasar.instruction.id !37
Got call instruction

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72
Got store instruction
Adding store instruction

  store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65
Got store instruction
Adding store instruction

  store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50
Got store instruction
Adding store instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction

  %tainted2 = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %u2 = alloca %union.u1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %u = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata %union.u1* %u2, metadata !38, metadata !35), !dbg !39, !phasar.instruction.id !40
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !66, metadata !35), !dbg !67, !phasar.instruction.id !68
Got call instruction

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !43, !phasar.instruction.id !44
Got operands checking instruction (bitcast)

  %u3 = bitcast %union.u2* %u1 to %union.u3*, !dbg !45, !phasar.instruction.id !46
Got operands checking instruction (bitcast)

  %taint = bitcast %union.u3* %u3 to i8**, !dbg !47, !phasar.instruction.id !48
Got operands checking instruction (bitcast)

  %u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52
Got operands checking instruction (bitcast)

  %u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)

  %taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57
Got load instruction
Adding load instruction fact

  %u7 = bitcast %union.u1* %u2 to %union.u2*, !dbg !58, !phasar.instruction.id !59
Got operands checking instruction (bitcast)

  %u8 = bitcast %union.u2* %u7 to %union.u3*, !dbg !60, !phasar.instruction.id !61
Got operands checking instruction (bitcast)

  %taint9 = bitcast %union.u3* %u8 to i8**, !dbg !62, !phasar.instruction.id !63
Got operands checking instruction (bitcast)

  %taint10 = bitcast %union.u1* %u to i8**, !dbg !69, !phasar.instruction.id !70
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71
Got load instruction
Adding load instruction fact

  %u11 = bitcast %union.u1* %u to %union.u2*, !dbg !73, !phasar.instruction.id !74
Got operands checking instruction (bitcast)

  %d = bitcast %union.u2* %u11 to double*, !dbg !75, !phasar.instruction.id !76
Got operands checking instruction (bitcast)

  store double 1.000000e+00, double* %d, align 8, !dbg !77, !phasar.instruction.id !78
Got store instruction
Removing store instruction

  call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !79, metadata !35), !dbg !80, !phasar.instruction.id !81
Got call instruction

  %u12 = bitcast %union.u1* %u2 to %union.u2*, !dbg !82, !phasar.instruction.id !83
Got operands checking instruction (bitcast)

  %taint13 = bitcast %union.u2* %u12 to i8**, !dbg !84, !phasar.instruction.id !85
Got operands checking instruction (bitcast)

  %2 = load i8*, i8** %taint13, align 8, !dbg !84, !phasar.instruction.id !86
Got load instruction
Adding load instruction fact

  store i8* %2, i8** %tainted2, align 8, !dbg !80, !phasar.instruction.id !87
Got store instruction
Adding store instruction

  ret i32 0, !dbg !88, !phasar.instruction.id !89worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !18, metadata !35), !dbg !36, !phasar.instruction.id !37, ID: 7
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
Facts:
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24


Instruction:
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
Facts:
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%tainted2 = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%u2 = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata %union.u1* %u2, metadata !38, metadata !35), !dbg !39, !phasar.instruction.id !40, ID: 8
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !66, metadata !35), !dbg !67, !phasar.instruction.id !68, ID: 22
Facts:
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%u1 = bitcast %union.u1* %u to %union.u2*, !dbg !43, !phasar.instruction.id !44, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9


Instruction:
%u3 = bitcast %union.u2* %u1 to %union.u3*, !dbg !45, !phasar.instruction.id !46, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9


Instruction:
%taint = bitcast %union.u3* %u3 to i8**, !dbg !47, !phasar.instruction.id !48, ID: 12
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9


Instruction:
%u4 = bitcast %union.u1* %u to %union.u2*, !dbg !51, !phasar.instruction.id !52, ID: 14
Facts:
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9


Instruction:
%u5 = bitcast %union.u2* %u4 to %union.u3*, !dbg !53, !phasar.instruction.id !54, ID: 15
Facts:
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9


Instruction:
%taint6 = bitcast %union.u3* %u5 to i8**, !dbg !55, !phasar.instruction.id !56, ID: 16
Facts:
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9


Instruction:
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
Facts:
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9


Instruction:
%u7 = bitcast %union.u1* %u2 to %union.u2*, !dbg !58, !phasar.instruction.id !59, ID: 18
Facts:
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%u8 = bitcast %union.u2* %u7 to %union.u3*, !dbg !60, !phasar.instruction.id !61, ID: 19
Facts:
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%taint9 = bitcast %union.u3* %u8 to i8**, !dbg !62, !phasar.instruction.id !63, ID: 20
Facts:
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%taint10 = bitcast %union.u1* %u to i8**, !dbg !69, !phasar.instruction.id !70, ID: 23
Facts:
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24
Facts:
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%u11 = bitcast %union.u1* %u to %union.u2*, !dbg !73, !phasar.instruction.id !74, ID: 26
Facts:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24


Instruction:
%d = bitcast %union.u2* %u11 to double*, !dbg !75, !phasar.instruction.id !76, ID: 27
Facts:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24


Instruction:
store double 1.000000e+00, double* %d, align 8, !dbg !77, !phasar.instruction.id !78, ID: 28
Facts:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !49, !phasar.instruction.id !50, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted2, metadata !79, metadata !35), !dbg !80, !phasar.instruction.id !81, ID: 29
Facts:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24


Instruction:
%u12 = bitcast %union.u1* %u2 to %union.u2*, !dbg !82, !phasar.instruction.id !83, ID: 30
Facts:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24


Instruction:
%taint13 = bitcast %union.u2* %u12 to i8**, !dbg !84, !phasar.instruction.id !85, ID: 31
Facts:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24


Instruction:
%2 = load i8*, i8** %taint13, align 8, !dbg !84, !phasar.instruction.id !86, ID: 32
Facts:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !667 2018-Dec-30 13:54:55.449411 - [INFO] Write results to file
68 2018-Dec-30 13:54:55.449622 - [INFO] Shutdown llvm and the analysis framework.

5, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24


Instruction:
store i8* %2, i8** %tainted2, align 8, !dbg !80, !phasar.instruction.id !87, ID: 33
Facts:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24
%2 = load i8*, i8** %taint13, align 8, !dbg !84, !phasar.instruction.id !86, ID: 32


Instruction:
ret i32 0, !dbg !88, !phasar.instruction.id !89, ID: 34
Facts:
store i8* %1, i8** %tainted, align 8, !dbg !67, !phasar.instruction.id !72, ID: 25
store i8* %0, i8** %taint9, align 8, !dbg !64, !phasar.instruction.id !65, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !41, !phasar.instruction.id !42, ID: 9
%0 = load i8*, i8** %taint6, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
%1 = load i8*, i8** %taint10, align 8, !dbg !69, !phasar.instruction.id !71, ID: 24
%2 = load i8*, i8** %taint13, align 8, !dbg !84, !phasar.instruction.id !86, ID: 32
store i8* %2, i8** %tainted2, align 8, !dbg !80, !phasar.instruction.id !87, ID: 33


