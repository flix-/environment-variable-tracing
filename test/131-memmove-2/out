0 2019-Jan-05 20:21:51.646628 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 20:21:51.647027 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 20:21:51.647378 - [INFO] No configuration file is used.
3 2019-Jan-05 20:21:51.647454 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 20:21:51.647552 - [INFO] Check program options for logical errors.
5 2019-Jan-05 20:21:51.647641 - [INFO] Set-up IR database.
6 2019-Jan-05 20:21:51.652377 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 20:21:51.652489 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 20:21:51.652550 - [INFO] 	main.ll
9 2019-Jan-05 20:21:51.652609 - [INFO] Check for chosen entry points.
10 2019-Jan-05 20:21:51.652670 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 20:21:51.652729 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 20:21:51.652789 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 20:21:51.653143 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 20:21:51.653275 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 20:21:51.653572 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 20:21:51.653636 - [INFO] Allocated Types    : 3
17 2019-Jan-05 20:21:51.653701 - [INFO] Allocation Sites   : 4
18 2019-Jan-05 20:21:51.653759 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 20:21:51.653817 - [INFO] Calls Sites        : 5
20 2019-Jan-05 20:21:51.653875 - [INFO] Functions          : 4
21 2019-Jan-05 20:21:51.653933 - [INFO] Globals            : 1
22 2019-Jan-05 20:21:51.653991 - [INFO] Global Pointer     : 1
23 2019-Jan-05 20:21:51.654048 - [INFO] Instructions       : 15
24 2019-Jan-05 20:21:51.654106 - [INFO] Memory Intrinsics  : 1
25 2019-Jan-05 20:21:51.654164 - [INFO] Store Instructions : 3
26 2019-Jan-05 20:21:51.654222 - [INFO]  
27 2019-Jan-05 20:21:51.654296 - [INFO]   i8
28 2019-Jan-05 20:21:51.654359 - [INFO]   i32
29 2019-Jan-05 20:21:51.654421 - [INFO]   i8*
30 2019-Jan-05 20:21:51.654870 - [DEBUG] Analyzing function: main
31 2019-Jan-05 20:21:51.655754 - [INFO] Reconstruct the class hierarchy.
32 2019-Jan-05 20:21:51.655825 - [INFO] Construct type hierarchy
33 2019-Jan-05 20:21:51.655886 - [DEBUG] Analyse types in module: main.ll
34 2019-Jan-05 20:21:51.656044 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2019-Jan-05 20:21:51.656113 - [INFO] Reconstruction of class hierarchy completed.
36 2019-Jan-05 20:21:51.656175 - [INFO] Starting CallGraphAnalysisType: OTF
37 2019-Jan-05 20:21:51.656301 - [DEBUG] Walking in function: main
38 2019-Jan-05 20:21:51.656388 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
39 2019-Jan-05 20:21:51.656695 - [DEBUG] Found 1 possible target(s)
40 2019-Jan-05 20:21:51.656755 - [DEBUG] Target name: llvm.dbg.declare
41 2019-Jan-05 20:21:51.656837 - [DEBUG] Walking in function: llvm.dbg.declare
42 2019-Jan-05 20:21:51.656900 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2019-Jan-05 20:21:51.656964 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
44 2019-Jan-05 20:21:51.657246 - [DEBUG] Found 1 possible target(s)
45 2019-Jan-05 20:21:51.657305 - [DEBUG] Target name: getenv
46 2019-Jan-05 20:21:51.657385 - [DEBUG] Walking in function: getenv
47 2019-Jan-05 20:21:51.657447 - [DEBUG] Function already visited or only declaration: getenv
48 2019-Jan-05 20:21:51.657511 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8* %dst, metadata !26, metadata !20), !dbg !27, !phasar.instruction.id !28, ID: 9
49 2019-Jan-05 20:21:51.657747 - [DEBUG] Found 1 possible target(s)
50 2019-Jan-05 20:21:51.657807 - [DEBUG] Target name: llvm.dbg.declare
51 2019-Jan-05 20:21:51.657881 - [DEBUG] Walking in function: llvm.dbg.declare
52 2019-Jan-05 20:21:51.657944 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2019-Jan-05 20:21:51.658028 - [DEBUG] Found static call-site: call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32, ID: 11
54 2019-Jan-05 20:21:51.658276 - [DEBUG] Found 1 possible target(s)
55 2019-Jan-05 20:21:51.658336 - [DEBUG] Target name: llvm.memmove.p0i8.p0i8.i64
56 2019-Jan-05 20:21:51.658414 - [DEBUG] Walking in function: llvm.memmove.p0i8.p0i8.i64
57 2019-Jan-05 20:21:51.658477 - [DEBUG] Function already visited or only declaration: llvm.memmove.p0i8.p0i8.i64
58 2019-Jan-05 20:21:51.658576 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8* %t, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35, ID: 12
59 2019-Jan-05 20:21:51.658812 - [DEBUG] Found 1 possible target(s)
60 2019-Jan-05 20:21:51.658872 - [DEBUG] Target name: llvm.dbg.declare
61 2019-Jan-05 20:21:51.658947 - [DEBUG] Walking in function: llvm.dbg.declare
62 2019-Jan-05 20:21:51.659010 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
63 2019-Jan-05 20:21:51.659072 - [INFO] Call graph has been constructed
64 2019-Jan-05 20:21:51.659133 - [INFO] Performing analysis: plugin
65 2019-Jan-05 20:21:51.659200 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
66 2019-Jan-05 20:21:51.659687 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %tainted = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %dst = alloca i8, align 1, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %t = alloca i8, align 1, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 10

  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 10
Added line number: 10

  call void @llvm.dbg.declare(metadata i8* %dst, metadata !26, metadata !20), !dbg !27, !phasar.instruction.id !28
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 10
Added line number: 10

  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
=============

Added line number: 10
Added line number: 10
Added line number: 13

  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
Got memcpy/memmove instruction
Removed 0 memory locations from facts
Adding memory location (memcpy/memmove)
Dumping facts
=============
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
=============

Added line number: 13
Added line number: 10
Added line number: 10
Added line number: 13

  call void @llvm.dbg.declare(metadata i8* %t, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35
Got call instruction
Dumping facts
=============
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
=============

Added line number: 13
Added line number: 10
Added line number: 10
Added line number: 13

  %1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37
Got load instruction
Adding load instruction fact
Dumping facts
=============
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
  %1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37
=============

Added line number: 13
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 15

  store i8 %1, i8* %t, align 1, !dbg !34, !phasar.instruction.id !38
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
  store i8 %1, i8* %t, align 1, !dbg !34, !phasar.instruction.id !38
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
  %1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37
=============

Added line number: 13
Added line number: 15
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 15

  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  call void @llvm.dbg.declare(metadata i8* %dst, metadata !26, metadata !20), !dbg !27, !phasar.instruction.id !28
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
=============


  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
Got memcpy/memmove instruction
Removed 0 memory locations from facts
Adding memory location (memcpy/memmove)
Dumping facts
=============
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
=============


  call void @llvm.dbg.declare(metadata i8* %t, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35
Got call instruction
Dumping facts
=============
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
=============


  %1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37
Got load instruction
Adding load instruction fact
Dumping facts
=============
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
  %1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37
=============


  store i8 %1, i8* %t, align 1, !dbg !34, !phasar.instruction.id !38
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
  store i8 %1, i8* %t, align 1, !dbg !34, !phasar.instruction.id !38
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
  %1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37
=============


  call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32
Got memcpy/memmove instruction
Removed 0 memory locations from facts
Adding memory location (memcpy/memmove)

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction

  %tainted = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %dst = alloca i8, align 1, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8 %1, i8* %t, align 1, !dbg !34, !phasar.instruction.id !38
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts

  %0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30
Got load instruction
Adding load instruction fact

  call void @llvm.dbg.declare(metadata i8* %dst, metadata !26, metadata !20), !dbg !27, !phasar.instruction.id !28
Got call instruction

  call void @llvm.dbg.declare(metadata i8* %t, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35
Got call instruction

  %t = alloca i8, align 1, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37
Got load instruction
Adding load instruction fact

  ret i32 0, !dbg !39, !phasar.instruction.id !40worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32, ID: 11
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30, ID: 10


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
Facts:
	EMPTY


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%dst = alloca i8, align 1, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8 %1, i8* %t, align 1, !dbg !34, !phasar.instruction.id !38, ID: 14
Facts:
call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32, ID: 11
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37, ID: 13


Instruction:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30, ID: 10
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8* %dst, metadata !26, metadata !20), !dbg !27, !phasar.instruction.id !28, ID: 9
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8* %t, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35, ID: 12
Facts:
call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32, ID: 11
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30, ID: 10


Instruction:
%t = alloca i8, align 1, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37, ID: 13
Facts:
call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32, ID: 11
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.in67 2019-Jan-05 20:21:51.683996 - [INFO] Write results to file
68 2019-Jan-05 20:21:51.684168 - [INFO] Shutdown llvm and the analysis framework.

struction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30, ID: 10


Instruction:
ret i32 0, !dbg !39, !phasar.instruction.id !40, ID: 15
Facts:
call void @llvm.memmove.p0i8.p0i8.i64(i8* %dst, i8* %0, i64 1, i32 1, i1 false), !dbg !31, !phasar.instruction.id !32, ID: 11
store i8 %1, i8* %t, align 1, !dbg !34, !phasar.instruction.id !38, ID: 14
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = load i8, i8* %dst, align 1, !dbg !36, !phasar.instruction.id !37, ID: 13


