0 2019-Jan-05 20:21:51.999288 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 20:21:51.999712 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 20:21:52.000127 - [INFO] No configuration file is used.
3 2019-Jan-05 20:21:52.000217 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 20:21:52.000323 - [INFO] Check program options for logical errors.
5 2019-Jan-05 20:21:52.000415 - [INFO] Set-up IR database.
6 2019-Jan-05 20:21:52.005686 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 20:21:52.005814 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 20:21:52.005925 - [INFO] 	main.ll
9 2019-Jan-05 20:21:52.005988 - [INFO] Check for chosen entry points.
10 2019-Jan-05 20:21:52.006050 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 20:21:52.006110 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 20:21:52.006171 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 20:21:52.006539 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 20:21:52.006680 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 20:21:52.007055 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 20:21:52.007127 - [INFO] Allocated Types    : 3
17 2019-Jan-05 20:21:52.007195 - [INFO] Allocation Sites   : 4
18 2019-Jan-05 20:21:52.007253 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 20:21:52.007311 - [INFO] Calls Sites        : 4
20 2019-Jan-05 20:21:52.007369 - [INFO] Functions          : 3
21 2019-Jan-05 20:21:52.007427 - [INFO] Globals            : 1
22 2019-Jan-05 20:21:52.007485 - [INFO] Global Pointer     : 1
23 2019-Jan-05 20:21:52.007542 - [INFO] Instructions       : 16
24 2019-Jan-05 20:21:52.007600 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 20:21:52.007658 - [INFO] Store Instructions : 5
26 2019-Jan-05 20:21:52.007716 - [INFO]  
27 2019-Jan-05 20:21:52.007793 - [INFO]   i32
28 2019-Jan-05 20:21:52.007857 - [INFO]   i8*
29 2019-Jan-05 20:21:52.007958 - [INFO]   i8**
30 2019-Jan-05 20:21:52.008447 - [DEBUG] Analyzing function: main
31 2019-Jan-05 20:21:52.009748 - [INFO] Reconstruct the class hierarchy.
32 2019-Jan-05 20:21:52.009847 - [INFO] Construct type hierarchy
33 2019-Jan-05 20:21:52.009959 - [DEBUG] Analyse types in module: main.ll
34 2019-Jan-05 20:21:52.010133 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2019-Jan-05 20:21:52.010207 - [INFO] Reconstruction of class hierarchy completed.
36 2019-Jan-05 20:21:52.010271 - [INFO] Starting CallGraphAnalysisType: OTF
37 2019-Jan-05 20:21:52.010413 - [DEBUG] Walking in function: main
38 2019-Jan-05 20:21:52.010503 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %a, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
39 2019-Jan-05 20:21:52.010827 - [DEBUG] Found 1 possible target(s)
40 2019-Jan-05 20:21:52.010931 - [DEBUG] Target name: llvm.dbg.declare
41 2019-Jan-05 20:21:52.011018 - [DEBUG] Walking in function: llvm.dbg.declare
42 2019-Jan-05 20:21:52.011082 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2019-Jan-05 20:21:52.011147 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
44 2019-Jan-05 20:21:52.011444 - [DEBUG] Found 1 possible target(s)
45 2019-Jan-05 20:21:52.011503 - [DEBUG] Target name: getenv
46 2019-Jan-05 20:21:52.011586 - [DEBUG] Walking in function: getenv
47 2019-Jan-05 20:21:52.011648 - [DEBUG] Function already visited or only declaration: getenv
48 2019-Jan-05 20:21:52.011712 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29, ID: 9
49 2019-Jan-05 20:21:52.012021 - [DEBUG] Found 1 possible target(s)
50 2019-Jan-05 20:21:52.012082 - [DEBUG] Target name: llvm.dbg.declare
51 2019-Jan-05 20:21:52.012160 - [DEBUG] Walking in function: llvm.dbg.declare
52 2019-Jan-05 20:21:52.012223 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2019-Jan-05 20:21:52.012309 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37, ID: 13
54 2019-Jan-05 20:21:52.012551 - [DEBUG] Found 1 possible target(s)
55 2019-Jan-05 20:21:52.012611 - [DEBUG] Target name: llvm.dbg.declare
56 2019-Jan-05 20:21:52.012686 - [DEBUG] Walking in function: llvm.dbg.declare
57 2019-Jan-05 20:21:52.012748 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2019-Jan-05 20:21:52.012810 - [INFO] Call graph has been constructed
59 2019-Jan-05 20:21:52.012906 - [INFO] Performing analysis: plugin
60 2019-Jan-05 20:21:52.012977 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
61 2019-Jan-05 20:21:52.013504 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %b = alloca i8**, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %not_tainted = alloca i8**, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i8** %a, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 8

  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 8
Added line number: 8

  call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 8
Added line number: 8

  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 9
Added line number: 8
Added line number: 8

  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 9
Added line number: 8
Added line number: 8
Added line number: 11

  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8** %0, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 8
Added line number: 8
Added line number: 11

  call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 8
Added line number: 8
Added line number: 11

  %1 = load i8**, i8*** %b, align 8, !dbg !38, !phasar.instruction.id !39
Got load instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 8
Added line number: 8
Added line number: 11

  store i8** %1, i8*** %not_tainted, align 8, !dbg !36, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============

Added line number: 8
Added line number: 8
Added line number: 11

  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8** %0, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  %1 = load i8**, i8*** %b, align 8, !dbg !38, !phasar.instruction.id !39
Got load instruction
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  store i8** %1, i8*** %not_tainted, align 8, !dbg !36, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
=============


  call void @llvm.dbg.declare(metadata i8** %a, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction

  %a = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %b = alloca i8**, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8** %0, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Removed 1 memory locations from facts

  store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts

  %0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32
Got load instruction
Adding load instruction fact

  call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29
Got call instruction

  call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37
Got call instruction

  %not_tainted = alloca i8**, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %1 = load i8**, i8*** %b, align 8, !dbg !38, !phasar.instruction.id !39
Got load instruction

  store i8** %1, i8*** %not_tainted, align 8, !dbg !36, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts

  ret i32 0, !dbg !41, !phasar.instruction.id !42worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata i8** %a, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
Facts:
	EMPTY


Instruction:
%a = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%b = alloca i8**, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8** %0, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
Facts:
store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30, ID: 10
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


Instruction:
store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30, ID: 10
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11
Facts:
store i8** %a, i8*** %b, align 8, !dbg !28, !phasar.instruction.id !30, ID: 10
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8*** %b, metadata !26, metadata !20), !dbg !28, !phasar.instruction.id !29, ID: 9
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8*** %not_tainted, metadata !35, metadata !20), !dbg !36, !phasar.instruction.id !37, ID: 13
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


Instruction:
%not_tainted = alloca i8**, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%1 = load i8**, i8*** %b, align 8, !dbg !38, !phasar.instruction.id !39, ID: 14
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


Instruction:
store i8** %1, i8*** %not_tainted, align 8, !dbg !36, !phasar.instruction.id !40, ID: 15
Facts:
store i8* %call62 2019-Jan-05 20:21:52.037826 - [INFO] Write results to file
63 2019-Jan-05 20:21:52.038079 - [INFO] Shutdown llvm and the analysis framework.

, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


Instruction:
ret i32 0, !dbg !41, !phasar.instruction.id !42, ID: 16
Facts:
store i8* %call, i8** %a, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8**, i8*** %b, align 8, !dbg !31, !phasar.instruction.id !32, ID: 11


