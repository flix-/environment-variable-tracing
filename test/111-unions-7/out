0 2019-Jan-05 14:31:44.953022 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 14:31:44.953431 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 14:31:44.953790 - [INFO] No configuration file is used.
3 2019-Jan-05 14:31:44.953867 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 14:31:44.954007 - [INFO] Check program options for logical errors.
5 2019-Jan-05 14:31:44.954100 - [INFO] Set-up IR database.
6 2019-Jan-05 14:31:44.961573 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 14:31:44.961683 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 14:31:44.961744 - [INFO] 	main.ll
9 2019-Jan-05 14:31:44.961803 - [INFO] Check for chosen entry points.
10 2019-Jan-05 14:31:44.961864 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 14:31:44.961922 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 14:31:44.961983 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 14:31:44.962321 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 14:31:44.962471 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 14:31:44.962949 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 14:31:44.963013 - [INFO] Allocated Types    : 3
17 2019-Jan-05 14:31:44.963077 - [INFO] Allocation Sites   : 5
18 2019-Jan-05 14:31:44.963135 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 14:31:44.963193 - [INFO] Calls Sites        : 5
20 2019-Jan-05 14:31:44.963251 - [INFO] Functions          : 3
21 2019-Jan-05 14:31:44.963309 - [INFO] Globals            : 2
22 2019-Jan-05 14:31:44.963366 - [INFO] Global Pointer     : 2
23 2019-Jan-05 14:31:44.963424 - [INFO] Instructions       : 38
24 2019-Jan-05 14:31:44.963482 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 14:31:44.963539 - [INFO] Store Instructions : 6
26 2019-Jan-05 14:31:44.963597 - [INFO]  
27 2019-Jan-05 14:31:44.963676 - [INFO]   i32
28 2019-Jan-05 14:31:44.963743 - [INFO]   %struct.s1 = type { %union.u1, i8* }
29 2019-Jan-05 14:31:44.963806 - [INFO]   i8*
30 2019-Jan-05 14:31:44.964535 - [DEBUG] Analyzing function: main
31 2019-Jan-05 14:31:44.974313 - [INFO] Reconstruct the class hierarchy.
32 2019-Jan-05 14:31:44.974391 - [INFO] Construct type hierarchy
33 2019-Jan-05 14:31:44.974452 - [DEBUG] Analyse types in module: main.ll
34 2019-Jan-05 14:31:44.974735 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2019-Jan-05 14:31:44.974908 - [INFO] Reconstruction of class hierarchy completed.
36 2019-Jan-05 14:31:44.974973 - [INFO] Starting CallGraphAnalysisType: OTF
37 2019-Jan-05 14:31:44.975594 - [DEBUG] Walking in function: main
38 2019-Jan-05 14:31:44.975675 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !19, metadata !36), !dbg !37, !phasar.instruction.id !38, ID: 8
39 2019-Jan-05 14:31:44.976141 - [DEBUG] Found 1 possible target(s)
40 2019-Jan-05 14:31:44.976201 - [DEBUG] Target name: llvm.dbg.declare
41 2019-Jan-05 14:31:44.976284 - [DEBUG] Walking in function: llvm.dbg.declare
42 2019-Jan-05 14:31:44.976347 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2019-Jan-05 14:31:44.976411 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
44 2019-Jan-05 14:31:44.976845 - [DEBUG] Found 1 possible target(s)
45 2019-Jan-05 14:31:44.976904 - [DEBUG] Target name: getenv
46 2019-Jan-05 14:31:44.976985 - [DEBUG] Walking in function: getenv
47 2019-Jan-05 14:31:44.977048 - [DEBUG] Function already visited or only declaration: getenv
48 2019-Jan-05 14:31:44.977112 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !51, metadata !36), !dbg !52, !phasar.instruction.id !53, ID: 15
49 2019-Jan-05 14:31:44.977524 - [DEBUG] Found 1 possible target(s)
50 2019-Jan-05 14:31:44.977584 - [DEBUG] Target name: llvm.dbg.declare
51 2019-Jan-05 14:31:44.977658 - [DEBUG] Walking in function: llvm.dbg.declare
52 2019-Jan-05 14:31:44.977721 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2019-Jan-05 14:31:44.977804 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !70, metadata !36), !dbg !71, !phasar.instruction.id !72, ID: 25
54 2019-Jan-05 14:31:44.978195 - [DEBUG] Found 1 possible target(s)
55 2019-Jan-05 14:31:44.978254 - [DEBUG] Target name: llvm.dbg.declare
56 2019-Jan-05 14:31:44.978329 - [DEBUG] Walking in function: llvm.dbg.declare
57 2019-Jan-05 14:31:44.978391 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2019-Jan-05 14:31:44.978455 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %not_tainted2, metadata !83, metadata !36), !dbg !84, !phasar.instruction.id !85, ID: 32
59 2019-Jan-05 14:31:44.978845 - [DEBUG] Found 1 possible target(s)
60 2019-Jan-05 14:31:44.978904 - [DEBUG] Target name: llvm.dbg.declare
61 2019-Jan-05 14:31:44.978979 - [DEBUG] Walking in function: llvm.dbg.declare
62 2019-Jan-05 14:31:44.979041 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
63 2019-Jan-05 14:31:44.979104 - [INFO] Call graph has been constructed
64 2019-Jan-05 14:31:44.979165 - [INFO] Performing analysis: plugin
65 2019-Jan-05 14:31:44.979232 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
66 2019-Jan-05 14:31:44.979732 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %s = alloca %struct.s1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %not_tainted2 = alloca i8*, align 8, !phasar.instruction.id !17
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !18
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !19, metadata !36), !dbg !37, !phasar.instruction.id !38
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============

Added line number: 23

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============

Added line number: 23

  %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !43, !phasar.instruction.id !44
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============

Added line number: 23

  %strings = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============

Added line number: 23

  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 0, !dbg !47, !phasar.instruction.id !48
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============

Added line number: 23

  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============

Added line number: 23
Added line number: 23

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !51, metadata !36), !dbg !52, !phasar.instruction.id !53
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============

Added line number: 23
Added line number: 23

  %u2 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============

Added line number: 23
Added line number: 23

  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
=============

Added line number: 23
Added line number: 23
Added line number: 25

  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
=============

Added line number: 23
Added line number: 23
Added line number: 25
Added line number: 25

  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
=============

Added line number: 25
Added line number: 23
Added line number: 23
Added line number: 25
Added line number: 25

  %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
=============

Added line number: 25
Added line number: 23
Added line number: 23
Added line number: 25
Added line number: 25

  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %strings5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings5, i64 0, i64 1, !dbg !66, !phasar.instruction.id !67
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !68, !phasar.instruction.id !69
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !70, metadata !36), !dbg !71, !phasar.instruction.id !72
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %u7 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !73, !phasar.instruction.id !74
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %s8 = bitcast %union.u1* %u7 to %struct.s2*, !dbg !75, !phasar.instruction.id !76
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %strings9 = getelementptr inbounds %struct.s2, %struct.s2* %s8, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings9, i64 0, i64 0, !dbg !79, !phasar.instruction.id !80
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !79, !phasar.instruction.id !81
Got load instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  store i8* %1, i8** %not_tainted, align 8, !dbg !71, !phasar.instruction.id !82
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  call void @llvm.dbg.declare(metadata i8** %not_tainted2, metadata !83, metadata !36), !dbg !84, !phasar.instruction.id !85
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %u11 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !86, !phasar.instruction.id !87
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %s12 = bitcast %union.u1* %u11 to %struct.s2*, !dbg !88, !phasar.instruction.id !89
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %strings13 = getelementptr inbounds %struct.s2, %struct.s2* %s12, i32 0, i32 0, !dbg !90, !phasar.instruction.id !91
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %arrayidx14 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings13, i64 0, i64 1, !dbg !92, !phasar.instruction.id !93
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %2 = load i8*, i8** %arrayidx14, align 8, !dbg !92, !phasar.instruction.id !94
Got load instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  store i8* %2, i8** %not_tainted2, align 8, !dbg !84, !phasar.instruction.id !95
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============

Added line number: 25
Added line number: 23
Added line number: 25
Added line number: 25
Added line number: 26

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============


  %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !43, !phasar.instruction.id !44
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============


  %strings = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============


  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 0, !dbg !47, !phasar.instruction.id !48
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============


  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============


  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !51, metadata !36), !dbg !52, !phasar.instruction.id !53
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============


  %u2 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
=============


  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
=============


  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
=============


  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
=============


  %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
=============


  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %strings5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings5, i64 0, i64 1, !dbg !66, !phasar.instruction.id !67
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !68, !phasar.instruction.id !69
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !70, metadata !36), !dbg !71, !phasar.instruction.id !72
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %u7 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !73, !phasar.instruction.id !74
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %s8 = bitcast %union.u1* %u7 to %struct.s2*, !dbg !75, !phasar.instruction.id !76
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %strings9 = getelementptr inbounds %struct.s2, %struct.s2* %s8, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings9, i64 0, i64 0, !dbg !79, !phasar.instruction.id !80
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !79, !phasar.instruction.id !81
Got load instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  store i8* %1, i8** %not_tainted, align 8, !dbg !71, !phasar.instruction.id !82
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  call void @llvm.dbg.declare(metadata i8** %not_tainted2, metadata !83, metadata !36), !dbg !84, !phasar.instruction.id !85
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %u11 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !86, !phasar.instruction.id !87
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %s12 = bitcast %union.u1* %u11 to %struct.s2*, !dbg !88, !phasar.instruction.id !89
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %strings13 = getelementptr inbounds %struct.s2, %struct.s2* %s12, i32 0, i32 0, !dbg !90, !phasar.instruction.id !91
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %arrayidx14 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings13, i64 0, i64 1, !dbg !92, !phasar.instruction.id !93
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %2 = load i8*, i8** %arrayidx14, align 8, !dbg !92, !phasar.instruction.id !94
Got load instruction
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  store i8* %2, i8** %not_tainted2, align 8, !dbg !84, !phasar.instruction.id !95
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
=============


  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %strings = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !18
Got store instruction
Removed 0 memory locations from facts

  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 0, !dbg !47, !phasar.instruction.id !48

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42

  %not_tainted2 = alloca i8*, align 8, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %s = alloca %struct.s1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !51, metadata !36), !dbg !52, !phasar.instruction.id !53
Got call instruction

  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !19, metadata !36), !dbg !37, !phasar.instruction.id !38
Got call instruction

  %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !43, !phasar.instruction.id !44
Got operands checking instruction (bitcast)

  %u2 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55

  %taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)
Adding fact

  %0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58
Got load instruction
Adding load instruction fact

  %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61

  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63
Got operands checking instruction (bitcast)
Adding fact

  %strings5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65

  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings5, i64 0, i64 1, !dbg !66, !phasar.instruction.id !67

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !68, !phasar.instruction.id !69
Got store instruction
Removed 1 memory locations from facts

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !70, metadata !36), !dbg !71, !phasar.instruction.id !72
Got call instruction

  %u7 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !73, !phasar.instruction.id !74

  %s8 = bitcast %union.u1* %u7 to %struct.s2*, !dbg !75, !phasar.instruction.id !76
Got operands checking instruction (bitcast)

  %strings9 = getelementptr inbounds %struct.s2, %struct.s2* %s8, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78

  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings9, i64 0, i64 0, !dbg !79, !phasar.instruction.id !80

  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !79, !phasar.instruction.id !81
Got load instruction

  store i8* %1, i8** %not_tainted, align 8, !dbg !71, !phasar.instruction.id !82
Got store instruction
Removed 0 memory locations from facts

  call void @llvm.dbg.declare(metadata i8** %not_tainted2, metadata !83, metadata !36), !dbg !84, !phasar.instruction.id !85
Got call instruction

  %u11 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !86, !phasar.instruction.id !87

  %s12 = bitcast %union.u1* %u11 to %struct.s2*, !dbg !88, !phasar.instruction.id !89
Got operands checking instruction (bitcast)

  %strings13 = getelementptr inbounds %struct.s2, %struct.s2* %s12, i32 0, i32 0, !dbg !90, !phasar.instruction.id !91

  %arrayidx14 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings13, i64 0, i64 1, !dbg !92, !phasar.instruction.id !93

  %2 = load i8*, i8** %arrayidx14, align 8, !dbg !92, !phasar.instruction.id !94
Got load instruction

  store i8* %2, i8** %not_tainted2, align 8, !dbg !84, !phasar.instruction.id !95
Got store instruction
Removed 0 memory locations from facts

  ret i32 0, !dbg !96, !phasar.instruction.id !97worklist size: 37
worklist size: 36
worklist size: 35
worklist size: 34
worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18


Instruction:
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9


Instruction:
%strings = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !45, !phasar.instruction.id !46, ID: 12
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 7
Facts:
	EMPTY


Instruction:
%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 0, !dbg !47, !phasar.instruction.id !48, ID: 13
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9


Instruction:
%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !41, !phasar.instruction.id !42, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9


Instruction:
%not_tainted2 = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%not_tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !51, metadata !36), !dbg !52, !phasar.instruction.id !53, ID: 15
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9


Instruction:
call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !19, metadata !36), !dbg !37, !phasar.instruction.id !38, ID: 8
Facts:
	EMPTY


Instruction:
%s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !43, !phasar.instruction.id !44, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9


Instruction:
%u2 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !54, !phasar.instruction.id !55, ID: 16
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9


Instruction:
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9


Instruction:
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17


Instruction:
%u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61, ID: 20
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18


Instruction:
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18


Instruction:
%strings5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65, ID: 22
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings5, i64 0, i64 1, !dbg !66, !phasar.instruction.id !67, ID: 23
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !68, !phasar.instruction.id !69, ID: 24
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
store i8* %call, i8** %arrayidx, align 8, !dbg !49, !phasar.instruction.id !50, ID: 14
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !70, metadata !36), !dbg !71, !phasar.instruction.id !72, ID: 25
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%u7 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !73, !phasar.instruction.id !74, ID: 26
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%s8 = bitcast %union.u1* %u7 to %struct.s2*, !dbg !75, !phasar.instruction.id !76, ID: 27
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%strings9 = getelementptr inbounds %struct.s2, %struct.s2* %s8, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78, ID: 28
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings9, i64 0, i64 0, !dbg !79, !phasar.instruction.id !80, ID: 29
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !79, !phasar.instruction.id !81, ID: 30
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
store i8* %1, i8** %not_tainted, align 8, !dbg !71, !phasar.instruction.id !82, ID: 31
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
call void @llvm.dbg.declare(metadata i8** %not_tainted2, metadata !83, metadata !36), !dbg !84, !phasar.instruction.id !85, ID: 32
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%u11 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !86, !phasar.instruction.id !87, ID: 33
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%s12 = bitcast %union.u1* %u11 to %struct.s2*, !dbg !88, !phasar.instruction.id !89, ID: 34
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%strings13 = getelementptr inbounds %struct.s2, %struct.s2* %s12, i32 0, i32 0, !dbg !90, !phasar.instruction.id !91, ID: 35
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%arrayidx14 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings13, i64 0, i64 1, !dbg !92, !phasar.instruction.id !93, ID: 36
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
%2 = load i8*, i8** %arrayidx14, align 8, !dbg !92, !phasar.instruction.id !94, ID: 37
Facts:
store i8*67 2019-Jan-05 14:31:45.147963 - [INFO] Write results to file
68 2019-Jan-05 14:31:45.148182 - [INFO] Shutdown llvm and the analysis framework.

 %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
store i8* %2, i8** %not_tainted2, align 8, !dbg !84, !phasar.instruction.id !95, ID: 38
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


Instruction:
ret i32 0, !dbg !96, !phasar.instruction.id !97, ID: 39
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !52, !phasar.instruction.id !59, ID: 19
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !39, !phasar.instruction.id !40, ID: 9
%taint = bitcast %union.u1* %u2 to i8**, !dbg !56, !phasar.instruction.id !57, ID: 17
%0 = load i8*, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !58, ID: 18
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !62, !phasar.instruction.id !63, ID: 21


