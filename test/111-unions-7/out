0 2018-Dec-30 13:54:56.204523 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-30 13:54:56.204963 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-30 13:54:56.205319 - [INFO] No configuration file is used.
3 2018-Dec-30 13:54:56.205395 - [INFO] Program options have been successfully parsed.
4 2018-Dec-30 13:54:56.205486 - [INFO] Check program options for logical errors.
5 2018-Dec-30 13:54:56.205599 - [INFO] Set-up IR database.
6 2018-Dec-30 13:54:56.212626 - [INFO] Constructed the analysis controller.
7 2018-Dec-30 13:54:56.212743 - [INFO] Found the following IR files for this project: 
8 2018-Dec-30 13:54:56.212804 - [INFO] 	main.ll
9 2018-Dec-30 13:54:56.212863 - [INFO] Check for chosen entry points.
10 2018-Dec-30 13:54:56.212924 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-30 13:54:56.212983 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-30 13:54:56.213043 - [INFO] Preprocess module: main.ll
13 2018-Dec-30 13:54:56.213390 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-30 13:54:56.213534 - [INFO] Running ValueAnnotationPass
15 2018-Dec-30 13:54:56.213925 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-30 13:54:56.213988 - [INFO] Allocated Types    : 3
17 2018-Dec-30 13:54:56.214052 - [INFO] Allocation Sites   : 4
18 2018-Dec-30 13:54:56.214109 - [INFO] Basic Blocks       : 1
19 2018-Dec-30 13:54:56.214166 - [INFO] Calls Sites        : 4
20 2018-Dec-30 13:54:56.214223 - [INFO] Functions          : 3
21 2018-Dec-30 13:54:56.214280 - [INFO] Globals            : 2
22 2018-Dec-30 13:54:56.214337 - [INFO] Global Pointer     : 2
23 2018-Dec-30 13:54:56.214394 - [INFO] Instructions       : 30
24 2018-Dec-30 13:54:56.214451 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-30 13:54:56.214508 - [INFO] Store Instructions : 5
26 2018-Dec-30 13:54:56.214565 - [INFO]  
27 2018-Dec-30 13:54:56.214639 - [INFO]   i32
28 2018-Dec-30 13:54:56.214706 - [INFO]   %struct.s1 = type { %union.u1, i8* }
29 2018-Dec-30 13:54:56.214768 - [INFO]   i8*
30 2018-Dec-30 13:54:56.215362 - [DEBUG] Analyzing function: main
31 2018-Dec-30 13:54:56.221305 - [INFO] Reconstruct the class hierarchy.
32 2018-Dec-30 13:54:56.221394 - [INFO] Construct type hierarchy
33 2018-Dec-30 13:54:56.221456 - [DEBUG] Analyse types in module: main.ll
34 2018-Dec-30 13:54:56.221725 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2018-Dec-30 13:54:56.221899 - [INFO] Reconstruction of class hierarchy completed.
36 2018-Dec-30 13:54:56.221964 - [INFO] Starting CallGraphAnalysisType: OTF
37 2018-Dec-30 13:54:56.222412 - [DEBUG] Walking in function: main
38 2018-Dec-30 13:54:56.222494 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !18, metadata !35), !dbg !36, !phasar.instruction.id !37, ID: 7
39 2018-Dec-30 13:54:56.222922 - [DEBUG] Found 1 possible target(s)
40 2018-Dec-30 13:54:56.222982 - [DEBUG] Target name: llvm.dbg.declare
41 2018-Dec-30 13:54:56.223064 - [DEBUG] Walking in function: llvm.dbg.declare
42 2018-Dec-30 13:54:56.223126 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2018-Dec-30 13:54:56.223190 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
44 2018-Dec-30 13:54:56.223573 - [DEBUG] Found 1 possible target(s)
45 2018-Dec-30 13:54:56.223632 - [DEBUG] Target name: getenv
46 2018-Dec-30 13:54:56.223712 - [DEBUG] Walking in function: getenv
47 2018-Dec-30 13:54:56.223774 - [DEBUG] Function already visited or only declaration: getenv
48 2018-Dec-30 13:54:56.223838 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !50, metadata !35), !dbg !51, !phasar.instruction.id !52, ID: 14
49 2018-Dec-30 13:54:56.224175 - [DEBUG] Found 1 possible target(s)
50 2018-Dec-30 13:54:56.224234 - [DEBUG] Target name: llvm.dbg.declare
51 2018-Dec-30 13:54:56.224308 - [DEBUG] Walking in function: llvm.dbg.declare
52 2018-Dec-30 13:54:56.224370 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2018-Dec-30 13:54:56.224453 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !69, metadata !35), !dbg !70, !phasar.instruction.id !71, ID: 24
54 2018-Dec-30 13:54:56.224789 - [DEBUG] Found 1 possible target(s)
55 2018-Dec-30 13:54:56.224848 - [DEBUG] Target name: llvm.dbg.declare
56 2018-Dec-30 13:54:56.224922 - [DEBUG] Walking in function: llvm.dbg.declare
57 2018-Dec-30 13:54:56.224984 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2018-Dec-30 13:54:56.225047 - [INFO] Call graph has been constructed
59 2018-Dec-30 13:54:56.225108 - [INFO] Performing analysis: plugin
60 2018-Dec-30 13:54:56.225174 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
61 2018-Dec-30 13:54:56.225682 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %s = alloca %struct.s1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction

  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !18, metadata !35), !dbg !36, !phasar.instruction.id !37
Got call instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
Got call instruction
Adding call instruction fact
Adding line: 23

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41
Adding line: 23

  %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !42, !phasar.instruction.id !43
Got operands checking instruction (bitcast)
Adding line: 23

  %strings = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
Adding line: 23

  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 0, !dbg !46, !phasar.instruction.id !47
Adding line: 23

  store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49
Got store instruction
Adding store instruction
Adding line: 23
Adding line: 23

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !50, metadata !35), !dbg !51, !phasar.instruction.id !52
Got call instruction
Adding line: 23
Adding line: 23

  %u2 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54
Adding line: 23
Adding line: 23

  %taint = bitcast %union.u1* %u2 to i8**, !dbg !55, !phasar.instruction.id !56
Got operands checking instruction (bitcast)
Adding line: 23
Adding line: 23

  %0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57
Got load instruction
Adding load instruction fact
Adding line: 23
Adding line: 23
Adding line: 25

  store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58
Got store instruction
Adding store instruction
Adding line: 25
Adding line: 23
Adding line: 23
Adding line: 25

  %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !59, !phasar.instruction.id !60
Adding line: 25
Adding line: 23
Adding line: 23
Adding line: 25

  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !61, !phasar.instruction.id !62
Got operands checking instruction (bitcast)
Adding line: 25
Adding line: 23
Adding line: 23
Adding line: 25

  %strings5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64
Adding line: 25
Adding line: 23
Adding line: 23
Adding line: 25

  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings5, i64 0, i64 1, !dbg !65, !phasar.instruction.id !66
Adding line: 25
Adding line: 23
Adding line: 23
Adding line: 25

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !67, !phasar.instruction.id !68
Got store instruction
Removing store instruction
Adding line: 25
Adding line: 23
Adding line: 25

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !69, metadata !35), !dbg !70, !phasar.instruction.id !71
Got call instruction
Adding line: 25
Adding line: 23
Adding line: 25

  %u7 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !72, !phasar.instruction.id !73
Adding line: 25
Adding line: 23
Adding line: 25

  %s8 = bitcast %union.u1* %u7 to %struct.s2*, !dbg !74, !phasar.instruction.id !75
Got operands checking instruction (bitcast)
Adding line: 25
Adding line: 23
Adding line: 25

  %strings9 = getelementptr inbounds %struct.s2, %struct.s2* %s8, i32 0, i32 0, !dbg !76, !phasar.instruction.id !77
Adding line: 25
Adding line: 23
Adding line: 25

  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings9, i64 0, i64 0, !dbg !78, !phasar.instruction.id !79
Adding line: 25
Adding line: 23
Adding line: 25

  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !78, !phasar.instruction.id !80
Got load instruction
Adding line: 25
Adding line: 23
Adding line: 25

  store i8* %1, i8** %not_tainted, align 8, !dbg !70, !phasar.instruction.id !81
Got store instruction
Adding line: 25
Adding line: 23
Adding line: 25

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41

  %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !42, !phasar.instruction.id !43
Got operands checking instruction (bitcast)

  %strings = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45

  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 0, !dbg !46, !phasar.instruction.id !47

  store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !50, metadata !35), !dbg !51, !phasar.instruction.id !52
Got call instruction

  %u2 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54

  %taint = bitcast %union.u1* %u2 to i8**, !dbg !55, !phasar.instruction.id !56
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57
Got load instruction
Adding load instruction fact

  store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58
Got store instruction
Adding store instruction

  %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !59, !phasar.instruction.id !60

  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !61, !phasar.instruction.id !62
Got operands checking instruction (bitcast)

  %strings5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64

  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings5, i64 0, i64 1, !dbg !65, !phasar.instruction.id !66

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !67, !phasar.instruction.id !68
Got store instruction
Removing store instruction

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !69, metadata !35), !dbg !70, !phasar.instruction.id !71
Got call instruction

  %u7 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !72, !phasar.instruction.id !73

  %s8 = bitcast %union.u1* %u7 to %struct.s2*, !dbg !74, !phasar.instruction.id !75
Got operands checking instruction (bitcast)

  %strings9 = getelementptr inbounds %struct.s2, %struct.s2* %s8, i32 0, i32 0, !dbg !76, !phasar.instruction.id !77

  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings9, i64 0, i64 0, !dbg !78, !phasar.instruction.id !79

  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !78, !phasar.instruction.id !80
Got load instruction

  store i8* %1, i8** %not_tainted, align 8, !dbg !70, !phasar.instruction.id !81
Got store instruction

  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !18, metadata !35), !dbg !36, !phasar.instruction.id !37
Got call instruction

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58
Got store instruction
Adding store instruction

  store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49
Got store instruction
Adding store instruction

  %strings = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction

  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 0, !dbg !46, !phasar.instruction.id !47

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41

  %tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %s = alloca %struct.s1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !50, metadata !35), !dbg !51, !phasar.instruction.id !52
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !69, metadata !35), !dbg !70, !phasar.instruction.id !71
Got call instruction

  %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !42, !phasar.instruction.id !43
Got operands checking instruction (bitcast)

  %u2 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54

  %taint = bitcast %union.u1* %u2 to i8**, !dbg !55, !phasar.instruction.id !56
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57
Got load instruction
Adding load instruction fact

  %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !59, !phasar.instruction.id !60

  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !61, !phasar.instruction.id !62
Got operands checking instruction (bitcast)

  %strings5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64

  %arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings5, i64 0, i64 1, !dbg !65, !phasar.instruction.id !66

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !67, !phasar.instruction.id !68
Got store instruction
Removing store instruction

  %u7 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !72, !phasar.instruction.id !73

  %s8 = bitcast %union.u1* %u7 to %struct.s2*, !dbg !74, !phasar.instruction.id !75
Got operands checking instruction (bitcast)

  %strings9 = getelementptr inbounds %struct.s2, %struct.s2* %s8, i32 0, i32 0, !dbg !76, !phasar.instruction.id !77

  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings9, i64 0, i64 0, !dbg !78, !phasar.instruction.id !79

  %1 = load i8*, i8** %arrayidx10, align 8, !dbg !78, !phasar.instruction.id !80
Got load instruction

  store i8* %1, i8** %not_tainted, align 8, !dbg !70, !phasar.instruction.id !81
Got store instruction

  ret i32 0, !dbg !82, !phasar.instruction.id !83worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !18, metadata !35), !dbg !36, !phasar.instruction.id !37, ID: 7
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8


Instruction:
%strings = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings, i64 0, i64 0, !dbg !46, !phasar.instruction.id !47, ID: 12
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8


Instruction:
%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%not_tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !50, metadata !35), !dbg !51, !phasar.instruction.id !52, ID: 14
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8


Instruction:
call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !69, metadata !35), !dbg !70, !phasar.instruction.id !71, ID: 24
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !42, !phasar.instruction.id !43, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8


Instruction:
%u2 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !53, !phasar.instruction.id !54, ID: 15
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8


Instruction:
%taint = bitcast %union.u1* %u2 to i8**, !dbg !55, !phasar.instruction.id !56, ID: 16
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8


Instruction:
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17
Facts:
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8


Instruction:
%u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !59, !phasar.instruction.id !60, ID: 19
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !61, !phasar.instruction.id !62, ID: 20
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%strings5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 21
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%arrayidx6 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings5, i64 0, i64 1, !dbg !65, !phasar.instruction.id !66, ID: 22
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %arrayidx6, align 8, !dbg !67, !phasar.instruction.id !68, ID: 23
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
store i8* %call, i8** %arrayidx, align 8, !dbg !48, !phasar.instruction.id !49, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%u7 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !72, !phasar.i62 2018-Dec-30 13:54:56.274451 - [INFO] Write results to file
63 2018-Dec-30 13:54:56.274651 - [INFO] Shutdown llvm and the analysis framework.

nstruction.id !73, ID: 25
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%s8 = bitcast %union.u1* %u7 to %struct.s2*, !dbg !74, !phasar.instruction.id !75, ID: 26
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%strings9 = getelementptr inbounds %struct.s2, %struct.s2* %s8, i32 0, i32 0, !dbg !76, !phasar.instruction.id !77, ID: 27
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %strings9, i64 0, i64 0, !dbg !78, !phasar.instruction.id !79, ID: 28
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
%1 = load i8*, i8** %arrayidx10, align 8, !dbg !78, !phasar.instruction.id !80, ID: 29
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
store i8* %1, i8** %not_tainted, align 8, !dbg !70, !phasar.instruction.id !81, ID: 30
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


Instruction:
ret i32 0, !dbg !82, !phasar.instruction.id !83, ID: 31
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !51, !phasar.instruction.id !58, ID: 18
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !55, !phasar.instruction.id !57, ID: 17


