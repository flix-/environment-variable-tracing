0 2018-Dec-29 12:16:28.582052 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-29 12:16:28.582479 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-29 12:16:28.582825 - [INFO] No configuration file is used.
3 2018-Dec-29 12:16:28.582901 - [INFO] Program options have been successfully parsed.
4 2018-Dec-29 12:16:28.583001 - [INFO] Check program options for logical errors.
5 2018-Dec-29 12:16:28.583090 - [INFO] Set-up IR database.
6 2018-Dec-29 12:16:28.588925 - [INFO] Constructed the analysis controller.
7 2018-Dec-29 12:16:28.589037 - [INFO] Found the following IR files for this project: 
8 2018-Dec-29 12:16:28.589098 - [INFO] 	main.ll
9 2018-Dec-29 12:16:28.589157 - [INFO] Check for chosen entry points.
10 2018-Dec-29 12:16:28.589218 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-29 12:16:28.589276 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-29 12:16:28.589336 - [INFO] Preprocess module: main.ll
13 2018-Dec-29 12:16:28.589693 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-29 12:16:28.589825 - [INFO] Running ValueAnnotationPass
15 2018-Dec-29 12:16:28.590170 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-29 12:16:28.590234 - [INFO] Allocated Types    : 3
17 2018-Dec-29 12:16:28.590306 - [INFO] Allocation Sites   : 4
18 2018-Dec-29 12:16:28.590364 - [INFO] Basic Blocks       : 1
19 2018-Dec-29 12:16:28.590421 - [INFO] Calls Sites        : 4
20 2018-Dec-29 12:16:28.590478 - [INFO] Functions          : 3
21 2018-Dec-29 12:16:28.590535 - [INFO] Globals            : 1
22 2018-Dec-29 12:16:28.590593 - [INFO] Global Pointer     : 1
23 2018-Dec-29 12:16:28.590650 - [INFO] Instructions       : 23
24 2018-Dec-29 12:16:28.590707 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-29 12:16:28.590765 - [INFO] Store Instructions : 5
26 2018-Dec-29 12:16:28.590822 - [INFO]  
27 2018-Dec-29 12:16:28.590901 - [INFO]   i32
28 2018-Dec-29 12:16:28.590966 - [INFO]   %union.u1 = type { double }
29 2018-Dec-29 12:16:28.591028 - [INFO]   i8*
30 2018-Dec-29 12:16:28.591548 - [DEBUG] Analyzing function: main
31 2018-Dec-29 12:16:28.593936 - [INFO] Reconstruct the class hierarchy.
32 2018-Dec-29 12:16:28.594009 - [INFO] Construct type hierarchy
33 2018-Dec-29 12:16:28.594070 - [DEBUG] Analyse types in module: main.ll
34 2018-Dec-29 12:16:28.594290 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2018-Dec-29 12:16:28.594425 - [INFO] Reconstruction of class hierarchy completed.
36 2018-Dec-29 12:16:28.594490 - [INFO] Starting CallGraphAnalysisType: OTF
37 2018-Dec-29 12:16:28.594704 - [DEBUG] Walking in function: main
38 2018-Dec-29 12:16:28.594821 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !30), !dbg !31, !phasar.instruction.id !32, ID: 6
39 2018-Dec-29 12:16:28.595184 - [DEBUG] Found 1 possible target(s)
40 2018-Dec-29 12:16:28.595244 - [DEBUG] Target name: llvm.dbg.declare
41 2018-Dec-29 12:16:28.595325 - [DEBUG] Walking in function: llvm.dbg.declare
42 2018-Dec-29 12:16:28.595388 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2018-Dec-29 12:16:28.595452 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
44 2018-Dec-29 12:16:28.595791 - [DEBUG] Found 1 possible target(s)
45 2018-Dec-29 12:16:28.595863 - [DEBUG] Target name: getenv
46 2018-Dec-29 12:16:28.595944 - [DEBUG] Walking in function: getenv
47 2018-Dec-29 12:16:28.596006 - [DEBUG] Function already visited or only declaration: getenv
48 2018-Dec-29 12:16:28.596070 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43, ID: 11
49 2018-Dec-29 12:16:28.596368 - [DEBUG] Found 1 possible target(s)
50 2018-Dec-29 12:16:28.596428 - [DEBUG] Target name: llvm.dbg.declare
51 2018-Dec-29 12:16:28.596503 - [DEBUG] Walking in function: llvm.dbg.declare
52 2018-Dec-29 12:16:28.596566 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2018-Dec-29 12:16:28.596650 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %b, metadata !54, metadata !30), !dbg !55, !phasar.instruction.id !56, ID: 18
54 2018-Dec-29 12:16:28.596943 - [DEBUG] Found 1 possible target(s)
55 2018-Dec-29 12:16:28.597002 - [DEBUG] Target name: llvm.dbg.declare
56 2018-Dec-29 12:16:28.597076 - [DEBUG] Walking in function: llvm.dbg.declare
57 2018-Dec-29 12:16:28.597139 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2018-Dec-29 12:16:28.597201 - [INFO] Call graph has been constructed
59 2018-Dec-29 12:16:28.597262 - [INFO] Performing analysis: plugin
60 2018-Dec-29 12:16:28.597329 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
61 2018-Dec-29 12:16:28.597818 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %un = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %a = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %b = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !30), !dbg !31, !phasar.instruction.id !32
Got call instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34
Got call instruction
Adding call instruction fact
Adding line: 20

  %u = bitcast %union.u1* %un to %union.u2*, !dbg !35, !phasar.instruction.id !36
Got operands checking instruction (bitcast)
Adding line: 20

  %taint = bitcast %union.u2* %u to i8**, !dbg !37, !phasar.instruction.id !38
Got operands checking instruction (bitcast)
Adding line: 20

  store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40
Got store instruction
Adding store instruction
Adding line: 20
Adding line: 20

  call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43
Got call instruction
Adding line: 20
Adding line: 20

  %u1 = bitcast %union.u1* %un to %union.u2*, !dbg !44, !phasar.instruction.id !45
Got operands checking instruction (bitcast)
Adding line: 20
Adding line: 20

  %taint2 = bitcast %union.u2* %u1 to i8**, !dbg !46, !phasar.instruction.id !47
Got operands checking instruction (bitcast)
Adding line: 20
Adding line: 20

  %0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48
Got load instruction
Adding load instruction fact
Adding line: 20
Adding line: 20
Adding line: 22

  store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49
Got store instruction
Adding store instruction
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22

  %a3 = bitcast %union.u1* %un to i32*, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22

  store i32 1, i32* %a3, align 8, !dbg !52, !phasar.instruction.id !53
Got store instruction
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22

  call void @llvm.dbg.declare(metadata i8** %b, metadata !54, metadata !30), !dbg !55, !phasar.instruction.id !56
Got call instruction
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22

  %u4 = bitcast %union.u1* %un to %union.u2*, !dbg !57, !phasar.instruction.id !58
Got operands checking instruction (bitcast)
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22

  %taint5 = bitcast %union.u2* %u4 to i8**, !dbg !59, !phasar.instruction.id !60
Got operands checking instruction (bitcast)
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22

  %1 = load i8*, i8** %taint5, align 8, !dbg !59, !phasar.instruction.id !61
Got load instruction
Adding load instruction fact
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22
Adding line: 26

  store i8* %1, i8** %b, align 8, !dbg !55, !phasar.instruction.id !62
Got store instruction
Adding store instruction
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22
Adding line: 26
Adding line: 26

  %u = bitcast %union.u1* %un to %union.u2*, !dbg !35, !phasar.instruction.id !36
Got operands checking instruction (bitcast)

  %taint = bitcast %union.u2* %u to i8**, !dbg !37, !phasar.instruction.id !38
Got operands checking instruction (bitcast)

  store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43
Got call instruction

  %u1 = bitcast %union.u1* %un to %union.u2*, !dbg !44, !phasar.instruction.id !45
Got operands checking instruction (bitcast)

  %taint2 = bitcast %union.u2* %u1 to i8**, !dbg !46, !phasar.instruction.id !47
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48
Got load instruction
Adding load instruction fact

  store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49
Got store instruction
Adding store instruction

  %a3 = bitcast %union.u1* %un to i32*, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)

  store i32 1, i32* %a3, align 8, !dbg !52, !phasar.instruction.id !53
Got store instruction

  call void @llvm.dbg.declare(metadata i8** %b, metadata !54, metadata !30), !dbg !55, !phasar.instruction.id !56
Got call instruction

  %u4 = bitcast %union.u1* %un to %union.u2*, !dbg !57, !phasar.instruction.id !58
Got operands checking instruction (bitcast)

  %taint5 = bitcast %union.u2* %u4 to i8**, !dbg !59, !phasar.instruction.id !60
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint5, align 8, !dbg !59, !phasar.instruction.id !61
Got load instruction
Adding load instruction fact

  store i8* %1, i8** %b, align 8, !dbg !55, !phasar.instruction.id !62
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !30), !dbg !31, !phasar.instruction.id !32
Got call instruction

  %un = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 1, i32* %a3, align 8, !dbg !52, !phasar.instruction.id !53
Got store instruction

  store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49
Got store instruction
Adding store instruction

  store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40
Got store instruction
Adding store instruction

  %u = bitcast %union.u1* %un to %union.u2*, !dbg !35, !phasar.instruction.id !36
Got operands checking instruction (bitcast)

  %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  %b = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %a = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %taint = bitcast %union.u2* %u to i8**, !dbg !37, !phasar.instruction.id !38
Got operands checking instruction (bitcast)

  call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %b, metadata !54, metadata !30), !dbg !55, !phasar.instruction.id !56
Got call instruction

  %u1 = bitcast %union.u1* %un to %union.u2*, !dbg !44, !phasar.instruction.id !45
Got operands checking instruction (bitcast)

  %taint2 = bitcast %union.u2* %u1 to i8**, !dbg !46, !phasar.instruction.id !47
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48
Got load instruction
Adding load instruction fact

  %a3 = bitcast %union.u1* %un to i32*, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)

  %u4 = bitcast %union.u1* %un to %union.u2*, !dbg !57, !phasar.instruction.id !58
Got operands checking instruction (bitcast)

  %taint5 = bitcast %union.u2* %u4 to i8**, !dbg !59, !phasar.instruction.id !60
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint5, align 8, !dbg !59, !phasar.instruction.id !61
Got load instruction
Adding load instruction fact

  store i8* %1, i8** %b, align 8, !dbg !55, !phasar.instruction.id !62
Got store instruction
Adding store instruction

  ret i32 0, !dbg !63, !phasar.instruction.id !64worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !30), !dbg !31, !phasar.instruction.id !32, ID: 6
Facts:
	EMPTY


Instruction:
%un = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 1, i32* %a3, align 8, !dbg !52, !phasar.instruction.id !53, ID: 17
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%u = bitcast %union.u1* %un to %union.u2*, !dbg !35, !phasar.instruction.id !36, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%b = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%taint = bitcast %union.u2* %u to i8**, !dbg !37, !phasar.instruction.id !38, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43, ID: 11
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %b, metadata !54, metadata !30), !dbg !55, !phasar.instruction.id !56, ID: 18
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
%u1 = bitcast %union.u1* %un to %union.u2*, !dbg !44, !phasar.instruction.id !45, ID: 12
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%taint2 = bitcast %union.u2* %u1 to i8**, !dbg !46, !phasar.instruction.id !47, ID: 13
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%a3 = bitcast %union.u1* %un to i32*, !dbg !50, !phasar.instruction.id !51, ID: 16
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
%u4 = bitcast %union.u1* %un to %union.u2*, !dbg !57, !phasar.instruction.id !58, ID: 19
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
%taint5 = bitcast %union.u2* %u4 to i8**, !dbg !59, !phasar.instruction.id !60, ID: 20
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
%1 = load i8*, i8** %taint5, align 8, !dbg !59, !phasar.instruction.id !61, ID: 21
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
store i8* %1, i8** %b, align 8, !dbg !55, !phasar.instruction.id !62, ID: 22
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14
%1 = load i8*, i8** %taint5, align 8, !dbg !59, !phasar.instruction.id !61, ID: 21


Instruction:
ret i32 0, !dbg !63, !phasar.instruction.id !64, ID: 23
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14
%1 = load i8*, i8** %taint5, align 8, !dbg !59, !phasar.instruction.id !61, ID: 21
store i8* %1, i8** %b, align 8, !dbg !55, !p62 2018-Dec-29 12:16:28.629569 - [INFO] Write results to file
63 2018-Dec-29 12:16:28.629744 - [INFO] Shutdown llvm and the analysis framework.

hasar.instruction.id !62, ID: 22


