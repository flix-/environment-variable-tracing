0 2018-Dec-29 21:16:08.193825 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-29 21:16:08.194287 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-29 21:16:08.194665 - [INFO] No configuration file is used.
3 2018-Dec-29 21:16:08.194754 - [INFO] Program options have been successfully parsed.
4 2018-Dec-29 21:16:08.194881 - [INFO] Check program options for logical errors.
5 2018-Dec-29 21:16:08.194981 - [INFO] Set-up IR database.
6 2018-Dec-29 21:16:08.201436 - [INFO] Constructed the analysis controller.
7 2018-Dec-29 21:16:08.201625 - [INFO] Found the following IR files for this project: 
8 2018-Dec-29 21:16:08.201689 - [INFO] 	main.ll
9 2018-Dec-29 21:16:08.201749 - [INFO] Check for chosen entry points.
10 2018-Dec-29 21:16:08.201811 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-29 21:16:08.201871 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-29 21:16:08.201933 - [INFO] Preprocess module: main.ll
13 2018-Dec-29 21:16:08.202337 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-29 21:16:08.202515 - [INFO] Running ValueAnnotationPass
15 2018-Dec-29 21:16:08.202977 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-29 21:16:08.203059 - [INFO] Allocated Types    : 3
17 2018-Dec-29 21:16:08.203129 - [INFO] Allocation Sites   : 4
18 2018-Dec-29 21:16:08.203187 - [INFO] Basic Blocks       : 1
19 2018-Dec-29 21:16:08.203245 - [INFO] Calls Sites        : 4
20 2018-Dec-29 21:16:08.203303 - [INFO] Functions          : 3
21 2018-Dec-29 21:16:08.203361 - [INFO] Globals            : 1
22 2018-Dec-29 21:16:08.203419 - [INFO] Global Pointer     : 1
23 2018-Dec-29 21:16:08.203477 - [INFO] Instructions       : 24
24 2018-Dec-29 21:16:08.203535 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-29 21:16:08.203594 - [INFO] Store Instructions : 5
26 2018-Dec-29 21:16:08.203652 - [INFO]  
27 2018-Dec-29 21:16:08.203738 - [INFO]   i32
28 2018-Dec-29 21:16:08.203853 - [INFO]   %union.u1 = type { double }
29 2018-Dec-29 21:16:08.203919 - [INFO]   i8*
30 2018-Dec-29 21:16:08.204560 - [DEBUG] Analyzing function: main
31 2018-Dec-29 21:16:08.207701 - [INFO] Reconstruct the class hierarchy.
32 2018-Dec-29 21:16:08.207903 - [INFO] Construct type hierarchy
33 2018-Dec-29 21:16:08.207969 - [DEBUG] Analyse types in module: main.ll
34 2018-Dec-29 21:16:08.208257 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2018-Dec-29 21:16:08.212268 - [INFO] Reconstruction of class hierarchy completed.
36 2018-Dec-29 21:16:08.212428 - [INFO] Starting CallGraphAnalysisType: OTF
37 2018-Dec-29 21:16:08.212731 - [DEBUG] Walking in function: main
38 2018-Dec-29 21:16:08.212839 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !30), !dbg !31, !phasar.instruction.id !32, ID: 6
39 2018-Dec-29 21:16:08.213330 - [DEBUG] Found 1 possible target(s)
40 2018-Dec-29 21:16:08.213392 - [DEBUG] Target name: llvm.dbg.declare
41 2018-Dec-29 21:16:08.213481 - [DEBUG] Walking in function: llvm.dbg.declare
42 2018-Dec-29 21:16:08.213545 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2018-Dec-29 21:16:08.213609 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
44 2018-Dec-29 21:16:08.213970 - [DEBUG] Found 1 possible target(s)
45 2018-Dec-29 21:16:08.214029 - [DEBUG] Target name: getenv
46 2018-Dec-29 21:16:08.214112 - [DEBUG] Walking in function: getenv
47 2018-Dec-29 21:16:08.214175 - [DEBUG] Function already visited or only declaration: getenv
48 2018-Dec-29 21:16:08.214240 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43, ID: 11
49 2018-Dec-29 21:16:08.214562 - [DEBUG] Found 1 possible target(s)
50 2018-Dec-29 21:16:08.214623 - [DEBUG] Target name: llvm.dbg.declare
51 2018-Dec-29 21:16:08.214703 - [DEBUG] Walking in function: llvm.dbg.declare
52 2018-Dec-29 21:16:08.214765 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2018-Dec-29 21:16:08.214996 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %b, metadata !56, metadata !30), !dbg !57, !phasar.instruction.id !58, ID: 19
54 2018-Dec-29 21:16:08.215323 - [DEBUG] Found 1 possible target(s)
55 2018-Dec-29 21:16:08.215383 - [DEBUG] Target name: llvm.dbg.declare
56 2018-Dec-29 21:16:08.215460 - [DEBUG] Walking in function: llvm.dbg.declare
57 2018-Dec-29 21:16:08.215522 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2018-Dec-29 21:16:08.215585 - [INFO] Call graph has been constructed
59 2018-Dec-29 21:16:08.215649 - [INFO] Performing analysis: plugin
60 2018-Dec-29 21:16:08.215719 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
61 2018-Dec-29 21:16:08.216276 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %un = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %a = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %b = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !30), !dbg !31, !phasar.instruction.id !32
Got call instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34
Got call instruction
Adding call instruction fact
Adding line: 20

  %u = bitcast %union.u1* %un to %union.u2*, !dbg !35, !phasar.instruction.id !36
Got operands checking instruction (bitcast)
Adding line: 20

  %taint = bitcast %union.u2* %u to i8**, !dbg !37, !phasar.instruction.id !38
Got operands checking instruction (bitcast)
Adding line: 20

  store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40
Got store instruction
Adding store instruction
Adding line: 20
Adding line: 20

  call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43
Got call instruction
Adding line: 20
Adding line: 20

  %u1 = bitcast %union.u1* %un to %union.u2*, !dbg !44, !phasar.instruction.id !45
Got operands checking instruction (bitcast)
Adding line: 20
Adding line: 20

  %taint2 = bitcast %union.u2* %u1 to i8**, !dbg !46, !phasar.instruction.id !47
Got operands checking instruction (bitcast)
Adding line: 20
Adding line: 20

  %0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48
Got load instruction
Adding load instruction fact
Adding line: 20
Adding line: 20
Adding line: 22

  store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49
Got store instruction
Adding store instruction
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22

  %u3 = bitcast %union.u1* %un to %union.u2*, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22

  %a4 = bitcast %union.u2* %u3 to i32*, !dbg !52, !phasar.instruction.id !53
Got operands checking instruction (bitcast)
Adding line: 22
Adding line: 20
Adding line: 20
Adding line: 22

  store i32 1, i32* %a4, align 8, !dbg !54, !phasar.instruction.id !55
Got store instruction
Removing store instruction
Adding line: 22
Adding line: 20
Adding line: 22

  call void @llvm.dbg.declare(metadata i8** %b, metadata !56, metadata !30), !dbg !57, !phasar.instruction.id !58
Got call instruction
Adding line: 22
Adding line: 20
Adding line: 22

  %u5 = bitcast %union.u1* %un to %union.u2*, !dbg !59, !phasar.instruction.id !60
Got operands checking instruction (bitcast)
Adding line: 22
Adding line: 20
Adding line: 22

  %taint6 = bitcast %union.u2* %u5 to i8**, !dbg !61, !phasar.instruction.id !62
Got operands checking instruction (bitcast)
Adding line: 22
Adding line: 20
Adding line: 22

  %1 = load i8*, i8** %taint6, align 8, !dbg !61, !phasar.instruction.id !63
Got load instruction
Adding line: 22
Adding line: 20
Adding line: 22

  store i8* %1, i8** %b, align 8, !dbg !57, !phasar.instruction.id !64
Got store instruction
Adding line: 22
Adding line: 20
Adding line: 22

  %u = bitcast %union.u1* %un to %union.u2*, !dbg !35, !phasar.instruction.id !36
Got operands checking instruction (bitcast)

  %taint = bitcast %union.u2* %u to i8**, !dbg !37, !phasar.instruction.id !38
Got operands checking instruction (bitcast)

  store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43
Got call instruction

  %u1 = bitcast %union.u1* %un to %union.u2*, !dbg !44, !phasar.instruction.id !45
Got operands checking instruction (bitcast)

  %taint2 = bitcast %union.u2* %u1 to i8**, !dbg !46, !phasar.instruction.id !47
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48
Got load instruction
Adding load instruction fact

  store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49
Got store instruction
Adding store instruction

  %u3 = bitcast %union.u1* %un to %union.u2*, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)

  %a4 = bitcast %union.u2* %u3 to i32*, !dbg !52, !phasar.instruction.id !53
Got operands checking instruction (bitcast)

  store i32 1, i32* %a4, align 8, !dbg !54, !phasar.instruction.id !55
Got store instruction
Removing store instruction

  call void @llvm.dbg.declare(metadata i8** %b, metadata !56, metadata !30), !dbg !57, !phasar.instruction.id !58
Got call instruction

  %u5 = bitcast %union.u1* %un to %union.u2*, !dbg !59, !phasar.instruction.id !60
Got operands checking instruction (bitcast)

  %taint6 = bitcast %union.u2* %u5 to i8**, !dbg !61, !phasar.instruction.id !62
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint6, align 8, !dbg !61, !phasar.instruction.id !63
Got load instruction

  store i8* %1, i8** %b, align 8, !dbg !57, !phasar.instruction.id !64
Got store instruction

  call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !30), !dbg !31, !phasar.instruction.id !32
Got call instruction

  %un = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 1, i32* %a4, align 8, !dbg !54, !phasar.instruction.id !55
Got store instruction
Removing store instruction

  store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49
Got store instruction
Adding store instruction

  store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40
Got store instruction
Adding store instruction

  %u = bitcast %union.u1* %un to %union.u2*, !dbg !35, !phasar.instruction.id !36
Got operands checking instruction (bitcast)

  %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  %b = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %a = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %taint = bitcast %union.u2* %u to i8**, !dbg !37, !phasar.instruction.id !38
Got operands checking instruction (bitcast)

  call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %b, metadata !56, metadata !30), !dbg !57, !phasar.instruction.id !58
Got call instruction

  %u1 = bitcast %union.u1* %un to %union.u2*, !dbg !44, !phasar.instruction.id !45
Got operands checking instruction (bitcast)

  %taint2 = bitcast %union.u2* %u1 to i8**, !dbg !46, !phasar.instruction.id !47
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48
Got load instruction
Adding load instruction fact

  %u3 = bitcast %union.u1* %un to %union.u2*, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)

  %a4 = bitcast %union.u2* %u3 to i32*, !dbg !52, !phasar.instruction.id !53
Got operands checking instruction (bitcast)

  %u5 = bitcast %union.u1* %un to %union.u2*, !dbg !59, !phasar.instruction.id !60
Got operands checking instruction (bitcast)

  %taint6 = bitcast %union.u2* %u5 to i8**, !dbg !61, !phasar.instruction.id !62
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint6, align 8, !dbg !61, !phasar.instruction.id !63
Got load instruction

  store i8* %1, i8** %b, align 8, !dbg !57, !phasar.instruction.id !64
Got store instruction

  ret i32 0, !dbg !65, !phasar.instruction.id !66worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !30), !dbg !31, !phasar.instruction.id !32, ID: 6
Facts:
	EMPTY


Instruction:
%un = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 1, i32* %a4, align 8, !dbg !54, !phasar.instruction.id !55, ID: 18
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%u = bitcast %union.u1* %un to %union.u2*, !dbg !35, !phasar.instruction.id !36, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%b = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%taint = bitcast %union.u2* %u to i8**, !dbg !37, !phasar.instruction.id !38, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %a, metadata !41, metadata !30), !dbg !42, !phasar.instruction.id !43, ID: 11
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %b, metadata !56, metadata !30), !dbg !57, !phasar.instruction.id !58, ID: 19
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
%u1 = bitcast %union.u1* %un to %union.u2*, !dbg !44, !phasar.instruction62 2018-Dec-29 21:16:08.256352 - [INFO] Write results to file
63 2018-Dec-29 21:16:08.256608 - [INFO] Shutdown llvm and the analysis framework.

.id !45, ID: 12
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%taint2 = bitcast %union.u2* %u1 to i8**, !dbg !46, !phasar.instruction.id !47, ID: 13
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14
Facts:
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7


Instruction:
%u3 = bitcast %union.u1* %un to %union.u2*, !dbg !50, !phasar.instruction.id !51, ID: 16
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
%a4 = bitcast %union.u2* %u3 to i32*, !dbg !52, !phasar.instruction.id !53, ID: 17
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
store i8* %call, i8** %taint, align 8, !dbg !39, !phasar.instruction.id !40, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
%u5 = bitcast %union.u1* %un to %union.u2*, !dbg !59, !phasar.instruction.id !60, ID: 20
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
%taint6 = bitcast %union.u2* %u5 to i8**, !dbg !61, !phasar.instruction.id !62, ID: 21
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
%1 = load i8*, i8** %taint6, align 8, !dbg !61, !phasar.instruction.id !63, ID: 22
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
store i8* %1, i8** %b, align 8, !dbg !57, !phasar.instruction.id !64, ID: 23
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


Instruction:
ret i32 0, !dbg !65, !phasar.instruction.id !66, ID: 24
Facts:
store i8* %0, i8** %a, align 8, !dbg !42, !phasar.instruction.id !49, ID: 15
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !33, !phasar.instruction.id !34, ID: 7
%0 = load i8*, i8** %taint2, align 8, !dbg !46, !phasar.instruction.id !48, ID: 14


