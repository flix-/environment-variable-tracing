0 2018-Dec-29 12:41:39.542330 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-29 12:41:39.542791 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-29 12:41:39.543172 - [INFO] No configuration file is used.
3 2018-Dec-29 12:41:39.543252 - [INFO] Program options have been successfully parsed.
4 2018-Dec-29 12:41:39.543352 - [INFO] Check program options for logical errors.
5 2018-Dec-29 12:41:39.543442 - [INFO] Set-up IR database.
6 2018-Dec-29 12:41:39.552105 - [INFO] Constructed the analysis controller.
7 2018-Dec-29 12:41:39.552225 - [INFO] Found the following IR files for this project: 
8 2018-Dec-29 12:41:39.552286 - [INFO] 	main.ll
9 2018-Dec-29 12:41:39.552345 - [INFO] Check for chosen entry points.
10 2018-Dec-29 12:41:39.552407 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-29 12:41:39.552465 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-29 12:41:39.552525 - [INFO] Preprocess module: main.ll
13 2018-Dec-29 12:41:39.552884 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-29 12:41:39.553037 - [INFO] Running ValueAnnotationPass
15 2018-Dec-29 12:41:39.553415 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-29 12:41:39.553478 - [INFO] Allocated Types    : 4
17 2018-Dec-29 12:41:39.553542 - [INFO] Allocation Sites   : 5
18 2018-Dec-29 12:41:39.553600 - [INFO] Basic Blocks       : 1
19 2018-Dec-29 12:41:39.553657 - [INFO] Calls Sites        : 6
20 2018-Dec-29 12:41:39.553714 - [INFO] Functions          : 4
21 2018-Dec-29 12:41:39.553771 - [INFO] Globals            : 1
22 2018-Dec-29 12:41:39.553829 - [INFO] Global Pointer     : 1
23 2018-Dec-29 12:41:39.553886 - [INFO] Instructions       : 27
24 2018-Dec-29 12:41:39.553943 - [INFO] Memory Intrinsics  : 1
25 2018-Dec-29 12:41:39.554000 - [INFO] Store Instructions : 4
26 2018-Dec-29 12:41:39.554057 - [INFO]  
27 2018-Dec-29 12:41:39.554131 - [INFO]   i32
28 2018-Dec-29 12:41:39.554198 - [INFO]   %struct.a = type { i32, %struct.b }
29 2018-Dec-29 12:41:39.554262 - [INFO]   %struct.b = type { i8* }
30 2018-Dec-29 12:41:39.554324 - [INFO]   i8*
31 2018-Dec-29 12:41:39.554992 - [DEBUG] Analyzing function: main
32 2018-Dec-29 12:41:39.559437 - [INFO] Reconstruct the class hierarchy.
33 2018-Dec-29 12:41:39.559513 - [INFO] Construct type hierarchy
34 2018-Dec-29 12:41:39.559575 - [DEBUG] Analyse types in module: main.ll
35 2018-Dec-29 12:41:39.559822 - [DEBUG] Reconstruct virtual function table for module: main.ll
36 2018-Dec-29 12:41:39.559974 - [INFO] Reconstruction of class hierarchy completed.
37 2018-Dec-29 12:41:39.560038 - [INFO] Starting CallGraphAnalysisType: OTF
38 2018-Dec-29 12:41:39.560285 - [DEBUG] Walking in function: main
39 2018-Dec-29 12:41:39.560366 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.a* %s1, metadata !18, metadata !28), !dbg !29, !phasar.instruction.id !30, ID: 7
40 2018-Dec-29 12:41:39.560803 - [DEBUG] Found 1 possible target(s)
41 2018-Dec-29 12:41:39.560865 - [DEBUG] Target name: llvm.dbg.declare
42 2018-Dec-29 12:41:39.560952 - [DEBUG] Walking in function: llvm.dbg.declare
43 2018-Dec-29 12:41:39.561016 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
44 2018-Dec-29 12:41:39.561081 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
45 2018-Dec-29 12:41:39.561700 - [DEBUG] Found 1 possible target(s)
46 2018-Dec-29 12:41:39.561761 - [DEBUG] Target name: getenv
47 2018-Dec-29 12:41:39.561848 - [DEBUG] Walking in function: getenv
48 2018-Dec-29 12:41:39.561911 - [DEBUG] Function already visited or only declaration: getenv
49 2018-Dec-29 12:41:39.561975 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41, ID: 12
50 2018-Dec-29 12:41:39.562302 - [DEBUG] Found 1 possible target(s)
51 2018-Dec-29 12:41:39.562361 - [DEBUG] Target name: llvm.dbg.declare
52 2018-Dec-29 12:41:39.562436 - [DEBUG] Walking in function: llvm.dbg.declare
53 2018-Dec-29 12:41:39.562517 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
54 2018-Dec-29 12:41:39.562581 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50, ID: 17
55 2018-Dec-29 12:41:39.562901 - [DEBUG] Found 1 possible target(s)
56 2018-Dec-29 12:41:39.562960 - [DEBUG] Target name: llvm.dbg.declare
57 2018-Dec-29 12:41:39.563035 - [DEBUG] Walking in function: llvm.dbg.declare
58 2018-Dec-29 12:41:39.563097 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
59 2018-Dec-29 12:41:39.563161 - [DEBUG] Found static call-site: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56, ID: 21
60 2018-Dec-29 12:41:39.563498 - [DEBUG] Found 1 possible target(s)
61 2018-Dec-29 12:41:39.563557 - [DEBUG] Target name: llvm.memcpy.p0i8.p0i8.i64
62 2018-Dec-29 12:41:39.563635 - [DEBUG] Walking in function: llvm.memcpy.p0i8.p0i8.i64
63 2018-Dec-29 12:41:39.563697 - [DEBUG] Function already visited or only declaration: llvm.memcpy.p0i8.p0i8.i64
64 2018-Dec-29 12:41:39.563760 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59, ID: 22
65 2018-Dec-29 12:41:39.564079 - [DEBUG] Found 1 possible target(s)
66 2018-Dec-29 12:41:39.564138 - [DEBUG] Target name: llvm.dbg.declare
67 2018-Dec-29 12:41:39.564212 - [DEBUG] Walking in function: llvm.dbg.declare
68 2018-Dec-29 12:41:39.564274 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
69 2018-Dec-29 12:41:39.564337 - [INFO] Call graph has been constructed
70 2018-Dec-29 12:41:39.564399 - [INFO] Performing analysis: plugin
71 2018-Dec-29 12:41:39.564466 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
72 2018-Dec-29 12:41:39.564986 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %s2_inner = alloca %struct.b, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction

  call void @llvm.dbg.declare(metadata %struct.a* %s1, metadata !18, metadata !28), !dbg !29, !phasar.instruction.id !30
Got call instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
Got call instruction
Adding call instruction fact
Adding line: 18

  %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34
Adding line: 18

  %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36
Adding line: 18

  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
Got store instruction
Adding store instruction
Adding line: 18
Adding line: 18

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41
Got call instruction
Adding line: 18
Adding line: 18

  %b1 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43
Adding line: 18
Adding line: 18

  %taint2 = getelementptr inbounds %struct.b, %struct.b* %b1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
Adding line: 18
Adding line: 18

  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
Got load instruction
Adding load instruction fact
Adding line: 18
Adding line: 18
Adding line: 20

  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
Got store instruction
Adding store instruction
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20

  call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50
Got call instruction
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20

  %b3 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20

  %1 = bitcast %struct.b* %b3 to i8*, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20

  %2 = bitcast %struct.b* %s2_inner to i8*, !dbg !53, !phasar.instruction.id !55
Got operands checking instruction (bitcast)
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20

  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56
Got call instruction
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59
Got call instruction
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20

  %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20

  %taint5 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20

  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
Got load instruction
Adding load instruction fact
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20
Adding line: 25

  store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65
Got store instruction
Adding store instruction
Adding line: 25
Adding line: 20
Adding line: 18
Adding line: 18
Adding line: 20
Adding line: 25

  %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34

  %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36

  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41
Got call instruction

  %b1 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43

  %taint2 = getelementptr inbounds %struct.b, %struct.b* %b1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45

  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
Got load instruction
Adding load instruction fact

  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50
Got call instruction

  %b3 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52

  %1 = bitcast %struct.b* %b3 to i8*, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)

  %2 = bitcast %struct.b* %s2_inner to i8*, !dbg !53, !phasar.instruction.id !55
Got operands checking instruction (bitcast)

  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59
Got call instruction

  %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61

  %taint5 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63

  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
Got load instruction
Adding load instruction fact

  store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65
Got store instruction
Adding store instruction

  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56
Got call instruction

  call void @llvm.dbg.declare(metadata %struct.a* %s1, metadata !18, metadata !28), !dbg !29, !phasar.instruction.id !30
Got call instruction

  %s1 = alloca %struct.a, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65
Got store instruction
Adding store instruction

  store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47
Got store instruction
Adding store instruction

  %taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36

  store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38
Got store instruction
Adding store instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction

  %b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34

  %s2_inner = alloca %struct.b, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41
Got call instruction

  call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50
Got call instruction

  %b1 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43

  %taint2 = getelementptr inbounds %struct.b, %struct.b* %b1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45

  %0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46
Got load instruction
Adding load instruction fact

  %b3 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52

  %1 = bitcast %struct.b* %b3 to i8*, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)

  %2 = bitcast %struct.b* %s2_inner to i8*, !dbg !53, !phasar.instruction.id !55
Got operands checking instruction (bitcast)

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59
Got call instruction

  %b4 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61

  %taint5 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63

  %3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64
Got load instruction
Adding load instruction fact

  ret i32 0, !dbg !66, !phasar.instruction.id !67worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 8, i32 8, i1 false), !dbg !53, !phasar.instruction.id !56, ID: 21
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
call void @llvm.dbg.declare(metadata %struct.a* %s1, metadata !18, metadata !28), !dbg !29, !phasar.instruction.id !30, ID: 7
Facts:
	EMPTY


Instruction:
%s1 = alloca %struct.a, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65, ID: 26
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15
%3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64, ID: 25


Instruction:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%taint = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !35, !phasar.instruction.id !36, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%b = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !33, !phasar.instruction.id !34, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%s2_inner = alloca %struct.b, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%not_tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !39, metadata !28), !dbg !40, !phasar.instruction.id !41, ID: 12
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
call void @llvm.dbg.declare(metadata %struct.b* %s2_inner, metadata !48, metadata !28), !dbg !49, !phasar.instruction.id !50, ID: 17
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%b1 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !42, !phasar.instruction.id !43, ID: 13
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%taint2 = getelementptr inbounds %struct.b, %struct.b* %b1, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 14
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15
Facts:
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8


Instruction:
%b3 = getelementptr inbounds %struct.a, %struct.a* %s1, i32 0, i32 1, !dbg !51, !phasar.instruction.id !52, ID: 18
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%1 = bitcast %struct.b* %b3 to i8*, !dbg !53, !phasar.instruction.id !54, ID: 19
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%2 = bitcast %struct.b* %s2_inner to i8*, !dbg !53, !phasar.instruction.id !55, ID: 20
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !57, metadata !28), !dbg !58, !phasar.instruction.id !59, ID: 22
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%b4 = getelementptr inbounds %struct.a, %struct.a* %s73 2018-Dec-29 12:41:39.607547 - [INFO] Write results to file
74 2018-Dec-29 12:41:39.607740 - [INFO] Shutdown llvm and the analysis framework.

1, i32 0, i32 1, !dbg !60, !phasar.instruction.id !61, ID: 23
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%taint5 = getelementptr inbounds %struct.b, %struct.b* %b4, i32 0, i32 0, !dbg !62, !phasar.instruction.id !63, ID: 24
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
%3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64, ID: 25
Facts:
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15


Instruction:
ret i32 0, !dbg !66, !phasar.instruction.id !67, ID: 27
Facts:
store i8* %3, i8** %not_tainted, align 8, !dbg !58, !phasar.instruction.id !65, ID: 26
store i8* %0, i8** %tainted, align 8, !dbg !40, !phasar.instruction.id !47, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !37, !phasar.instruction.id !38, ID: 11
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !31, !phasar.instruction.id !32, ID: 8
%0 = load i8*, i8** %taint2, align 8, !dbg !44, !phasar.instruction.id !46, ID: 15
%3 = load i8*, i8** %taint5, align 8, !dbg !62, !phasar.instruction.id !64, ID: 25


