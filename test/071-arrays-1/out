0 2019-Jan-05 14:31:29.155522 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 14:31:29.155927 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 14:31:29.156295 - [INFO] No configuration file is used.
3 2019-Jan-05 14:31:29.156374 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 14:31:29.156472 - [INFO] Check program options for logical errors.
5 2019-Jan-05 14:31:29.156561 - [INFO] Set-up IR database.
6 2019-Jan-05 14:31:29.161750 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 14:31:29.161875 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 14:31:29.161937 - [INFO] 	main.ll
9 2019-Jan-05 14:31:29.161996 - [INFO] Check for chosen entry points.
10 2019-Jan-05 14:31:29.162058 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 14:31:29.162116 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 14:31:29.162176 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 14:31:29.162520 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 14:31:29.162642 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 14:31:29.162940 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 14:31:29.163004 - [INFO] Allocated Types    : 2
17 2019-Jan-05 14:31:29.163068 - [INFO] Allocation Sites   : 3
18 2019-Jan-05 14:31:29.163125 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 14:31:29.163183 - [INFO] Calls Sites        : 3
20 2019-Jan-05 14:31:29.163240 - [INFO] Functions          : 3
21 2019-Jan-05 14:31:29.163297 - [INFO] Globals            : 1
22 2019-Jan-05 14:31:29.163355 - [INFO] Global Pointer     : 1
23 2019-Jan-05 14:31:29.163412 - [INFO] Instructions       : 16
24 2019-Jan-05 14:31:29.163470 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 14:31:29.163527 - [INFO] Store Instructions : 4
26 2019-Jan-05 14:31:29.163584 - [INFO]  
27 2019-Jan-05 14:31:29.163663 - [INFO]   i32
28 2019-Jan-05 14:31:29.163727 - [INFO]   [2 x i32]
29 2019-Jan-05 14:31:29.164183 - [DEBUG] Analyzing function: main
30 2019-Jan-05 14:31:29.164686 - [INFO] Reconstruct the class hierarchy.
31 2019-Jan-05 14:31:29.164756 - [INFO] Construct type hierarchy
32 2019-Jan-05 14:31:29.164816 - [DEBUG] Analyse types in module: main.ll
33 2019-Jan-05 14:31:29.164971 - [DEBUG] Reconstruct virtual function table for module: main.ll
34 2019-Jan-05 14:31:29.165040 - [INFO] Reconstruction of class hierarchy completed.
35 2019-Jan-05 14:31:29.165102 - [INFO] Starting CallGraphAnalysisType: OTF
36 2019-Jan-05 14:31:29.165230 - [DEBUG] Walking in function: main
37 2019-Jan-05 14:31:29.165316 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata [2 x i32]* %numbers, metadata !16, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 5
38 2019-Jan-05 14:31:29.165627 - [DEBUG] Found 1 possible target(s)
39 2019-Jan-05 14:31:29.165687 - [DEBUG] Target name: llvm.dbg.declare
40 2019-Jan-05 14:31:29.165769 - [DEBUG] Walking in function: llvm.dbg.declare
41 2019-Jan-05 14:31:29.165832 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
42 2019-Jan-05 14:31:29.165895 - [DEBUG] Found static call-site: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6
43 2019-Jan-05 14:31:29.166169 - [DEBUG] Found 1 possible target(s)
44 2019-Jan-05 14:31:29.166228 - [DEBUG] Target name: getenv
45 2019-Jan-05 14:31:29.166308 - [DEBUG] Walking in function: getenv
46 2019-Jan-05 14:31:29.166370 - [DEBUG] Function already visited or only declaration: getenv
47 2019-Jan-05 14:31:29.166434 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %rc, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35, ID: 11
48 2019-Jan-05 14:31:29.166665 - [DEBUG] Found 1 possible target(s)
49 2019-Jan-05 14:31:29.166724 - [DEBUG] Target name: llvm.dbg.declare
50 2019-Jan-05 14:31:29.166798 - [DEBUG] Walking in function: llvm.dbg.declare
51 2019-Jan-05 14:31:29.166860 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
52 2019-Jan-05 14:31:29.166941 - [INFO] Call graph has been constructed
53 2019-Jan-05 14:31:29.167003 - [INFO] Performing analysis: plugin
54 2019-Jan-05 14:31:29.167069 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
55 2019-Jan-05 14:31:29.167596 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %numbers = alloca [2 x i32], align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %rc = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata [2 x i32]* %numbers, metadata !16, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction
Dumping facts
=============
=============


  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 9

  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !25, !phasar.instruction.id !26
Dumping facts
=============
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 9

  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 9
Added line number: 9

  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 9
Added line number: 9

  store i32 1, i32* %arrayidx1, align 4, !dbg !31, !phasar.instruction.id !32
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 9
Added line number: 9

  call void @llvm.dbg.declare(metadata i32* %rc, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35
Got call instruction
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 9
Added line number: 9

  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !36, !phasar.instruction.id !37
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 9
Added line number: 9

  %0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38
=============

Added line number: 9
Added line number: 9
Added line number: 12

  store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !39
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !39
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38
=============

Added line number: 12
Added line number: 9
Added line number: 9
Added line number: 12

  %1 = load i32, i32* %rc, align 4, !dbg !40, !phasar.instruction.id !41
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !39
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38
  %1 = load i32, i32* %rc, align 4, !dbg !40, !phasar.instruction.id !41
=============

Added line number: 12
Added line number: 9
Added line number: 9
Added line number: 12
Added line number: 14

  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !25, !phasar.instruction.id !26
Dumping facts
=============
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  store i32 1, i32* %arrayidx1, align 4, !dbg !31, !phasar.instruction.id !32
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  call void @llvm.dbg.declare(metadata i32* %rc, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35
Got call instruction
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !36, !phasar.instruction.id !37
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38
=============


  store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !39
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !39
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38
=============


  %1 = load i32, i32* %rc, align 4, !dbg !40, !phasar.instruction.id !41
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !39
  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38
  %1 = load i32, i32* %rc, align 4, !dbg !40, !phasar.instruction.id !41
=============


  call void @llvm.dbg.declare(metadata [2 x i32]* %numbers, metadata !16, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction

  %numbers = alloca [2 x i32], align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %rc = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !39
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i32 1, i32* %arrayidx1, align 4, !dbg !31, !phasar.instruction.id !32
Got store instruction
Removed 0 memory locations from facts

  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30

  store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
Got store instruction
Removed 0 memory locations from facts

  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !25, !phasar.instruction.id !26

  call void @llvm.dbg.declare(metadata i32* %rc, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35
Got call instruction

  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !36, !phasar.instruction.id !37

  %0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38
Got load instruction
Adding load instruction fact

  %1 = load i32, i32* %rc, align 4, !dbg !40, !phasar.instruction.id !41
Got load instruction
Adding load instruction fact

  ret i32 %1, !dbg !42, !phasar.instruction.id !43worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata [2 x i32]* %numbers, metadata !16, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 5
Facts:
	EMPTY


Instruction:
%numbers = alloca [2 x i32], align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%rc = alloca i32, align 4, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !39, ID: 14
Facts:
store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6
%0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38, ID: 13


Instruction:
store i32 1, i32* %arrayidx1, align 4, !dbg !31, !phasar.instruction.id !32, ID: 10
Facts:
store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6


Instruction:
%arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 1, !dbg !29, !phasar.instruction.id !30, ID: 9
Facts:
store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6


Instruction:
store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28, ID: 8
Facts:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6


Instruction:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !25, !phasar.instruction.id !26, ID: 7
Facts:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6


Instruction:
call void @llvm.dbg.declare(metadata i32* %rc, metadata !33, metadata !20), !dbg !34, !phasar.instruction.id !35, ID: 11
Facts:
store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6


Instruction:
%arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !36, !phasar.instruction.id !37, ID: 12
Facts:
store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6


Instruction:
%0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38, ID: 13
Facts:
store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6


Instruction:
%1 = load i32, i32* %rc, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15
Facts:
store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruc56 2019-Jan-05 14:31:29.190889 - [INFO] Write results to file
57 2019-Jan-05 14:31:29.191067 - [INFO] Shutdown llvm and the analysis framework.

tion.id !39, ID: 14
store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6
%0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38, ID: 13


Instruction:
ret i32 %1, !dbg !42, !phasar.instruction.id !43, ID: 16
Facts:
store i32 %0, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !39, ID: 14
store i32 %call, i32* %arrayidx, align 4, !dbg !27, !phasar.instruction.id !28, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 6
%0 = load i32, i32* %arrayidx2, align 4, !dbg !36, !phasar.instruction.id !38, ID: 13
%1 = load i32, i32* %rc, align 4, !dbg !40, !phasar.instruction.id !41, ID: 15


