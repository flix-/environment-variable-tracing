0 2018-Dec-29 21:15:52.519483 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-29 21:15:52.519913 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-29 21:15:52.520267 - [INFO] No configuration file is used.
3 2018-Dec-29 21:15:52.520345 - [INFO] Program options have been successfully parsed.
4 2018-Dec-29 21:15:52.520444 - [INFO] Check program options for logical errors.
5 2018-Dec-29 21:15:52.520534 - [INFO] Set-up IR database.
6 2018-Dec-29 21:15:52.525413 - [INFO] Constructed the analysis controller.
7 2018-Dec-29 21:15:52.525527 - [INFO] Found the following IR files for this project: 
8 2018-Dec-29 21:15:52.525588 - [INFO] 	main.ll
9 2018-Dec-29 21:15:52.525647 - [INFO] Check for chosen entry points.
10 2018-Dec-29 21:15:52.525708 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-29 21:15:52.525767 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-29 21:15:52.525827 - [INFO] Preprocess module: main.ll
13 2018-Dec-29 21:15:52.526175 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-29 21:15:52.526306 - [INFO] Running ValueAnnotationPass
15 2018-Dec-29 21:15:52.526637 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-29 21:15:52.526700 - [INFO] Allocated Types    : 2
17 2018-Dec-29 21:15:52.526772 - [INFO] Allocation Sites   : 4
18 2018-Dec-29 21:15:52.526830 - [INFO] Basic Blocks       : 3
19 2018-Dec-29 21:15:52.526887 - [INFO] Calls Sites        : 3
20 2018-Dec-29 21:15:52.526945 - [INFO] Functions          : 2
21 2018-Dec-29 21:15:52.527002 - [INFO] Globals            : 1
22 2018-Dec-29 21:15:52.527060 - [INFO] Global Pointer     : 1
23 2018-Dec-29 21:15:52.527117 - [INFO] Instructions       : 18
24 2018-Dec-29 21:15:52.527174 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-29 21:15:52.527232 - [INFO] Store Instructions : 4
26 2018-Dec-29 21:15:52.527289 - [INFO]  
27 2018-Dec-29 21:15:52.527369 - [INFO]   i32
28 2018-Dec-29 21:15:52.527432 - [INFO]   i8*
29 2018-Dec-29 21:15:52.527884 - [DEBUG] Analyzing function: main
30 2018-Dec-29 21:15:52.528561 - [INFO] Reconstruct the class hierarchy.
31 2018-Dec-29 21:15:52.528630 - [INFO] Construct type hierarchy
32 2018-Dec-29 21:15:52.528692 - [DEBUG] Analyse types in module: main.ll
33 2018-Dec-29 21:15:52.528854 - [DEBUG] Reconstruct virtual function table for module: main.ll
34 2018-Dec-29 21:15:52.528923 - [INFO] Reconstruction of class hierarchy completed.
35 2018-Dec-29 21:15:52.528986 - [INFO] Starting CallGraphAnalysisType: OTF
36 2018-Dec-29 21:15:52.529104 - [DEBUG] Walking in function: main
37 2018-Dec-29 21:15:52.529191 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %no_taint, metadata !19, metadata !22), !dbg !23, !phasar.instruction.id !24, ID: 6
38 2018-Dec-29 21:15:52.529510 - [DEBUG] Found 1 possible target(s)
39 2018-Dec-29 21:15:52.529570 - [DEBUG] Target name: llvm.dbg.declare
40 2018-Dec-29 21:15:52.529652 - [DEBUG] Walking in function: llvm.dbg.declare
41 2018-Dec-29 21:15:52.529716 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
42 2018-Dec-29 21:15:52.529780 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %ret, metadata !26, metadata !22), !dbg !27, !phasar.instruction.id !28, ID: 8
43 2018-Dec-29 21:15:52.530036 - [DEBUG] Found 1 possible target(s)
44 2018-Dec-29 21:15:52.530095 - [DEBUG] Target name: llvm.dbg.declare
45 2018-Dec-29 21:15:52.530169 - [DEBUG] Walking in function: llvm.dbg.declare
46 2018-Dec-29 21:15:52.530232 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
47 2018-Dec-29 21:15:52.530296 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a, metadata !36, metadata !22), !dbg !38, !phasar.instruction.id !39, ID: 12
48 2018-Dec-29 21:15:52.530549 - [DEBUG] Found 1 possible target(s)
49 2018-Dec-29 21:15:52.530608 - [DEBUG] Target name: llvm.dbg.declare
50 2018-Dec-29 21:15:52.530682 - [DEBUG] Walking in function: llvm.dbg.declare
51 2018-Dec-29 21:15:52.530744 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
52 2018-Dec-29 21:15:52.530828 - [INFO] Call graph has been constructed
53 2018-Dec-29 21:15:52.530890 - [INFO] Performing analysis: plugin
54 2018-Dec-29 21:15:52.530956 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
55 2018-Dec-29 21:15:52.531448 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %no_taint = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %ret = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %a = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !18
Got store instruction

  call void @llvm.dbg.declare(metadata i8** %no_taint, metadata !19, metadata !22), !dbg !23, !phasar.instruction.id !24
Got call instruction

  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8** %no_taint, align 8, !dbg !23, !phasar.instruction.id !25
Got store instruction

  call void @llvm.dbg.declare(metadata i32* %ret, metadata !26, metadata !22), !dbg !27, !phasar.instruction.id !28
Got call instruction

  %0 = load i8*, i8** %no_taint, align 8, !dbg !29, !phasar.instruction.id !31
Got load instruction

  %cmp = icmp ne i8* %0, null, !dbg !32, !phasar.instruction.id !33
Got operands checking instruction (icmp)

  br i1 %cmp, label %if.then, label %if.end, !dbg !34, !phasar.instruction.id !35
Got branch instruction

  br i1 %cmp, label %if.then, label %if.end, !dbg !34, !phasar.instruction.id !35
Got branch instruction

  call void @llvm.dbg.declare(metadata i32* %a, metadata !36, metadata !22), !dbg !38, !phasar.instruction.id !39
Got call instruction

  store i32 42, i32* %a, align 4, !dbg !38, !phasar.instruction.id !40
Got store instruction

  %1 = load i32, i32* %a, align 4, !dbg !41, !phasar.instruction.id !42
Got load instruction

  store i32 %1, i32* %ret, align 4, !dbg !43, !phasar.instruction.id !44
Got store instruction

  br label %if.end, !dbg !45, !phasar.instruction.id !46
Got branch instruction

  %2 = load i32, i32* %ret, align 4, !dbg !47, !phasar.instruction.id !48
Got load instruction

  call void @llvm.dbg.declare(metadata i8** %no_taint, metadata !19, metadata !22), !dbg !23, !phasar.instruction.id !24
Got call instruction

  %no_taint = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %ret = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  store i32 %1, i32* %ret, align 4, !dbg !43, !phasar.instruction.id !44
Got store instruction

  store i32 42, i32* %a, align 4, !dbg !38, !phasar.instruction.id !40
Got store instruction

  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8** %no_taint, align 8, !dbg !23, !phasar.instruction.id !25
Got store instruction

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !18
Got store instruction

  %cmp = icmp ne i8* %0, null, !dbg !32, !phasar.instruction.id !33
Got operands checking instruction (icmp)

  call void @llvm.dbg.declare(metadata i32* %ret, metadata !26, metadata !22), !dbg !27, !phasar.instruction.id !28
Got call instruction

  %0 = load i8*, i8** %no_taint, align 8, !dbg !29, !phasar.instruction.id !31
Got load instruction

  call void @llvm.dbg.declare(metadata i32* %a, metadata !36, metadata !22), !dbg !38, !phasar.instruction.id !39
Got call instruction

  %a = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  %1 = load i32, i32* %a, align 4, !dbg !41, !phasar.instruction.id !42
Got load instruction

  %2 = load i32, i32* %ret, align 4, !dbg !47, !phasar.instruction.id !48
Got load instruction

  br i1 %cmp, label %if.then, label %if.end, !dbg !34, !phasar.instruction.id !35
Got branch instruction

  br label %if.end, !dbg !45, !phasar.instruction.id !46
Got branch instruction

  ret i32 %2, !dbg !49, !phasar.instruction.id !5056 2018-Dec-29 21:15:52.542746 - [INFO] Write results to file
57 2018-Dec-29 21:15:52.542914 - [INFO] Shutdown llvm and the analysis framework.

worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata i8** %no_taint, metadata !19, metadata !22), !dbg !23, !phasar.instruction.id !24, ID: 6
Facts:
	EMPTY


Instruction:
%no_taint = alloca i8*, align 8, !phasar.instruction.id !15, ID: 2
Facts:
	EMPTY


Instruction:
%ret = alloca i32, align 4, !phasar.instruction.id !16, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !14, ID: 1
Facts:
	EMPTY


Instruction:
store i32 %1, i32* %ret, align 4, !dbg !43, !phasar.instruction.id !44, ID: 15
Facts:
	EMPTY


Instruction:
store i32 42, i32* %a, align 4, !dbg !38, !phasar.instruction.id !40, ID: 13
Facts:
	EMPTY


Instruction:
store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8** %no_taint, align 8, !dbg !23, !phasar.instruction.id !25, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !18, ID: 5
Facts:
	EMPTY


Instruction:
%cmp = icmp ne i8* %0, null, !dbg !32, !phasar.instruction.id !33, ID: 10
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %ret, metadata !26, metadata !22), !dbg !27, !phasar.instruction.id !28, ID: 8
Facts:
	EMPTY


Instruction:
%0 = load i8*, i8** %no_taint, align 8, !dbg !29, !phasar.instruction.id !31, ID: 9
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %a, metadata !36, metadata !22), !dbg !38, !phasar.instruction.id !39, ID: 12
Facts:
	EMPTY


Instruction:
%a = alloca i32, align 4, !phasar.instruction.id !17, ID: 4
Facts:
	EMPTY


Instruction:
%1 = load i32, i32* %a, align 4, !dbg !41, !phasar.instruction.id !42, ID: 14
Facts:
	EMPTY


Instruction:
%2 = load i32, i32* %ret, align 4, !dbg !47, !phasar.instruction.id !48, ID: 17
Facts:
	EMPTY


Instruction:
br i1 %cmp, label %if.then, label %if.end, !dbg !34, !phasar.instruction.id !35, ID: 11
Facts:
	EMPTY


Instruction:
br label %if.end, !dbg !45, !phasar.instruction.id !46, ID: 16
Facts:
	EMPTY


Instruction:
ret i32 %2, !dbg !49, !phasar.instruction.id !50, ID: 18
Facts:
	EMPTY


