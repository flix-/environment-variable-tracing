0 2019-Jan-05 14:31:46.060643 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 14:31:46.061059 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 14:31:46.061405 - [INFO] No configuration file is used.
3 2019-Jan-05 14:31:46.061481 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 14:31:46.061578 - [INFO] Check program options for logical errors.
5 2019-Jan-05 14:31:46.061668 - [INFO] Set-up IR database.
6 2019-Jan-05 14:31:46.066058 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 14:31:46.066165 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 14:31:46.066227 - [INFO] 	main.ll
9 2019-Jan-05 14:31:46.066286 - [INFO] Check for chosen entry points.
10 2019-Jan-05 14:31:46.066348 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 14:31:46.066406 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 14:31:46.066466 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 14:31:46.066801 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 14:31:46.066925 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 14:31:46.067234 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 14:31:46.067323 - [INFO] Allocated Types    : 2
17 2019-Jan-05 14:31:46.067387 - [INFO] Allocation Sites   : 4
18 2019-Jan-05 14:31:46.067445 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 14:31:46.067502 - [INFO] Calls Sites        : 4
20 2019-Jan-05 14:31:46.067559 - [INFO] Functions          : 3
21 2019-Jan-05 14:31:46.067617 - [INFO] Globals            : 1
22 2019-Jan-05 14:31:46.067674 - [INFO] Global Pointer     : 1
23 2019-Jan-05 14:31:46.067731 - [INFO] Instructions       : 17
24 2019-Jan-05 14:31:46.067789 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 14:31:46.067846 - [INFO] Store Instructions : 5
26 2019-Jan-05 14:31:46.067903 - [INFO]  
27 2019-Jan-05 14:31:46.067982 - [INFO]   i32
28 2019-Jan-05 14:31:46.068045 - [INFO]   i32*
29 2019-Jan-05 14:31:46.068473 - [DEBUG] Analyzing function: main
30 2019-Jan-05 14:31:46.069317 - [INFO] Reconstruct the class hierarchy.
31 2019-Jan-05 14:31:46.069384 - [INFO] Construct type hierarchy
32 2019-Jan-05 14:31:46.069444 - [DEBUG] Analyse types in module: main.ll
33 2019-Jan-05 14:31:46.069600 - [DEBUG] Reconstruct virtual function table for module: main.ll
34 2019-Jan-05 14:31:46.069669 - [INFO] Reconstruction of class hierarchy completed.
35 2019-Jan-05 14:31:46.069731 - [INFO] Starting CallGraphAnalysisType: OTF
36 2019-Jan-05 14:31:46.069857 - [DEBUG] Walking in function: main
37 2019-Jan-05 14:31:46.069944 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a, metadata !17, metadata !18), !dbg !19, !phasar.instruction.id !20, ID: 6
38 2019-Jan-05 14:31:46.070241 - [DEBUG] Found 1 possible target(s)
39 2019-Jan-05 14:31:46.070302 - [DEBUG] Target name: llvm.dbg.declare
40 2019-Jan-05 14:31:46.070383 - [DEBUG] Walking in function: llvm.dbg.declare
41 2019-Jan-05 14:31:46.070447 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
42 2019-Jan-05 14:31:46.070511 - [DEBUG] Found static call-site: %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7
43 2019-Jan-05 14:31:46.070833 - [DEBUG] Found 1 possible target(s)
44 2019-Jan-05 14:31:46.070892 - [DEBUG] Target name: getenv
45 2019-Jan-05 14:31:46.070973 - [DEBUG] Walking in function: getenv
46 2019-Jan-05 14:31:46.071035 - [DEBUG] Function already visited or only declaration: getenv
47 2019-Jan-05 14:31:46.071099 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32** %b, metadata !24, metadata !18), !dbg !26, !phasar.instruction.id !27, ID: 9
48 2019-Jan-05 14:31:46.071335 - [DEBUG] Found 1 possible target(s)
49 2019-Jan-05 14:31:46.071394 - [DEBUG] Target name: llvm.dbg.declare
50 2019-Jan-05 14:31:46.071468 - [DEBUG] Walking in function: llvm.dbg.declare
51 2019-Jan-05 14:31:46.071530 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
52 2019-Jan-05 14:31:46.071610 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %c, metadata !33, metadata !18), !dbg !34, !phasar.instruction.id !35, ID: 13
53 2019-Jan-05 14:31:46.071845 - [DEBUG] Found 1 possible target(s)
54 2019-Jan-05 14:31:46.071904 - [DEBUG] Target name: llvm.dbg.declare
55 2019-Jan-05 14:31:46.071979 - [DEBUG] Walking in function: llvm.dbg.declare
56 2019-Jan-05 14:31:46.072041 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
57 2019-Jan-05 14:31:46.072103 - [INFO] Call graph has been constructed
58 2019-Jan-05 14:31:46.072165 - [INFO] Performing analysis: plugin
59 2019-Jan-05 14:31:46.072231 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
60 2019-Jan-05 14:31:46.072740 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %b = alloca i32*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %c = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i32* %a, metadata !17, metadata !18), !dbg !19, !phasar.instruction.id !20
Got call instruction
Dumping facts
=============
=============


  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
=============

Added line number: 8

  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
=============

Added line number: 8
Added line number: 8

  call void @llvm.dbg.declare(metadata i32** %b, metadata !24, metadata !18), !dbg !26, !phasar.instruction.id !27
Got call instruction
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
=============

Added line number: 8
Added line number: 8

  store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
=============

Added line number: 9
Added line number: 8
Added line number: 8

  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============

Added line number: 9
Added line number: 8
Added line number: 8
Added line number: 11

  store i32 1, i32* %0, align 4, !dbg !31, !phasar.instruction.id !32
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============

Added line number: 8
Added line number: 8
Added line number: 11

  call void @llvm.dbg.declare(metadata i32* %c, metadata !33, metadata !18), !dbg !34, !phasar.instruction.id !35
Got call instruction
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============

Added line number: 8
Added line number: 8
Added line number: 11

  %1 = load i32*, i32** %b, align 8, !dbg !36, !phasar.instruction.id !37
Got load instruction
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============

Added line number: 8
Added line number: 8
Added line number: 11

  %2 = load i32, i32* %1, align 4, !dbg !38, !phasar.instruction.id !39
Got load instruction
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============

Added line number: 8
Added line number: 8
Added line number: 11

  store i32 %2, i32* %c, align 4, !dbg !34, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============

Added line number: 8
Added line number: 8
Added line number: 11

  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
=============


  call void @llvm.dbg.declare(metadata i32** %b, metadata !24, metadata !18), !dbg !26, !phasar.instruction.id !27
Got call instruction
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
=============


  store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
=============


  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============


  store i32 1, i32* %0, align 4, !dbg !31, !phasar.instruction.id !32
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============


  call void @llvm.dbg.declare(metadata i32* %c, metadata !33, metadata !18), !dbg !34, !phasar.instruction.id !35
Got call instruction
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============


  %1 = load i32*, i32** %b, align 8, !dbg !36, !phasar.instruction.id !37
Got load instruction
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============


  %2 = load i32, i32* %1, align 4, !dbg !38, !phasar.instruction.id !39
Got load instruction
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============


  store i32 %2, i32* %c, align 4, !dbg !34, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
=============


  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i32* %a, metadata !17, metadata !18), !dbg !19, !phasar.instruction.id !20
Got call instruction

  %a = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %b = alloca i32*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  store i32 1, i32* %0, align 4, !dbg !31, !phasar.instruction.id !32
Got store instruction
Removed 1 memory locations from facts

  store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts

  call void @llvm.dbg.declare(metadata i32** %b, metadata !24, metadata !18), !dbg !26, !phasar.instruction.id !27
Got call instruction

  call void @llvm.dbg.declare(metadata i32* %c, metadata !33, metadata !18), !dbg !34, !phasar.instruction.id !35
Got call instruction

  %c = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30
Got load instruction
Adding load instruction fact

  %1 = load i32*, i32** %b, align 8, !dbg !36, !phasar.instruction.id !37
Got load instruction

  %2 = load i32, i32* %1, align 4, !dbg !38, !phasar.instruction.id !39
Got load instruction

  store i32 %2, i32* %c, align 4, !dbg !34, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts

  ret i32 0, !dbg !41, !phasar.instruction.id !42worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %a, metadata !17, metadata !18), !dbg !19, !phasar.instruction.id !20, ID: 6
Facts:
	EMPTY


Instruction:
%a = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%b = alloca i32*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
store i32 1, i32* %0, align 4, !dbg !31, !phasar.instruction.id !32, ID: 12
Facts:
store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28, ID: 10
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7
%0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30, ID: 11


Instruction:
store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28, ID: 10
Facts:
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7


Instruction:
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23, ID: 8
Facts:
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7


Instruction:
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32** %b, metadata !24, metadata !18), !dbg !26, !phasar.instruction.id !27, ID: 9
Facts:
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i32* %c, metadata !33, metadata !18), !dbg !34, !phasar.instruction.id !35, ID: 13
Facts:
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7
%0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30, ID: 11


Instruction:
%c = alloca i32, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30, ID: 11
Facts:
store i32* %a, i32** %b, align 8, !dbg !26, !phasar.instruction.id !28, ID: 10
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7


Instruction:
%1 = load i32*, i32** %b, align 8, !dbg !36, !phasar.instruction.id !37, ID: 14
Facts:
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7
%0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30, ID: 11


Instruction:
%2 = load i32, i32* %1, align 4, !dbg !38, !phasar.instruction.id !39, ID: 15
Facts:
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id61 2019-Jan-05 14:31:46.098419 - [INFO] Write results to file
62 2019-Jan-05 14:31:46.098592 - [INFO] Shutdown llvm and the analysis framework.

 !23, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7
%0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30, ID: 11


Instruction:
store i32 %2, i32* %c, align 4, !dbg !34, !phasar.instruction.id !40, ID: 16
Facts:
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7
%0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30, ID: 11


Instruction:
ret i32 0, !dbg !41, !phasar.instruction.id !42, ID: 17
Facts:
store i32 %call, i32* %a, align 4, !dbg !19, !phasar.instruction.id !23, ID: 8
%call = call i32 @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !21, !phasar.instruction.id !22, ID: 7
%0 = load i32*, i32** %b, align 8, !dbg !29, !phasar.instruction.id !30, ID: 11


