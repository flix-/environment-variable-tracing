0 2018-Dec-28 21:51:54.008617 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-28 21:51:54.009033 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-28 21:51:54.009378 - [INFO] No configuration file is used.
3 2018-Dec-28 21:51:54.009463 - [INFO] Program options have been successfully parsed.
4 2018-Dec-28 21:51:54.009562 - [INFO] Check program options for logical errors.
5 2018-Dec-28 21:51:54.009651 - [INFO] Set-up IR database.
6 2018-Dec-28 21:51:54.020263 - [INFO] Constructed the analysis controller.
7 2018-Dec-28 21:51:54.020387 - [INFO] Found the following IR files for this project: 
8 2018-Dec-28 21:51:54.020448 - [INFO] 	main.ll
9 2018-Dec-28 21:51:54.020507 - [INFO] Check for chosen entry points.
10 2018-Dec-28 21:51:54.020569 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-28 21:51:54.020627 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-28 21:51:54.020687 - [INFO] Preprocess module: main.ll
13 2018-Dec-28 21:51:54.021026 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-28 21:51:54.021213 - [INFO] Running ValueAnnotationPass
15 2018-Dec-28 21:51:54.022170 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-28 21:51:54.022237 - [INFO] Allocated Types    : 1
17 2018-Dec-28 21:51:54.022311 - [INFO] Allocation Sites   : 9
18 2018-Dec-28 21:51:54.022374 - [INFO] Basic Blocks       : 19
19 2018-Dec-28 21:51:54.022432 - [INFO] Calls Sites        : 13
20 2018-Dec-28 21:51:54.022490 - [INFO] Functions          : 4
21 2018-Dec-28 21:51:54.022548 - [INFO] Globals            : 1
22 2018-Dec-28 21:51:54.022606 - [INFO] Global Pointer     : 1
23 2018-Dec-28 21:51:54.022663 - [INFO] Instructions       : 64
24 2018-Dec-28 21:51:54.022721 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-28 21:51:54.022779 - [INFO] Store Instructions : 14
26 2018-Dec-28 21:51:54.022862 - [INFO]  
27 2018-Dec-28 21:51:54.022951 - [INFO]   i32
28 2018-Dec-28 21:51:54.024153 - [DEBUG] Analyzing function: main
29 2018-Dec-28 21:51:54.024781 - [INFO] Reconstruct the class hierarchy.
30 2018-Dec-28 21:51:54.024846 - [INFO] Construct type hierarchy
31 2018-Dec-28 21:51:54.024907 - [DEBUG] Analyse types in module: main.ll
32 2018-Dec-28 21:51:54.025156 - [DEBUG] Reconstruct virtual function table for module: main.ll
33 2018-Dec-28 21:51:54.025227 - [INFO] Reconstruction of class hierarchy completed.
34 2018-Dec-28 21:51:54.025289 - [INFO] Starting CallGraphAnalysisType: OTF
35 2018-Dec-28 21:51:54.025413 - [DEBUG] Walking in function: main
36 2018-Dec-28 21:51:54.025501 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %rc, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25, ID: 11
37 2018-Dec-28 21:51:54.026069 - [DEBUG] Found 1 possible target(s)
38 2018-Dec-28 21:51:54.026131 - [DEBUG] Target name: llvm.dbg.declare
39 2018-Dec-28 21:51:54.026224 - [DEBUG] Walking in function: llvm.dbg.declare
40 2018-Dec-28 21:51:54.026289 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
41 2018-Dec-28 21:51:54.026355 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %taint, metadata !26, metadata !23), !dbg !27, !phasar.instruction.id !28, ID: 12
42 2018-Dec-28 21:51:54.026909 - [DEBUG] Found 1 possible target(s)
43 2018-Dec-28 21:51:54.026971 - [DEBUG] Target name: llvm.dbg.declare
44 2018-Dec-28 21:51:54.027057 - [DEBUG] Walking in function: llvm.dbg.declare
45 2018-Dec-28 21:51:54.027120 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
46 2018-Dec-28 21:51:54.027186 - [DEBUG] Found static call-site: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
47 2018-Dec-28 21:51:54.027775 - [DEBUG] Found 1 possible target(s)
48 2018-Dec-28 21:51:54.027838 - [DEBUG] Target name: getenv
49 2018-Dec-28 21:51:54.027932 - [DEBUG] Walking in function: getenv
50 2018-Dec-28 21:51:54.027996 - [DEBUG] Function already visited or only declaration: getenv
51 2018-Dec-28 21:51:54.028062 - [DEBUG] Found static call-site: %call1 = call i32 (...) @foo(), !dbg !32, !phasar.instruction.id !34, ID: 15
52 2018-Dec-28 21:51:54.028585 - [DEBUG] Found 1 possible target(s)
53 2018-Dec-28 21:51:54.028646 - [DEBUG] Target name: foo
54 2018-Dec-28 21:51:54.028727 - [DEBUG] Walking in function: foo
55 2018-Dec-28 21:51:54.028789 - [DEBUG] Function already visited or only declaration: foo
56 2018-Dec-28 21:51:54.028854 - [DEBUG] Found static call-site: %call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
57 2018-Dec-28 21:51:54.029313 - [DEBUG] Found 1 possible target(s)
58 2018-Dec-28 21:51:54.029372 - [DEBUG] Target name: foo
59 2018-Dec-28 21:51:54.029446 - [DEBUG] Walking in function: foo
60 2018-Dec-28 21:51:54.029508 - [DEBUG] Function already visited or only declaration: foo
61 2018-Dec-28 21:51:54.029574 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71, ID: 32
62 2018-Dec-28 21:51:54.030067 - [DEBUG] Found 1 possible target(s)
63 2018-Dec-28 21:51:54.030126 - [DEBUG] Target name: llvm.dbg.declare
64 2018-Dec-28 21:51:54.030201 - [DEBUG] Walking in function: llvm.dbg.declare
65 2018-Dec-28 21:51:54.030263 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
66 2018-Dec-28 21:51:54.030328 - [DEBUG] Found static call-site: %call10 = call i32 (...) @foo(), !dbg !75, !phasar.instruction.id !78, ID: 35
67 2018-Dec-28 21:51:54.030786 - [DEBUG] Found 1 possible target(s)
68 2018-Dec-28 21:51:54.030844 - [DEBUG] Target name: foo
69 2018-Dec-28 21:51:54.030918 - [DEBUG] Walking in function: foo
70 2018-Dec-28 21:51:54.030980 - [DEBUG] Function already visited or only declaration: foo
71 2018-Dec-28 21:51:54.031044 - [DEBUG] Found static call-site: %call14 = call i32 (...) @foo(), !dbg !87, !phasar.instruction.id !90, ID: 40
72 2018-Dec-28 21:51:54.031511 - [DEBUG] Found 1 possible target(s)
73 2018-Dec-28 21:51:54.031571 - [DEBUG] Target name: foo
74 2018-Dec-28 21:51:54.031644 - [DEBUG] Walking in function: foo
75 2018-Dec-28 21:51:54.031706 - [DEBUG] Function already visited or only declaration: foo
76 2018-Dec-28 21:51:54.031771 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
77 2018-Dec-28 21:51:54.032235 - [DEBUG] Found 1 possible target(s)
78 2018-Dec-28 21:51:54.032297 - [DEBUG] Target name: llvm.dbg.declare
79 2018-Dec-28 21:51:54.032373 - [DEBUG] Walking in function: llvm.dbg.declare
80 2018-Dec-28 21:51:54.032436 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
81 2018-Dec-28 21:51:54.032500 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
82 2018-Dec-28 21:51:54.032971 - [DEBUG] Found 1 possible target(s)
83 2018-Dec-28 21:51:54.033030 - [DEBUG] Target name: llvm.dbg.declare
84 2018-Dec-28 21:51:54.033105 - [DEBUG] Walking in function: llvm.dbg.declare
85 2018-Dec-28 21:51:54.033167 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
86 2018-Dec-28 21:51:54.033231 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
87 2018-Dec-28 21:51:54.033710 - [DEBUG] Found 1 possible target(s)
88 2018-Dec-28 21:51:54.033769 - [DEBUG] Target name: llvm.dbg.declare
89 2018-Dec-28 21:51:54.033844 - [DEBUG] Walking in function: llvm.dbg.declare
90 2018-Dec-28 21:51:54.033906 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
91 2018-Dec-28 21:51:54.033970 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a25, metadata !123, metadata !23), !dbg !124, !phasar.instruction.id !125, ID: 57
92 2018-Dec-28 21:51:54.034433 - [DEBUG] Found 1 possible target(s)
93 2018-Dec-28 21:51:54.034492 - [DEBUG] Target name: llvm.dbg.declare
94 2018-Dec-28 21:51:54.034577 - [DEBUG] Walking in function: llvm.dbg.declare
95 2018-Dec-28 21:51:54.034698 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
96 2018-Dec-28 21:51:54.034765 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a28, metadata !129, metadata !23), !dbg !130, !phasar.instruction.id !131, ID: 61
97 2018-Dec-28 21:51:54.035492 - [DEBUG] Found 1 possible target(s)
98 2018-Dec-28 21:51:54.035555 - [DEBUG] Target name: llvm.dbg.declare
99 2018-Dec-28 21:51:54.035641 - [DEBUG] Walking in function: llvm.dbg.declare
100 2018-Dec-28 21:51:54.035705 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
101 2018-Dec-28 21:51:54.035768 - [INFO] Call graph has been constructed
102 2018-Dec-28 21:51:54.035832 - [INFO] Performing analysis: plugin
103 2018-Dec-28 21:51:54.035902 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
104 2018-Dec-28 21:51:54.036459 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %rc = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %taint = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %a = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %a20 = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %b = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  %a22 = alloca i32, align 4, !phasar.instruction.id !18
Got operands checking instruction (alloca)

  %a25 = alloca i32, align 4, !phasar.instruction.id !19
Got operands checking instruction (alloca)

  %a28 = alloca i32, align 4, !phasar.instruction.id !20
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !21
Got store instruction

  call void @llvm.dbg.declare(metadata i32* %rc, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25
Got call instruction

  call void @llvm.dbg.declare(metadata i32* %taint, metadata !26, metadata !23), !dbg !27, !phasar.instruction.id !28
Got call instruction

  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
Got call instruction
Adding call instruction fact
Adding line: 9

  store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31
Got store instruction
Adding store instruction
Adding line: 9
Adding line: 9

  %call1 = call i32 (...) @foo(), !dbg !32, !phasar.instruction.id !34
Got call instruction
Adding line: 9
Adding line: 9

  %tobool = icmp ne i32 %call1, 0, !dbg !32, !phasar.instruction.id !35
Got operands checking instruction (icmp)
Adding line: 9
Adding line: 9

  br i1 %tobool, label %if.then, label %if.else9, !dbg !36, !phasar.instruction.id !37
Got branch instruction
Adding line: 9
Adding line: 9

  br i1 %tobool, label %if.then, label %if.else9, !dbg !36, !phasar.instruction.id !37
Got branch instruction
Adding line: 9
Adding line: 9

  %0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41
Got load instruction
Adding load instruction fact
Adding line: 9
Adding line: 9
Adding line: 12

  %tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42
Got operands checking instruction (icmp)
Adding fact
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12

  br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44
Got branch instruction
Adding conditional branch instruction fact
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12

  br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44
Got branch instruction
Adding conditional branch instruction fact
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12

  %call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13

  %tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13

  br i1 %tobool5, label %if.then6, label %if.else, !dbg !50, !phasar.instruction.id !51
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13

  br i1 %tobool5, label %if.then6, label %if.else, !dbg !50, !phasar.instruction.id !51
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13

  store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13

  br label %if.end, !dbg !55, !phasar.instruction.id !56
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13

  store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59
Adding line: 16
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13

  br label %if.end, !phasar.instruction.id !60
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13

  store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13
Adding line: 18

  br label %if.end8, !dbg !63, !phasar.instruction.id !64
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13
Adding line: 18

  store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 20

  br label %if.end8, !phasar.instruction.id !68
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13
Adding line: 18
Adding line: 20

  call void @llvm.dbg.declare(metadata i32* %a, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71
Got call instruction
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13
Adding line: 18
Adding line: 20

  store i32 100, i32* %a, align 4, !dbg !70, !phasar.instruction.id !72
Got store instruction
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13
Adding line: 18
Adding line: 20

  br label %if.end27, !dbg !73, !phasar.instruction.id !74
Got branch instruction
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13
Adding line: 18
Adding line: 20

  %call10 = call i32 (...) @foo(), !dbg !75, !phasar.instruction.id !78
Got call instruction
Adding line: 9
Adding line: 9

  %tobool11 = icmp ne i32 %call10, 0, !dbg !75, !phasar.instruction.id !79
Got operands checking instruction (icmp)
Adding line: 9
Adding line: 9

  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !80, !phasar.instruction.id !81
Got branch instruction
Adding line: 9
Adding line: 9

  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !80, !phasar.instruction.id !81
Got branch instruction
Adding line: 9
Adding line: 9

  store i32 1, i32* %rc, align 4, !dbg !82, !phasar.instruction.id !84
Got store instruction
Adding line: 9
Adding line: 9

  br label %if.end26, !dbg !85, !phasar.instruction.id !86
Got branch instruction
Adding line: 9
Adding line: 9

  %call14 = call i32 (...) @foo(), !dbg !87, !phasar.instruction.id !90
Got call instruction
Adding line: 9
Adding line: 9

  %tobool15 = icmp ne i32 %call14, 0, !dbg !87, !phasar.instruction.id !91
Got operands checking instruction (icmp)
Adding line: 9
Adding line: 9

  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !92, !phasar.instruction.id !93
Got branch instruction
Adding line: 9
Adding line: 9

  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !92, !phasar.instruction.id !93
Got branch instruction
Adding line: 9
Adding line: 9

  store i32 100, i32* %rc, align 4, !dbg !94, !phasar.instruction.id !96
Got store instruction
Adding line: 9
Adding line: 9

  br label %if.end24, !dbg !97, !phasar.instruction.id !98
Got branch instruction
Adding line: 9
Adding line: 9

  %1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101
Got load instruction
Adding load instruction fact
Adding line: 9
Adding line: 9
Adding line: 30

  %tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102
Got operands checking instruction (icmp)
Adding fact
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30

  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104
Got branch instruction
Adding conditional branch instruction fact
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30

  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104
Got branch instruction
Adding conditional branch instruction fact
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30

  call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30
Adding line: 31

  store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31

  call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32

  store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32

  br label %if.end23, !dbg !114, !phasar.instruction.id !115
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32

  call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30
Adding line: 34

  store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30
Adding line: 34
Adding line: 34

  br label %if.end23, !phasar.instruction.id !121
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32
Adding line: 34
Adding line: 34

  br label %if.end24, !phasar.instruction.id !122
Got branch instruction
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32
Adding line: 34
Adding line: 34

  call void @llvm.dbg.declare(metadata i32* %a25, metadata !123, metadata !23), !dbg !124, !phasar.instruction.id !125
Got call instruction
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32
Adding line: 34
Adding line: 34

  store i32 100, i32* %a25, align 4, !dbg !124, !phasar.instruction.id !126
Got store instruction
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32
Adding line: 34
Adding line: 34

  br label %if.end26, !phasar.instruction.id !127
Got branch instruction
Adding line: 9
Adding line: 9
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32
Adding line: 34
Adding line: 34

  br label %if.end27, !phasar.instruction.id !128
Got branch instruction
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13
Adding line: 18
Adding line: 20
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32
Adding line: 34
Adding line: 34

  call void @llvm.dbg.declare(metadata i32* %a28, metadata !129, metadata !23), !dbg !130, !phasar.instruction.id !131
Got call instruction
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13
Adding line: 18
Adding line: 20
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32
Adding line: 34
Adding line: 34

  store i32 1, i32* %a28, align 4, !dbg !130, !phasar.instruction.id !132
Got store instruction
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 13
Adding line: 13
Adding line: 18
Adding line: 20
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32
Adding line: 34
Adding line: 34

  %2 = load i32, i32* %rc, align 4, !dbg !133, !phasar.instruction.id !134
Got load instruction
Adding load instruction fact
Adding line: 16
Adding line: 14
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 41
Adding line: 13
Adding line: 13
Adding line: 18
Adding line: 20
Adding line: 30
Adding line: 30
Adding line: 31
Adding line: 31
Adding line: 32
Adding line: 32
Adding line: 34
Adding line: 34

  store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31
Got store instruction
Adding store instruction

  %call1 = call i32 (...) @foo(), !dbg !32, !phasar.instruction.id !34
Got call instruction

  %tobool = icmp ne i32 %call1, 0, !dbg !32, !phasar.instruction.id !35
Got operands checking instruction (icmp)

  br i1 %tobool, label %if.then, label %if.else9, !dbg !36, !phasar.instruction.id !37
Got branch instruction

  br i1 %tobool, label %if.then, label %if.else9, !dbg !36, !phasar.instruction.id !37
Got branch instruction

  %0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41
Got load instruction
Adding load instruction fact

  %call10 = call i32 (...) @foo(), !dbg !75, !phasar.instruction.id !78
Got call instruction

  %tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42
Got operands checking instruction (icmp)
Adding fact

  br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44
Got branch instruction
Adding conditional branch instruction fact

  br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44
Got branch instruction
Adding conditional branch instruction fact

  %call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48

  store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67

  %tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49

  br i1 %tobool5, label %if.then6, label %if.else, !dbg !50, !phasar.instruction.id !51

  br i1 %tobool5, label %if.then6, label %if.else, !dbg !50, !phasar.instruction.id !51

  store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54

  store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59

  br label %if.end, !dbg !55, !phasar.instruction.id !56

  store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62

  br label %if.end, !phasar.instruction.id !60

  store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62

  br label %if.end8, !dbg !63, !phasar.instruction.id !64

  call void @llvm.dbg.declare(metadata i32* %a, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71
Got call instruction

  br label %if.end8, !phasar.instruction.id !68

  call void @llvm.dbg.declare(metadata i32* %a, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71
Got call instruction

  store i32 100, i32* %a, align 4, !dbg !70, !phasar.instruction.id !72
Got store instruction

  br label %if.end27, !dbg !73, !phasar.instruction.id !74
Got branch instruction

  call void @llvm.dbg.declare(metadata i32* %a28, metadata !129, metadata !23), !dbg !130, !phasar.instruction.id !131
Got call instruction

  %tobool11 = icmp ne i32 %call10, 0, !dbg !75, !phasar.instruction.id !79
Got operands checking instruction (icmp)

  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !80, !phasar.instruction.id !81
Got branch instruction

  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !80, !phasar.instruction.id !81
Got branch instruction

  store i32 1, i32* %rc, align 4, !dbg !82, !phasar.instruction.id !84
Got store instruction

  %call14 = call i32 (...) @foo(), !dbg !87, !phasar.instruction.id !90
Got call instruction

  br label %if.end26, !dbg !85, !phasar.instruction.id !86
Got branch instruction

  br label %if.end27, !phasar.instruction.id !128
Got branch instruction

  %tobool15 = icmp ne i32 %call14, 0, !dbg !87, !phasar.instruction.id !91
Got operands checking instruction (icmp)

  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !92, !phasar.instruction.id !93
Got branch instruction

  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !92, !phasar.instruction.id !93
Got branch instruction

  store i32 100, i32* %rc, align 4, !dbg !94, !phasar.instruction.id !96
Got store instruction

  %1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101
Got load instruction
Adding load instruction fact

  br label %if.end24, !dbg !97, !phasar.instruction.id !98
Got branch instruction

  call void @llvm.dbg.declare(metadata i32* %a25, metadata !123, metadata !23), !dbg !124, !phasar.instruction.id !125
Got call instruction

  %tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102
Got operands checking instruction (icmp)
Adding fact

  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104
Got branch instruction
Adding conditional branch instruction fact

  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104
Got branch instruction
Adding conditional branch instruction fact

  call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108

  call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119

  store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109

  call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112

  store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113

  br label %if.end23, !dbg !114, !phasar.instruction.id !115

  br label %if.end24, !phasar.instruction.id !122
Got branch instruction

  store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120

  br label %if.end23, !phasar.instruction.id !121

  br label %if.end24, !phasar.instruction.id !122
Got branch instruction

  call void @llvm.dbg.declare(metadata i32* %a25, metadata !123, metadata !23), !dbg !124, !phasar.instruction.id !125
Got call instruction

  store i32 100, i32* %a25, align 4, !dbg !124, !phasar.instruction.id !126
Got store instruction

  br label %if.end26, !phasar.instruction.id !127
Got branch instruction

  br label %if.end27, !phasar.instruction.id !128
Got branch instruction

  call void @llvm.dbg.declare(metadata i32* %a28, metadata !129, metadata !23), !dbg !130, !phasar.instruction.id !131
Got call instruction

  store i32 1, i32* %a28, align 4, !dbg !130, !phasar.instruction.id !132
Got store instruction

  %2 = load i32, i32* %rc, align 4, !dbg !133, !phasar.instruction.id !134
Got load instruction
Adding load instruction fact

  %rc = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %taint = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59

  store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54

  store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31
Got store instruction
Adding store instruction

  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !21
Got store instruction

  %a25 = alloca i32, align 4, !phasar.instruction.id !19
Got operands checking instruction (alloca)

  %a22 = alloca i32, align 4, !phasar.instruction.id !18
Got operands checking instruction (alloca)

  %a20 = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %b = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i32* %taint, metadata !26, metadata !23), !dbg !27, !phasar.instruction.id !28
Got call instruction

  call void @llvm.dbg.declare(metadata i32* %rc, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25
Got call instruction

  %a28 = alloca i32, align 4, !phasar.instruction.id !20
Got operands checking instruction (alloca)

  %a = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %call1 = call i32 (...) @foo(), !dbg !32, !phasar.instruction.id !34
Got call instruction

  %tobool = icmp ne i32 %call1, 0, !dbg !32, !phasar.instruction.id !35
Got operands checking instruction (icmp)

  %0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41
Got load instruction
Adding load instruction fact

  br label %if.end27, !phasar.instruction.id !128
Got branch instruction

  br i1 %tobool, label %if.then, label %if.else9, !dbg !36, !phasar.instruction.id !37
Got branch instruction

  %tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42
Got operands checking instruction (icmp)
Adding fact

  %2 = load i32, i32* %rc, align 4, !dbg !133, !phasar.instruction.id !134
Got load instruction
Adding load instruction fact

  br label %if.end8, !phasar.instruction.id !68

  br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44
Got branch instruction
Adding conditional branch instruction fact

  %call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48

  %tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49

  br label %if.end, !phasar.instruction.id !60

  br i1 %tobool5, label %if.then6, label %if.else, !dbg !50, !phasar.instruction.id !51

  br label %if.end, !dbg !55, !phasar.instruction.id !56

  store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62

  br label %if.end8, !dbg !63, !phasar.instruction.id !64

  store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67

  call void @llvm.dbg.declare(metadata i32* %a, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71
Got call instruction

  store i32 100, i32* %a, align 4, !dbg !70, !phasar.instruction.id !72
Got store instruction

  br label %if.end27, !dbg !73, !phasar.instruction.id !74
Got branch instruction

  %call10 = call i32 (...) @foo(), !dbg !75, !phasar.instruction.id !78
Got call instruction

  %tobool11 = icmp ne i32 %call10, 0, !dbg !75, !phasar.instruction.id !79
Got operands checking instruction (icmp)

  br label %if.end26, !phasar.instruction.id !127
Got branch instruction

  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !80, !phasar.instruction.id !81
Got branch instruction

  store i32 1, i32* %rc, align 4, !dbg !82, !phasar.instruction.id !84
Got store instruction

  br label %if.end26, !dbg !85, !phasar.instruction.id !86
Got branch instruction

  %call14 = call i32 (...) @foo(), !dbg !87, !phasar.instruction.id !90
Got call instruction

  %tobool15 = icmp ne i32 %call14, 0, !dbg !87, !phasar.instruction.id !91
Got operands checking instruction (icmp)

  %1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101
Got load instruction
Adding load instruction fact

  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !92, !phasar.instruction.id !93
Got branch instruction

  store i32 100, i32* %rc, align 4, !dbg !94, !phasar.instruction.id !96
Got store instruction

  br label %if.end24, !dbg !97, !phasar.instruction.id !98
Got branch instruction

  %tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102
Got operands checking instruction (icmp)
Adding fact

  br label %if.end24, !phasar.instruction.id !122
Got branch instruction

  br label %if.end23, !phasar.instruction.id !121

  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104
Got branch instruction
Adding conditional branch instruction fact

  call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108

  store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109

  call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112

  store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113

  br label %if.end23, !dbg !114, !phasar.instruction.id !115

  call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119

  store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120

  call void @llvm.dbg.declare(metadata i32* %a25, metadata !123, metadata !23), !dbg !124, !phasar.instruction.id !125
Got call instruction

  store i32 100, i32* %a25, align 4, !dbg !124, !phasar.instruction.id !126
Got store instruction

  call void @llvm.dbg.declare(metadata i32* %a28, metadata !129, metadata !23), !dbg !130, !phasar.instruction.id !131
Got call instruction

  store i32 1, i32* %a28, align 4, !dbg !130, !phasar.instruction.id !132
Got store instruction

  ret i32 %2, !dbg !135, !phasar.instruction.id !136worklist size: 69
worklist size: 68
worklist size: 67
worklist size: 66
worklist size: 65
worklist size: 64
worklist size: 63
worklist size: 62
worklist size: 61
worklist size: 60
worklist size: 59
worklist size: 58
worklist size: 57
worklist size: 57
worklist size: 57
worklist size: 57
worklist size: 58
worklist size: 58
worklist size: 58
worklist size: 58
worklist size: 59
worklist size: 59
worklist size: 59
worklist size: 59
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 60
worklist size: 61
worklist size: 61
worklist size: 61
worklist size: 61
worklist size: 61
worklist size: 61
worklist size: 62
worklist size: 62
worklist size: 62
worklist size: 62
worklist size: 62
worklist size: 62
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 63
worklist size: 62
worklist size: 61
worklist size: 60
worklist size: 59
worklist size: 58
worklist size: 57
worklist size: 56
worklist size: 55
worklist size: 54
worklist size: 53
worklist size: 52
worklist size: 51
worklist size: 50
worklist size: 49
worklist size: 48
worklist size: 47
worklist size: 46
worklist size: 45
worklist size: 44
worklist size: 43
worklist size: 42
worklist size: 41
worklist size: 40
worklist size: 39
worklist size: 38
worklist size: 37
worklist size: 36
worklist size: 35
worklist size: 34
worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22


Instruction:
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22


Instruction:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
Facts:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !21, ID: 10
Facts:
	EMPTY


Instruction:
%a25 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8
Facts:
	EMPTY


Instruction:
%a22 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7
Facts:
	EMPTY


Instruction:
%a20 = alloca i32, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%b = alloca i32, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %taint, metadata !26, metadata !23), !dbg !27, !phasar.instruction.id !28, ID: 12
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %rc, metadata !22, metadata !23), !dbg !24, !phasar.instruction.id !25, ID: 11
Facts:
	EMPTY


Instruction:
%a28 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9
Facts:
	EMPTY


Instruction:
%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%call1 = call i32 (...) @foo(), !dbg !32, !phasar.instruction.id !34, ID: 15
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
%tobool = icmp ne i32 %call1, 0, !dbg !32, !phasar.instruction.id !35, ID: 16
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
br label %if.end27, !phasar.instruction.id !128, ID: 60
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


Instruction:
br i1 %tobool, label %if.then, label %if.else9, !dbg !36, !phasar.instruction.id !37, ID: 17
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18


Instruction:
%2 = load i32, i32* %rc, align 4, !dbg !133, !phasar.instruction.id !134, ID: 63
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22
store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 30
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


Instruction:
br label %if.end8, !phasar.instruction.id !68, ID: 31
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 30


Instruction:
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19


Instruction:
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20


Instruction:
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21


Instruction:
br label %if.end, !phasar.instruction.id !60, ID: 27
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22


Instruction:
br i1 %tobool5, label %if.then6, label %if.else, !dbg !50, !phasar.instruction.id !51, ID: 23
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22


Instruction:
br label %if.end, !dbg !55, !phasar.instruction.id !56, ID: 25
Facts:
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22


Instruction:
store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62, ID: 28
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22


Instruction:
br label %if.end8, !dbg !63, !phasar.instruction.id !64, ID: 29
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22
store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62, ID: 28


Instruction:
store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 30
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20


Instruction:
call void @llvm.dbg.declare(metadata i32* %a, metadata !69, metadata !23), !dbg !70, !phasar.instruction.id !71, ID: 32
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
br i1 %tobool2, label %if.then3, label %if.else7, !dbg !43, !phasar.instruction.id !44, ID: 20
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22
store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 30


Instruction:
store i32 100, i32* %a, align 4, !dbg !70, !phasar.instruction.id !72, ID: 33
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22
store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 30


Instruction:
br label %if.end27, !dbg !73, !phasar.instruction.id !74, ID: 34
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22
store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 30


Instruction:
%call10 = call i32 (...) @foo(), !dbg !75, !phasar.instruction.id !78, ID: 35
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
%tobool11 = icmp ne i32 %call10, 0, !dbg !75, !phasar.instruction.id !79, ID: 36
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
br label %if.end26, !phasar.instruction.id !127, ID: 59
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


Instruction:
br i1 %tobool11, label %if.then12, label %if.else13, !dbg !80, !phasar.instruction.id !81, ID: 37
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
store i32 1, i32* %rc, align 4, !dbg !82, !phasar.instruction.id !84, ID: 38
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
br label %if.end26, !dbg !85, !phasar.instruction.id !86, ID: 39
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
%call14 = call i32 (...) @foo(), !dbg !87, !phasar.instruction.id !90, ID: 40
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
%tobool15 = icmp ne i32 %call14, 0, !dbg !87, !phasar.instruction.id !91, ID: 41
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
br i1 %tobool15, label %if.then16, label %if.else17, !dbg !92, !phasar.instruction.id !93, ID: 42
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
store i32 100, i32* %rc, align 4, !dbg !94, !phasar.instruction.id !96, ID: 43
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
br label %if.end24, !dbg !97, !phasar.instruction.id !98, ID: 44
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13


Instruction:
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45


Instruction:
br label %if.end24, !phasar.instruction.id !122, ID: 56
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


Instruction:
br label %if.end23, !phasar.instruction.id !121, ID: 55
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


Instruction:
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46


Instruction:
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47


Instruction:
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48


Instruction:
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49


Instruction:
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50


Instruction:
br label %if.end23, !dbg !114, !phasar.instruction.id !115, ID: 52
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51


Instruction:
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47


Instruction:
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
br i1 %tobool18, label %if.then19, label %if.else21, !dbg !103, !phasar.instruction.id !104, ID: 47
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53


Instruction:
call void @llvm.dbg.declare(metadata i32* %a25, metadata !123, metadata !23), !dbg !124, !phasar.instruction.id !125, ID: 57
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


Instruction:
store i32 100, i32* %a25, align 4, !dbg !124, !phasar.instruction.id !126, ID: 58
Facts:
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


Instruction:
call void @llvm.dbg.declare(metadata i32* %a28, metadata !129, metadata !23), !dbg !130, !phasar.instruction.id !131, ID: 61
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22
store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 30
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !105 2018-Dec-28 21:51:54.287434 - [INFO] Write results to file
106 2018-Dec-28 21:51:54.287632 - [INFO] Shutdown llvm and the analysis framework.

111, !phasar.instruction.id !113, ID: 51
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


Instruction:
store i32 1, i32* %a28, align 4, !dbg !130, !phasar.instruction.id !132, ID: 62
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22
store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 30
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


Instruction:
ret i32 %2, !dbg !135, !phasar.instruction.id !136, ID: 64
Facts:
store i32 1, i32* %rc, align 4, !dbg !57, !phasar.instruction.id !59, ID: 26
store i32 1, i32* %rc, align 4, !dbg !52, !phasar.instruction.id !54, ID: 24
store i32 %call, i32* %taint, align 4, !dbg !27, !phasar.instruction.id !31, ID: 14
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 13
%0 = load i32, i32* %taint, align 4, !dbg !38, !phasar.instruction.id !41, ID: 18
%tobool2 = icmp ne i32 %0, 0, !dbg !38, !phasar.instruction.id !42, ID: 19
%2 = load i32, i32* %rc, align 4, !dbg !133, !phasar.instruction.id !134, ID: 63
%call4 = call i32 (...) @foo(), !dbg !45, !phasar.instruction.id !48, ID: 21
%tobool5 = icmp ne i32 %call4, 0, !dbg !45, !phasar.instruction.id !49, ID: 22
store i32 1, i32* %rc, align 4, !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 1, i32* %rc, align 4, !dbg !65, !phasar.instruction.id !67, ID: 30
%1 = load i32, i32* %taint, align 4, !dbg !99, !phasar.instruction.id !101, ID: 45
%tobool18 = icmp ne i32 %1, 0, !dbg !99, !phasar.instruction.id !102, ID: 46
call void @llvm.dbg.declare(metadata i32* %a20, metadata !105, metadata !23), !dbg !107, !phasar.instruction.id !108, ID: 48
store i32 100, i32* %a20, align 4, !dbg !107, !phasar.instruction.id !109, ID: 49
call void @llvm.dbg.declare(metadata i32* %b, metadata !110, metadata !23), !dbg !111, !phasar.instruction.id !112, ID: 50
store i32 200, i32* %b, align 4, !dbg !111, !phasar.instruction.id !113, ID: 51
call void @llvm.dbg.declare(metadata i32* %a22, metadata !116, metadata !23), !dbg !118, !phasar.instruction.id !119, ID: 53
store i32 100, i32* %a22, align 4, !dbg !118, !phasar.instruction.id !120, ID: 54


