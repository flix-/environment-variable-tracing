0 2018-Dec-29 21:16:05.035227 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-29 21:16:05.035694 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-29 21:16:05.036067 - [INFO] No configuration file is used.
3 2018-Dec-29 21:16:05.036152 - [INFO] Program options have been successfully parsed.
4 2018-Dec-29 21:16:05.036259 - [INFO] Check program options for logical errors.
5 2018-Dec-29 21:16:05.036352 - [INFO] Set-up IR database.
6 2018-Dec-29 21:16:05.043688 - [INFO] Constructed the analysis controller.
7 2018-Dec-29 21:16:05.043824 - [INFO] Found the following IR files for this project: 
8 2018-Dec-29 21:16:05.043887 - [INFO] 	main.ll
9 2018-Dec-29 21:16:05.043947 - [INFO] Check for chosen entry points.
10 2018-Dec-29 21:16:05.044009 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-29 21:16:05.044068 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-29 21:16:05.044128 - [INFO] Preprocess module: main.ll
13 2018-Dec-29 21:16:05.044544 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-29 21:16:05.044729 - [INFO] Running ValueAnnotationPass
15 2018-Dec-29 21:16:05.045271 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-29 21:16:05.045353 - [INFO] Allocated Types    : 1
17 2018-Dec-29 21:16:05.045422 - [INFO] Allocation Sites   : 7
18 2018-Dec-29 21:16:05.045480 - [INFO] Basic Blocks       : 9
19 2018-Dec-29 21:16:05.045537 - [INFO] Calls Sites        : 7
20 2018-Dec-29 21:16:05.045594 - [INFO] Functions          : 3
21 2018-Dec-29 21:16:05.045652 - [INFO] Globals            : 1
22 2018-Dec-29 21:16:05.045709 - [INFO] Global Pointer     : 1
23 2018-Dec-29 21:16:05.045766 - [INFO] Instructions       : 35
24 2018-Dec-29 21:16:05.045825 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-29 21:16:05.045882 - [INFO] Store Instructions : 8
26 2018-Dec-29 21:16:05.045966 - [INFO]  
27 2018-Dec-29 21:16:05.046049 - [INFO]   i32
28 2018-Dec-29 21:16:05.046891 - [DEBUG] Analyzing function: main
29 2018-Dec-29 21:16:05.047489 - [INFO] Reconstruct the class hierarchy.
30 2018-Dec-29 21:16:05.047570 - [INFO] Construct type hierarchy
31 2018-Dec-29 21:16:05.047632 - [DEBUG] Analyse types in module: main.ll
32 2018-Dec-29 21:16:05.047857 - [DEBUG] Reconstruct virtual function table for module: main.ll
33 2018-Dec-29 21:16:05.047933 - [INFO] Reconstruction of class hierarchy completed.
34 2018-Dec-29 21:16:05.048024 - [INFO] Starting CallGraphAnalysisType: OTF
35 2018-Dec-29 21:16:05.048196 - [DEBUG] Walking in function: main
36 2018-Dec-29 21:16:05.048294 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %rc, metadata !20, metadata !21), !dbg !22, !phasar.instruction.id !23, ID: 9
37 2018-Dec-29 21:16:05.048768 - [DEBUG] Found 1 possible target(s)
38 2018-Dec-29 21:16:05.048832 - [DEBUG] Target name: llvm.dbg.declare
39 2018-Dec-29 21:16:05.048929 - [DEBUG] Walking in function: llvm.dbg.declare
40 2018-Dec-29 21:16:05.048993 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
41 2018-Dec-29 21:16:05.049060 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %taint, metadata !24, metadata !21), !dbg !25, !phasar.instruction.id !26, ID: 10
42 2018-Dec-29 21:16:05.049435 - [DEBUG] Found 1 possible target(s)
43 2018-Dec-29 21:16:05.049495 - [DEBUG] Target name: llvm.dbg.declare
44 2018-Dec-29 21:16:05.049600 - [DEBUG] Walking in function: llvm.dbg.declare
45 2018-Dec-29 21:16:05.049664 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
46 2018-Dec-29 21:16:05.049730 - [DEBUG] Found static call-site: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
47 2018-Dec-29 21:16:05.050152 - [DEBUG] Found 1 possible target(s)
48 2018-Dec-29 21:16:05.050212 - [DEBUG] Target name: getenv
49 2018-Dec-29 21:16:05.050301 - [DEBUG] Walking in function: getenv
50 2018-Dec-29 21:16:05.050365 - [DEBUG] Function already visited or only declaration: getenv
51 2018-Dec-29 21:16:05.050432 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
52 2018-Dec-29 21:16:05.050825 - [DEBUG] Found 1 possible target(s)
53 2018-Dec-29 21:16:05.050886 - [DEBUG] Target name: llvm.dbg.declare
54 2018-Dec-29 21:16:05.050966 - [DEBUG] Walking in function: llvm.dbg.declare
55 2018-Dec-29 21:16:05.051029 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
56 2018-Dec-29 21:16:05.051118 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
57 2018-Dec-29 21:16:05.051508 - [DEBUG] Found 1 possible target(s)
58 2018-Dec-29 21:16:05.051571 - [DEBUG] Target name: llvm.dbg.declare
59 2018-Dec-29 21:16:05.051651 - [DEBUG] Walking in function: llvm.dbg.declare
60 2018-Dec-29 21:16:05.051714 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
61 2018-Dec-29 21:16:05.051780 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a5, metadata !60, metadata !21), !dbg !61, !phasar.instruction.id !62, ID: 27
62 2018-Dec-29 21:16:05.052148 - [DEBUG] Found 1 possible target(s)
63 2018-Dec-29 21:16:05.052208 - [DEBUG] Target name: llvm.dbg.declare
64 2018-Dec-29 21:16:05.052286 - [DEBUG] Walking in function: llvm.dbg.declare
65 2018-Dec-29 21:16:05.052349 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
66 2018-Dec-29 21:16:05.052439 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a7, metadata !68, metadata !21), !dbg !70, !phasar.instruction.id !71, ID: 31
67 2018-Dec-29 21:16:05.052813 - [DEBUG] Found 1 possible target(s)
68 2018-Dec-29 21:16:05.052874 - [DEBUG] Target name: llvm.dbg.declare
69 2018-Dec-29 21:16:05.052954 - [DEBUG] Walking in function: llvm.dbg.declare
70 2018-Dec-29 21:16:05.053016 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
71 2018-Dec-29 21:16:05.053079 - [INFO] Call graph has been constructed
72 2018-Dec-29 21:16:05.053142 - [INFO] Performing analysis: plugin
73 2018-Dec-29 21:16:05.053211 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
74 2018-Dec-29 21:16:05.053771 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %rc = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %taint = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %a = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %a3 = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %a5 = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  %a7 = alloca i32, align 4, !phasar.instruction.id !18
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !19
Got store instruction

  call void @llvm.dbg.declare(metadata i32* %rc, metadata !20, metadata !21), !dbg !22, !phasar.instruction.id !23
Got call instruction

  call void @llvm.dbg.declare(metadata i32* %taint, metadata !24, metadata !21), !dbg !25, !phasar.instruction.id !26
Got call instruction

  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28
Got call instruction
Adding call instruction fact
Adding line: 9

  store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29
Got store instruction
Adding store instruction
Adding line: 9
Adding line: 9

  %0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31
Got load instruction
Adding load instruction fact
Adding line: 9
Adding line: 9
Adding line: 10

  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33
Got switch instruction
Adding switch instruction fact
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 10

  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33
Got switch instruction
Adding switch instruction fact
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 10

  store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 10

  br label %sw.bb, !dbg !37, !phasar.instruction.id !38
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 10

  %1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 15
Adding line: 10

  switch i32 %1, label %sw.default1 [
    i32 0, label %sw.bb2
  ], !dbg !41, !phasar.instruction.id !42
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 15
Adding line: 10

  switch i32 %1, label %sw.default1 [
    i32 0, label %sw.bb2
  ], !dbg !41, !phasar.instruction.id !42
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 15
Adding line: 10

  store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 15
Adding line: 10

  br label %sw.bb2, !dbg !46, !phasar.instruction.id !47
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 15
Adding line: 10

  call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 10

  store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 10
Adding line: 21

  br label %sw.epilog, !dbg !52, !phasar.instruction.id !53
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 10
Adding line: 21

  call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 10
Adding line: 21
Adding line: 24

  store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 10
Adding line: 21
Adding line: 24
Adding line: 24

  br label %sw.epilog4, !dbg !58, !phasar.instruction.id !59
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 10
Adding line: 21
Adding line: 24
Adding line: 24

  call void @llvm.dbg.declare(metadata i32* %a5, metadata !60, metadata !21), !dbg !61, !phasar.instruction.id !62
Got call instruction
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 21
Adding line: 24
Adding line: 24

  store i32 0, i32* %a5, align 4, !dbg !61, !phasar.instruction.id !63
Got store instruction
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 21
Adding line: 24
Adding line: 24

  %2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65
Got load instruction
Adding load instruction fact
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 29
Adding line: 21
Adding line: 24
Adding line: 24

  switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67
Got switch instruction
Adding switch instruction fact
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 29
Adding line: 21
Adding line: 24
Adding line: 24
Adding line: 29

  switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67
Got switch instruction
Adding switch instruction fact
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 29
Adding line: 21
Adding line: 24
Adding line: 24
Adding line: 29

  call void @llvm.dbg.declare(metadata i32* %a7, metadata !68, metadata !21), !dbg !70, !phasar.instruction.id !71
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 29
Adding line: 21
Adding line: 24
Adding line: 24
Adding line: 29
Adding line: 32

  store i32 0, i32* %a7, align 4, !dbg !70, !phasar.instruction.id !72
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 29
Adding line: 21
Adding line: 24
Adding line: 24
Adding line: 29
Adding line: 32
Adding line: 32

  br label %sw.epilog8, !dbg !73, !phasar.instruction.id !74
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 29
Adding line: 21
Adding line: 24
Adding line: 24
Adding line: 29
Adding line: 32
Adding line: 32

  %3 = load i32, i32* %rc, align 4, !dbg !75, !phasar.instruction.id !76
Got load instruction
Adding load instruction fact
Adding line: 18
Adding line: 13
Adding line: 9
Adding line: 9
Adding line: 10
Adding line: 21
Adding line: 15
Adding line: 29
Adding line: 21
Adding line: 24
Adding line: 24
Adding line: 36
Adding line: 32
Adding line: 32

  store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29
Got store instruction
Adding store instruction

  %0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31
Got load instruction
Adding load instruction fact

  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33
Got switch instruction
Adding switch instruction fact

  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33
Got switch instruction
Adding switch instruction fact

  store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36

  %1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40

  br label %sw.bb, !dbg !37, !phasar.instruction.id !38

  %1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40

  switch i32 %1, label %sw.default1 [
    i32 0, label %sw.bb2
  ], !dbg !41, !phasar.instruction.id !42

  switch i32 %1, label %sw.default1 [
    i32 0, label %sw.bb2
  ], !dbg !41, !phasar.instruction.id !42

  store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45

  call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50

  br label %sw.bb2, !dbg !46, !phasar.instruction.id !47

  call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50

  store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51

  br label %sw.epilog, !dbg !52, !phasar.instruction.id !53

  call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56

  store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57

  br label %sw.epilog4, !dbg !58, !phasar.instruction.id !59

  call void @llvm.dbg.declare(metadata i32* %a5, metadata !60, metadata !21), !dbg !61, !phasar.instruction.id !62
Got call instruction

  store i32 0, i32* %a5, align 4, !dbg !61, !phasar.instruction.id !63
Got store instruction

  %2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65
Got load instruction
Adding load instruction fact

  switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67
Got switch instruction
Adding switch instruction fact

  switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67
Got switch instruction
Adding switch instruction fact

  %3 = load i32, i32* %rc, align 4, !dbg !75, !phasar.instruction.id !76
Got load instruction
Adding load instruction fact

  call void @llvm.dbg.declare(metadata i32* %a7, metadata !68, metadata !21), !dbg !70, !phasar.instruction.id !71

  store i32 0, i32* %a7, align 4, !dbg !70, !phasar.instruction.id !72

  br label %sw.epilog8, !dbg !73, !phasar.instruction.id !74

  %3 = load i32, i32* %rc, align 4, !dbg !75, !phasar.instruction.id !76
Got load instruction
Adding load instruction fact

  call void @llvm.dbg.declare(metadata i32* %rc, metadata !20, metadata !21), !dbg !22, !phasar.instruction.id !23
Got call instruction

  %rc = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %taint = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45

  store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36

  store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29
Got store instruction
Adding store instruction

  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !19
Got store instruction

  %a7 = alloca i32, align 4, !phasar.instruction.id !18
Got operands checking instruction (alloca)

  %a3 = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %a5 = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  %0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31
Got load instruction
Adding load instruction fact

  call void @llvm.dbg.declare(metadata i32* %taint, metadata !24, metadata !21), !dbg !25, !phasar.instruction.id !26
Got call instruction

  call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50

  %a = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  br label %sw.bb, !dbg !37, !phasar.instruction.id !38

  %1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40

  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33
Got switch instruction
Adding switch instruction fact

  br label %sw.bb2, !dbg !46, !phasar.instruction.id !47

  %2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65
Got load instruction
Adding load instruction fact

  switch i32 %1, label %sw.default1 [
    i32 0, label %sw.bb2
  ], !dbg !41, !phasar.instruction.id !42

  store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51

  br label %sw.epilog, !dbg !52, !phasar.instruction.id !53

  call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56

  store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57

  br label %sw.epilog4, !dbg !58, !phasar.instruction.id !59

  call void @llvm.dbg.declare(metadata i32* %a5, metadata !60, metadata !21), !dbg !61, !phasar.instruction.id !62
Got call instruction

  store i32 0, i32* %a5, align 4, !dbg !61, !phasar.instruction.id !63
Got store instruction

  %3 = load i32, i32* %rc, align 4, !dbg !75, !phasar.instruction.id !76
Got load instruction
Adding load instruction fact

  br label %sw.epilog8, !dbg !73, !phasar.instruction.id !74

  switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67
Got switch instruction
Adding switch instruction fact

  call void @llvm.dbg.declare(metadata i32* %a7, metadata !68, metadata !21), !dbg !70, !phasar.instruction.id !71

  store i32 0, i32* %a7, align 4, !dbg !70, !phasar.instruction.id !72

  ret i32 %3, !dbg !77, !phasar.instruction.id !78worklist size: 37
worklist size: 36
worklist size: 35
worklist size: 34
worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 27
worklist size: 27
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata i32* %rc, metadata !20, metadata !21), !dbg !22, !phasar.instruction.id !23, ID: 9
Facts:
	EMPTY


Instruction:
%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
Facts:
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14


Instruction:
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
Facts:
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14


Instruction:
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
Facts:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11


Instruction:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !19, ID: 8
Facts:
	EMPTY


Instruction:
%a7 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7
Facts:
	EMPTY


Instruction:
%a3 = alloca i32, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%a5 = alloca i32, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
Facts:
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11


Instruction:
call void @llvm.dbg.declare(metadata i32* %taint, metadata !24, metadata !21), !dbg !25, !phasar.instruction.id !26, ID: 10
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14


Instruction:
%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
br label %sw.bb, !dbg !37, !phasar.instruction.id !38, ID: 16
Facts:
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14


Instruction:
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
Facts:
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14


Instruction:
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14
Facts:
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13


Instruction:
br label %sw.bb2, !dbg !46, !phasar.instruction.id !47, ID: 20
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14


Instruction:
%2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25


Instruction:
switch i32 %1, label %sw.default1 [
    i32 0, label %sw.bb2
  ], !dbg !41, !phasar.instruction.id !42, ID: 18
Facts:
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14


Instruction:
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14


Instruction:
br label %sw.epilog, !dbg !52, !phasar.instruction.id !53, ID: 23
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22


Instruction:
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22


Instruction:
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24


Instruction:
br label %sw.epilog4, !dbg !58, !phasar.instruction.id !59, ID: 26
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25


Instruction:
call void @llvm.dbg.declare(metadata i32* %a5, metadata !60, metadata !21), !dbg !61, !phasar.instruction.id !62, ID: 27
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !32, !phasar.instruction.id !33, ID: 14
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25


Instruction:
store i32 0, i32* %a5, align 4, !dbg !61, !phasar.instruction.id !63, ID: 28
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25


Instruction:
%3 = load i32, i32* %rc, align 4, !dbg !75, !phasar.instruction.id !76, ID: 34
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
%2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25
switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67, ID: 30
call void @llvm.dbg.declare(metadata i32* %a7, metadata !68, metadata !21), !dbg !70, !phasar.instruction.id !71, ID: 31
store i32 0, i32* %a7, align 4, !dbg !70, !phasar.instruction.id !72, ID: 32


Instruction:
br label %sw.epilog8, !dbg !73, !phasar.instruction.id !74, ID: 33
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
%2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25
switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67, ID: 30
call void @llvm.dbg.declare(metadata i32* %a7, metadata !68, metadata !21), !dbg !70, !phasar.instruction.id !71, ID: 31
store i32 0, i32* %a7, align 4, !dbg !70, !phasar.instruction.id !72, ID: 32


Instruction:
switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67, ID: 30
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
%2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25


Instruction:
call void @llvm.dbg.declare(metadata i32* %a7, metadata !68, metadata !21), !dbg !70, !phasar.instruction.id !71, ID: 31
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.in75 2018-Dec-29 21:16:05.154776 - [INFO] Write results to file
76 2018-Dec-29 21:16:05.155051 - [INFO] Shutdown llvm and the analysis framework.

struction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
%2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25
switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67, ID: 30


Instruction:
store i32 0, i32* %a7, align 4, !dbg !70, !phasar.instruction.id !72, ID: 32
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
%2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25
switch i32 %2, label %sw.epilog8 [
    i32 0, label %sw.bb6
  ], !dbg !66, !phasar.instruction.id !67, ID: 30
call void @llvm.dbg.declare(metadata i32* %a7, metadata !68, metadata !21), !dbg !70, !phasar.instruction.id !71, ID: 31


Instruction:
ret i32 %3, !dbg !77, !phasar.instruction.id !78, ID: 35
Facts:
store i32 1, i32* %rc, align 4, !dbg !43, !phasar.instruction.id !45, ID: 19
store i32 1, i32* %rc, align 4, !dbg !34, !phasar.instruction.id !36, ID: 15
store i32 %call, i32* %taint, align 4, !dbg !25, !phasar.instruction.id !29, ID: 12
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !27, !phasar.instruction.id !28, ID: 11
%0 = load i32, i32* %taint, align 4, !dbg !30, !phasar.instruction.id !31, ID: 13
call void @llvm.dbg.declare(metadata i32* %a, metadata !48, metadata !21), !dbg !49, !phasar.instruction.id !50, ID: 21
%1 = load i32, i32* %rc, align 4, !dbg !39, !phasar.instruction.id !40, ID: 17
%2 = load i32, i32* %taint, align 4, !dbg !64, !phasar.instruction.id !65, ID: 29
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 22
call void @llvm.dbg.declare(metadata i32* %a3, metadata !54, metadata !21), !dbg !55, !phasar.instruction.id !56, ID: 24
store i32 1, i32* %a3, align 4, !dbg !55, !phasar.instruction.id !57, ID: 25
%3 = load i32, i32* %rc, align 4, !dbg !75, !phasar.instruction.id !76, ID: 34
call void @llvm.dbg.declare(metadata i32* %a7, metadata !68, metadata !21), !dbg !70, !phasar.instruction.id !71, ID: 31
store i32 0, i32* %a7, align 4, !dbg !70, !phasar.instruction.id !72, ID: 32


