0 2018-Dec-26 22:00:43.582174 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-26 22:00:43.582588 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-26 22:00:43.582932 - [INFO] No configuration file is used.
3 2018-Dec-26 22:00:43.583008 - [INFO] Program options have been successfully parsed.
4 2018-Dec-26 22:00:43.583099 - [INFO] Check program options for logical errors.
5 2018-Dec-26 22:00:43.583189 - [INFO] Set-up IR database.
6 2018-Dec-26 22:00:43.587490 - [INFO] Constructed the analysis controller.
7 2018-Dec-26 22:00:43.587601 - [INFO] Found the following IR files for this project: 
8 2018-Dec-26 22:00:43.587663 - [INFO] 	main.ll
9 2018-Dec-26 22:00:43.587722 - [INFO] Check for chosen entry points.
10 2018-Dec-26 22:00:43.587783 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-26 22:00:43.587841 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-26 22:00:43.587902 - [INFO] Preprocess module: main.ll
13 2018-Dec-26 22:00:43.588248 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-26 22:00:43.588372 - [INFO] Running ValueAnnotationPass
15 2018-Dec-26 22:00:43.588637 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-26 22:00:43.588701 - [INFO] Allocated Types    : 2
17 2018-Dec-26 22:00:43.588765 - [INFO] Allocation Sites   : 3
18 2018-Dec-26 22:00:43.588823 - [INFO] Basic Blocks       : 1
19 2018-Dec-26 22:00:43.588881 - [INFO] Calls Sites        : 3
20 2018-Dec-26 22:00:43.588938 - [INFO] Functions          : 3
21 2018-Dec-26 22:00:43.588996 - [INFO] Globals            : 1
22 2018-Dec-26 22:00:43.589053 - [INFO] Global Pointer     : 1
23 2018-Dec-26 22:00:43.589111 - [INFO] Instructions       : 11
24 2018-Dec-26 22:00:43.589168 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-26 22:00:43.589226 - [INFO] Store Instructions : 3
26 2018-Dec-26 22:00:43.589283 - [INFO]  
27 2018-Dec-26 22:00:43.589358 - [INFO]   i32
28 2018-Dec-26 22:00:43.589420 - [INFO]   i8*
29 2018-Dec-26 22:00:43.589776 - [DEBUG] Analyzing function: main
30 2018-Dec-26 22:00:43.590596 - [INFO] Reconstruct the class hierarchy.
31 2018-Dec-26 22:00:43.590675 - [INFO] Construct type hierarchy
32 2018-Dec-26 22:00:43.590744 - [DEBUG] Analyse types in module: main.ll
33 2018-Dec-26 22:00:43.590907 - [DEBUG] Reconstruct virtual function table for module: main.ll
34 2018-Dec-26 22:00:43.590976 - [INFO] Reconstruction of class hierarchy completed.
35 2018-Dec-26 22:00:43.591038 - [INFO] Starting CallGraphAnalysisType: OTF
36 2018-Dec-26 22:00:43.591164 - [DEBUG] Walking in function: main
37 2018-Dec-26 22:00:43.591252 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %taint, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 5
38 2018-Dec-26 22:00:43.591549 - [DEBUG] Found 1 possible target(s)
39 2018-Dec-26 22:00:43.591609 - [DEBUG] Target name: llvm.dbg.declare
40 2018-Dec-26 22:00:43.591692 - [DEBUG] Walking in function: llvm.dbg.declare
41 2018-Dec-26 22:00:43.591755 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
42 2018-Dec-26 22:00:43.591819 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6
43 2018-Dec-26 22:00:43.592075 - [DEBUG] Found 1 possible target(s)
44 2018-Dec-26 22:00:43.592134 - [DEBUG] Target name: getenv
45 2018-Dec-26 22:00:43.592215 - [DEBUG] Walking in function: getenv
46 2018-Dec-26 22:00:43.592277 - [DEBUG] Function already visited or only declaration: getenv
47 2018-Dec-26 22:00:43.592340 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27, ID: 8
48 2018-Dec-26 22:00:43.592550 - [DEBUG] Found 1 possible target(s)
49 2018-Dec-26 22:00:43.592609 - [DEBUG] Target name: llvm.dbg.declare
50 2018-Dec-26 22:00:43.592684 - [DEBUG] Walking in function: llvm.dbg.declare
51 2018-Dec-26 22:00:43.592746 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
52 2018-Dec-26 22:00:43.592825 - [INFO] Call graph has been constructed
53 2018-Dec-26 22:00:43.592887 - [INFO] Performing analysis: plugin
54 2018-Dec-26 22:00:43.592954 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
55 2018-Dec-26 22:00:43.593420 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraPluginTest

flow()
  %retval = alloca i32, align 4, !phasar.instruction.id !12
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %taint = alloca i8*, align 8, !phasar.instruction.id !13
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %b = alloca i8*, align 8, !phasar.instruction.id !14
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  call void @llvm.dbg.declare(metadata i8** %taint, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
===========================
Got call instruction
Adding call instruction fact
sqSubSetEqual()
Old Facts: 0
New Facts: 1
join()
Adding line: 10

flow()
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
===========================
Got store instruction
Adding store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 2
join()
Adding line: 10
Adding line: 10

flow()
  call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 2
join()
Adding line: 10
Adding line: 10

flow()
  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
===========================
Got operands checking instruction (load)
Adding fact
sqSubSetEqual()
Old Facts: 0
New Facts: 3
join()
Adding line: 10
Adding line: 10
Adding line: 11

flow()
  store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30
===========================
Got store instruction
Adding store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 4
join()
Adding line: 11
Adding line: 10
Adding line: 10
Adding line: 11

flow()
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
===========================
Got store instruction
Adding store instruction
sqSubSetEqual()
Old Facts: 2
New Facts: 2

flow()
  call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 2
New Facts: 2

flow()
  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
===========================
Got operands checking instruction (load)
Adding fact
sqSubSetEqual()
Old Facts: 3
New Facts: 3

flow()
  store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30
===========================
Got store instruction
Adding store instruction
sqSubSetEqual()
Old Facts: 4
New Facts: 4

flow()
  call void @llvm.dbg.declare(metadata i8** %taint, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21
===========================
Got call instruction

flow()
  %taint = alloca i8*, align 8, !phasar.instruction.id !13
===========================
Got operands checking instruction (alloca)

flow()
  %b = alloca i8*, align 8, !phasar.instruction.id !14
===========================
Got operands checking instruction (alloca)

flow()
  %retval = alloca i32, align 4, !phasar.instruction.id !12
===========================
Got operands checking instruction (alloca)

flow()
  store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30
===========================
Got store instruction
Adding store instruction

flow()
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
===========================
Got store instruction
Adding store instruction

flow()
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
===========================
Got call instruction
Adding call instruction fact

flow()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
===========================
Got store instruction

flow()
  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
===========================
Got operands checking instruction (load)
Adding fact

flow()
  call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27
===========================
Got call instruction

flow()
  ret i32 0, !dbg !31, !phasar.instruction.id !3256 2018-Dec-26 22:00:43.601821 - [INFO] Write results to file
57 2018-Dec-26 22:00:43.601989 - [INFO] Shutdown llvm and the analysis framework.

===========================
printReport()
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 5
worklist size: 5
worklist size: 5
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata i8** %taint, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 5
Facts:
	EMPTY


Instruction:
%taint = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%b = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30, ID: 10
Facts:
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6
%0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29, ID: 9


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29, ID: 9
Facts:
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6


Instruction:
call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27, ID: 8
Facts:
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6


Instruction:
ret i32 0, !dbg !31, !phasar.instruction.id !32, ID: 11
Facts:
store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30, ID: 10
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6
%0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29, ID: 9


