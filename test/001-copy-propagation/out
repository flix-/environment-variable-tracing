0 2019-Jan-05 10:42:34.053375 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 10:42:34.053785 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 10:42:34.054131 - [INFO] No configuration file is used.
3 2019-Jan-05 10:42:34.054207 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 10:42:34.054303 - [INFO] Check program options for logical errors.
5 2019-Jan-05 10:42:34.054393 - [INFO] Set-up IR database.
6 2019-Jan-05 10:42:34.058404 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 10:42:34.058511 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 10:42:34.058572 - [INFO] 	main.ll
9 2019-Jan-05 10:42:34.058632 - [INFO] Check for chosen entry points.
10 2019-Jan-05 10:42:34.058736 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 10:42:34.058794 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 10:42:34.058855 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 10:42:34.059198 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 10:42:34.059315 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 10:42:34.059589 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 10:42:34.059653 - [INFO] Allocated Types    : 2
17 2019-Jan-05 10:42:34.059718 - [INFO] Allocation Sites   : 3
18 2019-Jan-05 10:42:34.059776 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 10:42:34.059834 - [INFO] Calls Sites        : 3
20 2019-Jan-05 10:42:34.059892 - [INFO] Functions          : 3
21 2019-Jan-05 10:42:34.059950 - [INFO] Globals            : 1
22 2019-Jan-05 10:42:34.060008 - [INFO] Global Pointer     : 1
23 2019-Jan-05 10:42:34.060066 - [INFO] Instructions       : 11
24 2019-Jan-05 10:42:34.060124 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 10:42:34.060181 - [INFO] Store Instructions : 3
26 2019-Jan-05 10:42:34.060239 - [INFO]  
27 2019-Jan-05 10:42:34.060313 - [INFO]   i32
28 2019-Jan-05 10:42:34.060376 - [INFO]   i8*
29 2019-Jan-05 10:42:34.060732 - [DEBUG] Analyzing function: main
30 2019-Jan-05 10:42:34.061511 - [INFO] Reconstruct the class hierarchy.
31 2019-Jan-05 10:42:34.061580 - [INFO] Construct type hierarchy
32 2019-Jan-05 10:42:34.061640 - [DEBUG] Analyse types in module: main.ll
33 2019-Jan-05 10:42:34.061785 - [DEBUG] Reconstruct virtual function table for module: main.ll
34 2019-Jan-05 10:42:34.061854 - [INFO] Reconstruction of class hierarchy completed.
35 2019-Jan-05 10:42:34.061917 - [INFO] Starting CallGraphAnalysisType: OTF
36 2019-Jan-05 10:42:34.062063 - [DEBUG] Walking in function: main
37 2019-Jan-05 10:42:34.062151 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %taint, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 5
38 2019-Jan-05 10:42:34.062435 - [DEBUG] Found 1 possible target(s)
39 2019-Jan-05 10:42:34.062495 - [DEBUG] Target name: llvm.dbg.declare
40 2019-Jan-05 10:42:34.062577 - [DEBUG] Walking in function: llvm.dbg.declare
41 2019-Jan-05 10:42:34.062640 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
42 2019-Jan-05 10:42:34.062704 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6
43 2019-Jan-05 10:42:34.062958 - [DEBUG] Found 1 possible target(s)
44 2019-Jan-05 10:42:34.063017 - [DEBUG] Target name: getenv
45 2019-Jan-05 10:42:34.063097 - [DEBUG] Walking in function: getenv
46 2019-Jan-05 10:42:34.063159 - [DEBUG] Function already visited or only declaration: getenv
47 2019-Jan-05 10:42:34.063223 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27, ID: 8
48 2019-Jan-05 10:42:34.063434 - [DEBUG] Found 1 possible target(s)
49 2019-Jan-05 10:42:34.063493 - [DEBUG] Target name: llvm.dbg.declare
50 2019-Jan-05 10:42:34.063568 - [DEBUG] Walking in function: llvm.dbg.declare
51 2019-Jan-05 10:42:34.063630 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
52 2019-Jan-05 10:42:34.063710 - [INFO] Call graph has been constructed
53 2019-Jan-05 10:42:34.063772 - [INFO] Performing analysis: plugin
54 2019-Jan-05 10:42:34.063838 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
55 2019-Jan-05 10:42:34.064333 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %taint = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %b = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i8** %taint, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
=============

Added line number: 10

  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
=============

Added line number: 10
Added line number: 10

  call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
=============

Added line number: 10
Added line number: 10

  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
=============

Added line number: 10
Added line number: 10
Added line number: 11

  store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
=============

Added line number: 11
Added line number: 10
Added line number: 10
Added line number: 11

  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
=============


  call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
=============


  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
=============


  store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30
  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
=============


  call void @llvm.dbg.declare(metadata i8** %taint, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21
Got call instruction

  %taint = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %b = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
Got store instruction
Removed 0 memory locations from facts

  %0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29
Got load instruction
Adding load instruction fact

  call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27
Got call instruction

  ret i32 0, !dbg !31, !phasar.instruction.id !3256 2019-Jan-05 10:42:34.076283 - [INFO] Write results to file
57 2019-Jan-05 10:42:34.076452 - [INFO] Shutdown llvm and the analysis framework.

worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 5
worklist size: 5
worklist size: 5
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata i8** %taint, metadata !16, metadata !19), !dbg !20, !phasar.instruction.id !21, ID: 5
Facts:
	EMPTY


Instruction:
%taint = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%b = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30, ID: 10
Facts:
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6
%0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29, ID: 9


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29, ID: 9
Facts:
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6


Instruction:
call void @llvm.dbg.declare(metadata i8** %b, metadata !25, metadata !19), !dbg !26, !phasar.instruction.id !27, ID: 8
Facts:
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6


Instruction:
ret i32 0, !dbg !31, !phasar.instruction.id !32, ID: 11
Facts:
store i8* %0, i8** %b, align 8, !dbg !26, !phasar.instruction.id !30, ID: 10
store i8* %call, i8** %taint, align 8, !dbg !20, !phasar.instruction.id !24, ID: 7
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !22, !phasar.instruction.id !23, ID: 6
%0 = load i8*, i8** %taint, align 8, !dbg !28, !phasar.instruction.id !29, ID: 9


