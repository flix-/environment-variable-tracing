0 2018-Dec-28 10:33:45.461090 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-28 10:33:45.461521 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-28 10:33:45.461882 - [INFO] No configuration file is used.
3 2018-Dec-28 10:33:45.461960 - [INFO] Program options have been successfully parsed.
4 2018-Dec-28 10:33:45.462072 - [INFO] Check program options for logical errors.
5 2018-Dec-28 10:33:45.462167 - [INFO] Set-up IR database.
6 2018-Dec-28 10:33:45.466503 - [INFO] Constructed the analysis controller.
7 2018-Dec-28 10:33:45.466625 - [INFO] Found the following IR files for this project: 
8 2018-Dec-28 10:33:45.466687 - [INFO] 	main.ll
9 2018-Dec-28 10:33:45.466746 - [INFO] Check for chosen entry points.
10 2018-Dec-28 10:33:45.466808 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-28 10:33:45.466867 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-28 10:33:45.466928 - [INFO] Preprocess module: main.ll
13 2018-Dec-28 10:33:45.467285 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-28 10:33:45.467457 - [INFO] Running ValueAnnotationPass
15 2018-Dec-28 10:33:45.467751 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-28 10:33:45.467816 - [INFO] Allocated Types    : 1
17 2018-Dec-28 10:33:45.467881 - [INFO] Allocation Sites   : 2
18 2018-Dec-28 10:33:45.467939 - [INFO] Basic Blocks       : 3
19 2018-Dec-28 10:33:45.467996 - [INFO] Calls Sites        : 3
20 2018-Dec-28 10:33:45.468054 - [INFO] Functions          : 4
21 2018-Dec-28 10:33:45.468112 - [INFO] Globals            : 0
22 2018-Dec-28 10:33:45.468170 - [INFO] Global Pointer     : 0
23 2018-Dec-28 10:33:45.468227 - [INFO] Instructions       : 14
24 2018-Dec-28 10:33:45.468290 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-28 10:33:45.468349 - [INFO] Store Instructions : 2
26 2018-Dec-28 10:33:45.468406 - [INFO]  
27 2018-Dec-28 10:33:45.468490 - [INFO]   i32
28 2018-Dec-28 10:33:45.468872 - [DEBUG] Analyzing function: main
29 2018-Dec-28 10:33:45.469069 - [INFO] Reconstruct the class hierarchy.
30 2018-Dec-28 10:33:45.469140 - [INFO] Construct type hierarchy
31 2018-Dec-28 10:33:45.469201 - [DEBUG] Analyse types in module: main.ll
32 2018-Dec-28 10:33:45.469337 - [DEBUG] Reconstruct virtual function table for module: main.ll
33 2018-Dec-28 10:33:45.469403 - [INFO] Reconstruction of class hierarchy completed.
34 2018-Dec-28 10:33:45.469466 - [INFO] Starting CallGraphAnalysisType: OTF
35 2018-Dec-28 10:33:45.469574 - [DEBUG] Walking in function: main
36 2018-Dec-28 10:33:45.469665 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %no_taint, metadata !14, metadata !15), !dbg !16, !phasar.instruction.id !17, ID: 3
37 2018-Dec-28 10:33:45.469959 - [DEBUG] Found 1 possible target(s)
38 2018-Dec-28 10:33:45.470018 - [DEBUG] Target name: llvm.dbg.declare
39 2018-Dec-28 10:33:45.470105 - [DEBUG] Walking in function: llvm.dbg.declare
40 2018-Dec-28 10:33:45.470168 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
41 2018-Dec-28 10:33:45.470232 - [DEBUG] Found static call-site: %call = call i32 (...) @foo(), !dbg !18, !phasar.instruction.id !19, ID: 4
42 2018-Dec-28 10:33:45.470443 - [DEBUG] Found 1 possible target(s)
43 2018-Dec-28 10:33:45.470502 - [DEBUG] Target name: foo
44 2018-Dec-28 10:33:45.470582 - [DEBUG] Walking in function: foo
45 2018-Dec-28 10:33:45.470666 - [DEBUG] Function already visited or only declaration: foo
46 2018-Dec-28 10:33:45.470733 - [DEBUG] Found static call-site: %call1 = call i32 (...) @bar(), !dbg !23, !phasar.instruction.id !24, ID: 7
47 2018-Dec-28 10:33:45.470935 - [DEBUG] Found 1 possible target(s)
48 2018-Dec-28 10:33:45.470994 - [DEBUG] Target name: bar
49 2018-Dec-28 10:33:45.471071 - [DEBUG] Walking in function: bar
50 2018-Dec-28 10:33:45.471133 - [DEBUG] Function already visited or only declaration: bar
51 2018-Dec-28 10:33:45.471196 - [INFO] Call graph has been constructed
52 2018-Dec-28 10:33:45.471258 - [INFO] Performing analysis: plugin
53 2018-Dec-28 10:33:45.471328 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
54 2018-Dec-28 10:33:45.471836 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraPluginTest

flow()
  %retval = alloca i32, align 4, !phasar.instruction.id !11
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %no_taint = alloca i32, align 4, !phasar.instruction.id !12
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !13
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  call void @llvm.dbg.declare(metadata i32* %no_taint, metadata !14, metadata !15), !dbg !16, !phasar.instruction.id !17
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %call = call i32 (...) @foo(), !dbg !18, !phasar.instruction.id !19
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %tobool = icmp ne i32 %call, 0, !dbg !18, !phasar.instruction.id !20
===========================
Got operands checking instruction (icmp)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !21, !phasar.instruction.id !22
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !21, !phasar.instruction.id !22
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %call1 = call i32 (...) @bar(), !dbg !23, !phasar.instruction.id !24
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %tobool2 = icmp ne i32 %call1, 0, !dbg !21, !phasar.instruction.id !25
===========================
Got operands checking instruction (icmp)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  br label %lor.end, !dbg !21, !phasar.instruction.id !26
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %0 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ], !phasar.instruction.id !27
===========================
Got phi node instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %lor.ext = zext i1 %0 to i32, !dbg !21, !phasar.instruction.id !28
===========================
Got operands checking instruction (zext)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  store i32 %lor.ext, i32* %no_taint, align 4, !dbg !16, !phasar.instruction.id !29
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %retval = alloca i32, align 4, !phasar.instruction.id !11
===========================
Got operands checking instruction (alloca)

flow()
  call void @llvm.dbg.declare(metadata i32* %no_taint, metadata !14, metadata !15), !dbg !16, !phasar.instruction.id !17
===========================
Got call instruction

flow()
  %no_taint = alloca i32, align 4, !phasar.instruction.id !12
===========================
Got operands checking instruction (alloca)

flow()
  %tobool = icmp ne i32 %call, 0, !dbg !18, !phasar.instruction.id !20
===========================
Got operands checking instruction (icmp)

flow()
  %call = call i32 (...) @foo(), !dbg !18, !phasar.instruction.id !19
===========================
Got call instruction

flow()
  %lor.ext = zext i1 %0 to i32, !dbg !21, !phasar.instruction.id !28
===========================
Got operands checking instruction (zext)

flow()
  store i32 %lor.ext, i32* %no_taint, align 4, !dbg !16, !phasar.instruction.id !29
===========================
Got store instruction

flow()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !13
===========================
Got store instruction

flow()
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !21, !phasar.instruction.id !22
===========================
Got branch instruction

flow()
  %call1 = call i32 (...) @bar(), !dbg !23, !phasar.instruction.id !24
===========================
Got call instruction

flow()
  %tobool2 = icmp ne i32 %call1, 0, !dbg !21, !phasar.instruction.id !25
===========================
Got operands checking instruction (icmp)

flow()
  br label %lor.end, !dbg !21, !phasar.instruction.id !26
===========================
Got branch instruction

flow()
  %0 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ], !phasar.instruction.id !27
===========================
Got phi node instruction

flow()
  ret i32 0, !dbg !30, !phasar.instruction.id !3155 2018-Dec-28 10:33:45.479043 - [INFO] Write results to file
56 2018-Dec-28 10:33:45.479225 - [INFO] Shutdown llvm and the analysis framework.

===========================
printReport()
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !11, ID: 0
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %no_taint, metadata !14, metadata !15), !dbg !16, !phasar.instruction.id !17, ID: 3
Facts:
	EMPTY


Instruction:
%no_taint = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
%tobool = icmp ne i32 %call, 0, !dbg !18, !phasar.instruction.id !20, ID: 5
Facts:
	EMPTY


Instruction:
%call = call i32 (...) @foo(), !dbg !18, !phasar.instruction.id !19, ID: 4
Facts:
	EMPTY


Instruction:
%lor.ext = zext i1 %0 to i32, !dbg !21, !phasar.instruction.id !28, ID: 11
Facts:
	EMPTY


Instruction:
store i32 %lor.ext, i32* %no_taint, align 4, !dbg !16, !phasar.instruction.id !29, ID: 12
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !21, !phasar.instruction.id !22, ID: 6
Facts:
	EMPTY


Instruction:
%call1 = call i32 (...) @bar(), !dbg !23, !phasar.instruction.id !24, ID: 7
Facts:
	EMPTY


Instruction:
%tobool2 = icmp ne i32 %call1, 0, !dbg !21, !phasar.instruction.id !25, ID: 8
Facts:
	EMPTY


Instruction:
br label %lor.end, !dbg !21, !phasar.instruction.id !26, ID: 9
Facts:
	EMPTY


Instruction:
%0 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ], !phasar.instruction.id !27, ID: 10
Facts:
	EMPTY


Instruction:
ret i32 0, !dbg !30, !phasar.instruction.id !31, ID: 13
Facts:
	EMPTY


