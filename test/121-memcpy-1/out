0 2018-Dec-31 15:54:47.751313 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-31 15:54:47.751731 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-31 15:54:47.752082 - [INFO] No configuration file is used.
3 2018-Dec-31 15:54:47.752159 - [INFO] Program options have been successfully parsed.
4 2018-Dec-31 15:54:47.752251 - [INFO] Check program options for logical errors.
5 2018-Dec-31 15:54:47.752341 - [INFO] Set-up IR database.
6 2018-Dec-31 15:54:47.757706 - [INFO] Constructed the analysis controller.
7 2018-Dec-31 15:54:47.757822 - [INFO] Found the following IR files for this project: 
8 2018-Dec-31 15:54:47.757884 - [INFO] 	main.ll
9 2018-Dec-31 15:54:47.757944 - [INFO] Check for chosen entry points.
10 2018-Dec-31 15:54:47.758005 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-31 15:54:47.758064 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-31 15:54:47.758125 - [INFO] Preprocess module: main.ll
13 2018-Dec-31 15:54:47.758474 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-31 15:54:47.758604 - [INFO] Running ValueAnnotationPass
15 2018-Dec-31 15:54:47.758903 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-31 15:54:47.758966 - [INFO] Allocated Types    : 3
17 2018-Dec-31 15:54:47.759030 - [INFO] Allocation Sites   : 4
18 2018-Dec-31 15:54:47.759088 - [INFO] Basic Blocks       : 1
19 2018-Dec-31 15:54:47.759145 - [INFO] Calls Sites        : 5
20 2018-Dec-31 15:54:47.759203 - [INFO] Functions          : 4
21 2018-Dec-31 15:54:47.759260 - [INFO] Globals            : 1
22 2018-Dec-31 15:54:47.759318 - [INFO] Global Pointer     : 1
23 2018-Dec-31 15:54:47.759375 - [INFO] Instructions       : 16
24 2018-Dec-31 15:54:47.759432 - [INFO] Memory Intrinsics  : 1
25 2018-Dec-31 15:54:47.759531 - [INFO] Store Instructions : 3
26 2018-Dec-31 15:54:47.759589 - [INFO]  
27 2018-Dec-31 15:54:47.759664 - [INFO]   i32
28 2018-Dec-31 15:54:47.759727 - [INFO]   [3 x i8]
29 2018-Dec-31 15:54:47.759789 - [INFO]   i8*
30 2018-Dec-31 15:54:47.760273 - [DEBUG] Analyzing function: main
31 2018-Dec-31 15:54:47.761568 - [INFO] Reconstruct the class hierarchy.
32 2018-Dec-31 15:54:47.761646 - [INFO] Construct type hierarchy
33 2018-Dec-31 15:54:47.761708 - [DEBUG] Analyse types in module: main.ll
34 2018-Dec-31 15:54:47.761872 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2018-Dec-31 15:54:47.761941 - [INFO] Reconstruction of class hierarchy completed.
36 2018-Dec-31 15:54:47.762005 - [INFO] Starting CallGraphAnalysisType: OTF
37 2018-Dec-31 15:54:47.762158 - [DEBUG] Walking in function: main
38 2018-Dec-31 15:54:47.762244 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
39 2018-Dec-31 15:54:47.762572 - [DEBUG] Found 1 possible target(s)
40 2018-Dec-31 15:54:47.762633 - [DEBUG] Target name: llvm.dbg.declare
41 2018-Dec-31 15:54:47.762715 - [DEBUG] Walking in function: llvm.dbg.declare
42 2018-Dec-31 15:54:47.762778 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2018-Dec-31 15:54:47.762866 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
44 2018-Dec-31 15:54:47.763153 - [DEBUG] Found 1 possible target(s)
45 2018-Dec-31 15:54:47.763213 - [DEBUG] Target name: getenv
46 2018-Dec-31 15:54:47.763294 - [DEBUG] Walking in function: getenv
47 2018-Dec-31 15:54:47.763356 - [DEBUG] Function already visited or only declaration: getenv
48 2018-Dec-31 15:54:47.763420 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31, ID: 9
49 2018-Dec-31 15:54:47.763662 - [DEBUG] Found 1 possible target(s)
50 2018-Dec-31 15:54:47.763722 - [DEBUG] Target name: llvm.dbg.declare
51 2018-Dec-31 15:54:47.763797 - [DEBUG] Walking in function: llvm.dbg.declare
52 2018-Dec-31 15:54:47.763859 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2018-Dec-31 15:54:47.763940 - [DEBUG] Found static call-site: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
54 2018-Dec-31 15:54:47.764196 - [DEBUG] Found 1 possible target(s)
55 2018-Dec-31 15:54:47.764255 - [DEBUG] Target name: llvm.memcpy.p0i8.p0i8.i64
56 2018-Dec-31 15:54:47.764333 - [DEBUG] Walking in function: llvm.memcpy.p0i8.p0i8.i64
57 2018-Dec-31 15:54:47.764396 - [DEBUG] Function already visited or only declaration: llvm.memcpy.p0i8.p0i8.i64
58 2018-Dec-31 15:54:47.764460 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39, ID: 13
59 2018-Dec-31 15:54:47.764701 - [DEBUG] Found 1 possible target(s)
60 2018-Dec-31 15:54:47.764761 - [DEBUG] Target name: llvm.dbg.declare
61 2018-Dec-31 15:54:47.764835 - [DEBUG] Walking in function: llvm.dbg.declare
62 2018-Dec-31 15:54:47.764898 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
63 2018-Dec-31 15:54:47.764960 - [INFO] Call graph has been constructed
64 2018-Dec-31 15:54:47.765022 - [INFO] Performing analysis: plugin
65 2018-Dec-31 15:54:47.765089 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
66 2018-Dec-31 15:54:47.765569 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %tainted = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %t = alloca [3 x i8], align 1, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %also_tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removing memory location
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Adding line: 10

  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Adding line: 10
Adding line: 10

  call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Adding line: 10
Adding line: 10

  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Adding line: 10
Adding line: 10

  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Adding line: 10
Adding line: 10
Adding line: 13

  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
Got memcpy instruction
Removing memory location
Adding memory location (memcpy)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Adding line: 13
Adding line: 10
Adding line: 10
Adding line: 13

  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39
Got call instruction
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Adding line: 13
Adding line: 10
Adding line: 10
Adding line: 13

  %arraydecay1 = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Adding line: 13
Adding line: 10
Adding line: 10
Adding line: 13

  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Adding line: 13
Adding line: 15
Adding line: 10
Adding line: 10
Adding line: 13

  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
Got memcpy instruction
Removing memory location
Adding memory location (memcpy)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39
Got call instruction
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  %arraydecay1 = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
Got memcpy instruction
Removing memory location
Adding memory location (memcpy)

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction

  %tainted = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %t = alloca [3 x i8], align 1, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
Got store instruction
Removing memory location
Adding memory location (store)

  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33

  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removing memory location
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removing memory location

  call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39
Got call instruction

  %also_tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
Got load instruction
Adding load instruction fact

  %arraydecay1 = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41

  ret i32 0, !dbg !43, !phasar.instruction.id !44worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
Facts:
	EMPTY


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%t = alloca [3 x i8], align 1, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42, ID: 15
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


Instruction:
%arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 10
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31, ID: 9
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39, ID: 13
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


Instruction:
%also_tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* g67 2018-Dec-31 15:54:47.791702 - [INFO] Write results to file
68 2018-Dec-31 15:54:47.791931 - [INFO] Shutdown llvm and the analysis framework.

etelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
%arraydecay1 = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 14
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


Instruction:
ret i32 0, !dbg !43, !phasar.instruction.id !44, ID: 16
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42, ID: 15
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


