0 2019-Jan-05 14:31:45.694148 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 14:31:45.694565 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 14:31:45.694908 - [INFO] No configuration file is used.
3 2019-Jan-05 14:31:45.694993 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 14:31:45.695090 - [INFO] Check program options for logical errors.
5 2019-Jan-05 14:31:45.695180 - [INFO] Set-up IR database.
6 2019-Jan-05 14:31:45.700336 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 14:31:45.700455 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 14:31:45.700516 - [INFO] 	main.ll
9 2019-Jan-05 14:31:45.700576 - [INFO] Check for chosen entry points.
10 2019-Jan-05 14:31:45.700680 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 14:31:45.700739 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 14:31:45.700800 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 14:31:45.701146 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 14:31:45.701276 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 14:31:45.701588 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 14:31:45.701652 - [INFO] Allocated Types    : 3
17 2019-Jan-05 14:31:45.701723 - [INFO] Allocation Sites   : 4
18 2019-Jan-05 14:31:45.701781 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 14:31:45.701838 - [INFO] Calls Sites        : 5
20 2019-Jan-05 14:31:45.701896 - [INFO] Functions          : 4
21 2019-Jan-05 14:31:45.701953 - [INFO] Globals            : 1
22 2019-Jan-05 14:31:45.702011 - [INFO] Global Pointer     : 1
23 2019-Jan-05 14:31:45.702068 - [INFO] Instructions       : 16
24 2019-Jan-05 14:31:45.702126 - [INFO] Memory Intrinsics  : 1
25 2019-Jan-05 14:31:45.702183 - [INFO] Store Instructions : 3
26 2019-Jan-05 14:31:45.702241 - [INFO]  
27 2019-Jan-05 14:31:45.702320 - [INFO]   i32
28 2019-Jan-05 14:31:45.702384 - [INFO]   [3 x i8]
29 2019-Jan-05 14:31:45.702446 - [INFO]   i8*
30 2019-Jan-05 14:31:45.702930 - [DEBUG] Analyzing function: main
31 2019-Jan-05 14:31:45.704241 - [INFO] Reconstruct the class hierarchy.
32 2019-Jan-05 14:31:45.704313 - [INFO] Construct type hierarchy
33 2019-Jan-05 14:31:45.704374 - [DEBUG] Analyse types in module: main.ll
34 2019-Jan-05 14:31:45.704538 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2019-Jan-05 14:31:45.704607 - [INFO] Reconstruction of class hierarchy completed.
36 2019-Jan-05 14:31:45.704669 - [INFO] Starting CallGraphAnalysisType: OTF
37 2019-Jan-05 14:31:45.704825 - [DEBUG] Walking in function: main
38 2019-Jan-05 14:31:45.704912 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
39 2019-Jan-05 14:31:45.705217 - [DEBUG] Found 1 possible target(s)
40 2019-Jan-05 14:31:45.705277 - [DEBUG] Target name: llvm.dbg.declare
41 2019-Jan-05 14:31:45.705360 - [DEBUG] Walking in function: llvm.dbg.declare
42 2019-Jan-05 14:31:45.705423 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2019-Jan-05 14:31:45.705486 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
44 2019-Jan-05 14:31:45.705772 - [DEBUG] Found 1 possible target(s)
45 2019-Jan-05 14:31:45.705831 - [DEBUG] Target name: getenv
46 2019-Jan-05 14:31:45.705911 - [DEBUG] Walking in function: getenv
47 2019-Jan-05 14:31:45.705973 - [DEBUG] Function already visited or only declaration: getenv
48 2019-Jan-05 14:31:45.706037 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31, ID: 9
49 2019-Jan-05 14:31:45.706280 - [DEBUG] Found 1 possible target(s)
50 2019-Jan-05 14:31:45.706339 - [DEBUG] Target name: llvm.dbg.declare
51 2019-Jan-05 14:31:45.706414 - [DEBUG] Walking in function: llvm.dbg.declare
52 2019-Jan-05 14:31:45.706476 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2019-Jan-05 14:31:45.706558 - [DEBUG] Found static call-site: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
54 2019-Jan-05 14:31:45.706812 - [DEBUG] Found 1 possible target(s)
55 2019-Jan-05 14:31:45.706871 - [DEBUG] Target name: llvm.memcpy.p0i8.p0i8.i64
56 2019-Jan-05 14:31:45.706949 - [DEBUG] Walking in function: llvm.memcpy.p0i8.p0i8.i64
57 2019-Jan-05 14:31:45.707011 - [DEBUG] Function already visited or only declaration: llvm.memcpy.p0i8.p0i8.i64
58 2019-Jan-05 14:31:45.707075 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39, ID: 13
59 2019-Jan-05 14:31:45.707351 - [DEBUG] Found 1 possible target(s)
60 2019-Jan-05 14:31:45.707410 - [DEBUG] Target name: llvm.dbg.declare
61 2019-Jan-05 14:31:45.707485 - [DEBUG] Walking in function: llvm.dbg.declare
62 2019-Jan-05 14:31:45.707547 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
63 2019-Jan-05 14:31:45.707609 - [INFO] Call graph has been constructed
64 2019-Jan-05 14:31:45.707670 - [INFO] Performing analysis: plugin
65 2019-Jan-05 14:31:45.707736 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
66 2019-Jan-05 14:31:45.708239 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %tainted = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %t = alloca [3 x i8], align 1, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %also_tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 10

  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 10
Added line number: 10

  call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 10
Added line number: 10

  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============

Added line number: 10
Added line number: 10

  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Added line number: 10
Added line number: 10
Added line number: 13

  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
Got memcpy instruction
Removed 0 memory locations from facts
Adding memory location (memcpy)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Added line number: 13
Added line number: 10
Added line number: 10
Added line number: 13

  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39
Got call instruction
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Added line number: 13
Added line number: 10
Added line number: 10
Added line number: 13

  %arraydecay1 = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Added line number: 13
Added line number: 10
Added line number: 10
Added line number: 13

  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============

Added line number: 13
Added line number: 15
Added line number: 10
Added line number: 10
Added line number: 13

  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
=============


  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
Got memcpy instruction
Removed 0 memory locations from facts
Adding memory location (memcpy)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39
Got call instruction
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  %arraydecay1 = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
=============


  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36
Got memcpy instruction
Removed 0 memory locations from facts
Adding memory location (memcpy)

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22
Got call instruction

  %tainted = alloca i8*, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %t = alloca [3 x i8], align 1, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33

  store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction
Removed 0 memory locations from facts

  call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39
Got call instruction

  %also_tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35
Got load instruction
Adding load instruction fact

  %arraydecay1 = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41

  ret i32 0, !dbg !43, !phasar.instruction.id !44worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !17, metadata !20), !dbg !21, !phasar.instruction.id !22, ID: 6
Facts:
	EMPTY


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%t = alloca [3 x i8], align 1, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42, ID: 15
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


Instruction:
%arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !32, !phasar.instruction.id !33, ID: 10
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata [3 x i8]* %t, metadata !26, metadata !20), !dbg !30, !phasar.instruction.id !31, ID: 9
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !37, metadata !20), !dbg !38, !phasar.instruction.id !39, ID: 13
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


Instruction:
%also_tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11
Facts:
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* g67 2019-Jan-05 14:31:45.734525 - [INFO] Write results to file
68 2019-Jan-05 14:31:45.734709 - [INFO] Shutdown llvm and the analysis framework.

etelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7


Instruction:
%arraydecay1 = getelementptr inbounds [3 x i8], [3 x i8]* %t, i32 0, i32 0, !dbg !40, !phasar.instruction.id !41, ID: 14
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


Instruction:
ret i32 0, !dbg !43, !phasar.instruction.id !44, ID: 16
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %0, i64 3, i32 1, i1 false), !dbg !32, !phasar.instruction.id !36, ID: 12
store i8* %arraydecay1, i8** %also_tainted, align 8, !dbg !38, !phasar.instruction.id !42, ID: 15
store i8* %call, i8** %tainted, align 8, !dbg !21, !phasar.instruction.id !25, ID: 8
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !23, !phasar.instruction.id !24, ID: 7
%0 = load i8*, i8** %tainted, align 8, !dbg !34, !phasar.instruction.id !35, ID: 11


