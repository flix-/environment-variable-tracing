0 2018-Dec-31 15:54:17.454052 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-31 15:54:17.454473 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-31 15:54:17.454817 - [INFO] No configuration file is used.
3 2018-Dec-31 15:54:17.454893 - [INFO] Program options have been successfully parsed.
4 2018-Dec-31 15:54:17.454984 - [INFO] Check program options for logical errors.
5 2018-Dec-31 15:54:17.455073 - [INFO] Set-up IR database.
6 2018-Dec-31 15:54:17.460068 - [INFO] Constructed the analysis controller.
7 2018-Dec-31 15:54:17.460181 - [INFO] Found the following IR files for this project: 
8 2018-Dec-31 15:54:17.460243 - [INFO] 	main.ll
9 2018-Dec-31 15:54:17.460302 - [INFO] Check for chosen entry points.
10 2018-Dec-31 15:54:17.460363 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-31 15:54:17.460421 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-31 15:54:17.460482 - [INFO] Preprocess module: main.ll
13 2018-Dec-31 15:54:17.460829 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-31 15:54:17.460964 - [INFO] Running ValueAnnotationPass
15 2018-Dec-31 15:54:17.461287 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-31 15:54:17.461351 - [INFO] Allocated Types    : 2
17 2018-Dec-31 15:54:17.461414 - [INFO] Allocation Sites   : 4
18 2018-Dec-31 15:54:17.461472 - [INFO] Basic Blocks       : 1
19 2018-Dec-31 15:54:17.461529 - [INFO] Calls Sites        : 4
20 2018-Dec-31 15:54:17.461586 - [INFO] Functions          : 3
21 2018-Dec-31 15:54:17.461644 - [INFO] Globals            : 2
22 2018-Dec-31 15:54:17.461701 - [INFO] Global Pointer     : 2
23 2018-Dec-31 15:54:17.461758 - [INFO] Instructions       : 18
24 2018-Dec-31 15:54:17.461816 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-31 15:54:17.461873 - [INFO] Store Instructions : 6
26 2018-Dec-31 15:54:17.461930 - [INFO]  
27 2018-Dec-31 15:54:17.462004 - [INFO]   i32
28 2018-Dec-31 15:54:17.462067 - [INFO]   i8*
29 2018-Dec-31 15:54:17.462510 - [DEBUG] Analyzing function: main
30 2018-Dec-31 15:54:17.464151 - [INFO] Reconstruct the class hierarchy.
31 2018-Dec-31 15:54:17.464230 - [INFO] Construct type hierarchy
32 2018-Dec-31 15:54:17.464292 - [DEBUG] Analyse types in module: main.ll
33 2018-Dec-31 15:54:17.464452 - [DEBUG] Reconstruct virtual function table for module: main.ll
34 2018-Dec-31 15:54:17.464522 - [INFO] Reconstruction of class hierarchy completed.
35 2018-Dec-31 15:54:17.464585 - [INFO] Starting CallGraphAnalysisType: OTF
36 2018-Dec-31 15:54:17.464744 - [DEBUG] Walking in function: main
37 2018-Dec-31 15:54:17.464832 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %taint, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23, ID: 7
38 2018-Dec-31 15:54:17.465156 - [DEBUG] Found 1 possible target(s)
39 2018-Dec-31 15:54:17.465216 - [DEBUG] Target name: llvm.dbg.declare
40 2018-Dec-31 15:54:17.465298 - [DEBUG] Walking in function: llvm.dbg.declare
41 2018-Dec-31 15:54:17.465361 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
42 2018-Dec-31 15:54:17.465425 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8
43 2018-Dec-31 15:54:17.465708 - [DEBUG] Found 1 possible target(s)
44 2018-Dec-31 15:54:17.465767 - [DEBUG] Target name: getenv
45 2018-Dec-31 15:54:17.465848 - [DEBUG] Walking in function: getenv
46 2018-Dec-31 15:54:17.465910 - [DEBUG] Function already visited or only declaration: getenv
47 2018-Dec-31 15:54:17.465974 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %a, metadata !27, metadata !21), !dbg !28, !phasar.instruction.id !29, ID: 10
48 2018-Dec-31 15:54:17.466235 - [DEBUG] Found 1 possible target(s)
49 2018-Dec-31 15:54:17.466294 - [DEBUG] Target name: llvm.dbg.declare
50 2018-Dec-31 15:54:17.466369 - [DEBUG] Walking in function: llvm.dbg.declare
51 2018-Dec-31 15:54:17.466431 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
52 2018-Dec-31 15:54:17.466513 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35, ID: 13
53 2018-Dec-31 15:54:17.466753 - [DEBUG] Found 1 possible target(s)
54 2018-Dec-31 15:54:17.466811 - [DEBUG] Target name: llvm.dbg.declare
55 2018-Dec-31 15:54:17.466886 - [DEBUG] Walking in function: llvm.dbg.declare
56 2018-Dec-31 15:54:17.466948 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
57 2018-Dec-31 15:54:17.467010 - [INFO] Call graph has been constructed
58 2018-Dec-31 15:54:17.467072 - [INFO] Performing analysis: plugin
59 2018-Dec-31 15:54:17.467139 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
60 2018-Dec-31 15:54:17.467626 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %taint = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %b = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction
Removing memory location
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i8** %taint, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
=============

Adding line: 10

  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
=============

Adding line: 10
Adding line: 10

  call void @llvm.dbg.declare(metadata i8** %a, metadata !27, metadata !21), !dbg !28, !phasar.instruction.id !29
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
=============

Adding line: 10
Adding line: 10

  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
=============

Adding line: 10
Adding line: 10
Adding line: 11

  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
=============

Adding line: 11
Adding line: 10
Adding line: 10
Adding line: 11

  call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
=============

Adding line: 11
Adding line: 10
Adding line: 10
Adding line: 11

  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
=============

Adding line: 11
Adding line: 10
Adding line: 10
Adding line: 11
Adding line: 13

  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38
=============

Adding line: 11
Adding line: 10
Adding line: 10
Adding line: 11
Adding line: 13
Adding line: 13

  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %a, align 8, !dbg !39, !phasar.instruction.id !40
Got store instruction
Removing memory location
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38
=============

Adding line: 10
Adding line: 10
Adding line: 11
Adding line: 13
Adding line: 13

  %2 = load i8*, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42
Got load instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38
=============

Adding line: 10
Adding line: 10
Adding line: 11
Adding line: 13
Adding line: 13

  store i8* %2, i8** %b, align 8, !dbg !43, !phasar.instruction.id !44
Got store instruction
Removing memory location
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
=============

Adding line: 10
Adding line: 10
Adding line: 11
Adding line: 13

  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
=============


  call void @llvm.dbg.declare(metadata i8** %a, metadata !27, metadata !21), !dbg !28, !phasar.instruction.id !29
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
=============


  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
=============


  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
=============


  call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35
Got call instruction
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
=============


  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
=============


  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38
Got store instruction
Removing memory location
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38
=============


  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %a, align 8, !dbg !39, !phasar.instruction.id !40
Got store instruction
Removing memory location
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38
=============


  %2 = load i8*, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42
Got load instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38
=============


  store i8* %2, i8** %b, align 8, !dbg !43, !phasar.instruction.id !44
Got store instruction
Removing memory location
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
=============


  call void @llvm.dbg.declare(metadata i8** %taint, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23
Got call instruction

  %taint = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32
Got store instruction
Removing memory location
Adding memory location (store)

  store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26
Got store instruction
Removing memory location
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction
Removing memory location

  %b = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %a = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8** %a, metadata !27, metadata !21), !dbg !28, !phasar.instruction.id !29
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35
Got call instruction

  %0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31
Got load instruction
Adding load instruction fact

  %1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37
Got load instruction
Adding load instruction fact

  store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38
Got store instruction
Removing memory location
Adding memory location (store)

  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %a, align 8, !dbg !39, !phasar.instruction.id !40
Got store instruction
Removing memory location

  %2 = load i8*, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42
Got load instruction

  store i8* %2, i8** %b, align 8, !dbg !43, !phasar.instruction.id !44
Got store instruction
Removing memory location

  ret i32 0, !dbg !45, !phasar.instruction.id !46worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata i8** %taint, metadata !18, metadata !21), !dbg !22, !phasar.instruction.id !23, ID: 7
Facts:
	EMPTY


Instruction:
%taint = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 12
Facts:
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%b = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%a = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %a, metadata !27, metadata !21), !dbg !28, !phasar.instruction.id !29, ID: 10
Facts:
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8


Instruction:
call void @llvm.dbg.declare(metadata i8** %b, metadata !33, metadata !21), !dbg !34, !phasar.instruction.id !35, ID: 13
Facts:
store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 12
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11


Instruction:
%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11
Facts:
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8


Instruction:
%1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37, ID: 14
Facts:
store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 12
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11


Instruction:
store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38, ID: 15
Facts:
store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 12
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, 61 2018-Dec-31 15:54:17.502291 - [INFO] Write results to file
62 2018-Dec-31 15:54:17.502484 - [INFO] Shutdown llvm and the analysis framework.

ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11
%1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37, ID: 14


Instruction:
store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %a, align 8, !dbg !39, !phasar.instruction.id !40, ID: 16
Facts:
store i8* %0, i8** %a, align 8, !dbg !28, !phasar.instruction.id !32, ID: 12
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11
%1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37, ID: 14
store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38, ID: 15


Instruction:
%2 = load i8*, i8** %a, align 8, !dbg !41, !phasar.instruction.id !42, ID: 17
Facts:
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11
%1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37, ID: 14
store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38, ID: 15


Instruction:
store i8* %2, i8** %b, align 8, !dbg !43, !phasar.instruction.id !44, ID: 18
Facts:
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11
%1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37, ID: 14
store i8* %1, i8** %b, align 8, !dbg !34, !phasar.instruction.id !38, ID: 15


Instruction:
ret i32 0, !dbg !45, !phasar.instruction.id !46, ID: 19
Facts:
store i8* %call, i8** %taint, align 8, !dbg !22, !phasar.instruction.id !26, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #3, !dbg !24, !phasar.instruction.id !25, ID: 8
%0 = load i8*, i8** %taint, align 8, !dbg !30, !phasar.instruction.id !31, ID: 11
%1 = load i8*, i8** %a, align 8, !dbg !36, !phasar.instruction.id !37, ID: 14


