0 2018-Dec-28 21:52:00.032391 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-28 21:52:00.032807 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-28 21:52:00.033155 - [INFO] No configuration file is used.
3 2018-Dec-28 21:52:00.033231 - [INFO] Program options have been successfully parsed.
4 2018-Dec-28 21:52:00.033370 - [INFO] Check program options for logical errors.
5 2018-Dec-28 21:52:00.033460 - [INFO] Set-up IR database.
6 2018-Dec-28 21:52:00.040764 - [INFO] Constructed the analysis controller.
7 2018-Dec-28 21:52:00.040881 - [INFO] Found the following IR files for this project: 
8 2018-Dec-28 21:52:00.040942 - [INFO] 	main.ll
9 2018-Dec-28 21:52:00.041001 - [INFO] Check for chosen entry points.
10 2018-Dec-28 21:52:00.041062 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-28 21:52:00.041120 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-28 21:52:00.041180 - [INFO] Preprocess module: main.ll
13 2018-Dec-28 21:52:00.041538 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-28 21:52:00.041680 - [INFO] Running ValueAnnotationPass
15 2018-Dec-28 21:52:00.042101 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-28 21:52:00.042165 - [INFO] Allocated Types    : 3
17 2018-Dec-28 21:52:00.042228 - [INFO] Allocation Sites   : 3
18 2018-Dec-28 21:52:00.042286 - [INFO] Basic Blocks       : 1
19 2018-Dec-28 21:52:00.042343 - [INFO] Calls Sites        : 3
20 2018-Dec-28 21:52:00.042400 - [INFO] Functions          : 3
21 2018-Dec-28 21:52:00.042457 - [INFO] Globals            : 2
22 2018-Dec-28 21:52:00.042514 - [INFO] Global Pointer     : 2
23 2018-Dec-28 21:52:00.042571 - [INFO] Instructions       : 34
24 2018-Dec-28 21:52:00.042628 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-28 21:52:00.042685 - [INFO] Store Instructions : 6
26 2018-Dec-28 21:52:00.042742 - [INFO]  
27 2018-Dec-28 21:52:00.042815 - [INFO]   i32
28 2018-Dec-28 21:52:00.042881 - [INFO]   %struct.a = type { i8*, %struct.b }
29 2018-Dec-28 21:52:00.042944 - [INFO]   i8*
30 2018-Dec-28 21:52:00.043615 - [DEBUG] Analyzing function: main
31 2018-Dec-28 21:52:00.058014 - [INFO] Reconstruct the class hierarchy.
32 2018-Dec-28 21:52:00.058159 - [INFO] Construct type hierarchy
33 2018-Dec-28 21:52:00.058223 - [DEBUG] Analyse types in module: main.ll
34 2018-Dec-28 21:52:00.058513 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2018-Dec-28 21:52:00.058678 - [INFO] Reconstruction of class hierarchy completed.
36 2018-Dec-28 21:52:00.058742 - [INFO] Starting CallGraphAnalysisType: OTF
37 2018-Dec-28 21:52:00.059297 - [DEBUG] Walking in function: main
38 2018-Dec-28 21:52:00.059378 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !17, metadata !33), !dbg !34, !phasar.instruction.id !35, ID: 6
39 2018-Dec-28 21:52:00.059833 - [DEBUG] Found 1 possible target(s)
40 2018-Dec-28 21:52:00.059893 - [DEBUG] Target name: llvm.dbg.declare
41 2018-Dec-28 21:52:00.059998 - [DEBUG] Walking in function: llvm.dbg.declare
42 2018-Dec-28 21:52:00.060061 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2018-Dec-28 21:52:00.060124 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
44 2018-Dec-28 21:52:00.060535 - [DEBUG] Found 1 possible target(s)
45 2018-Dec-28 21:52:00.060594 - [DEBUG] Target name: getenv
46 2018-Dec-28 21:52:00.060677 - [DEBUG] Walking in function: getenv
47 2018-Dec-28 21:52:00.060739 - [DEBUG] Function already visited or only declaration: getenv
48 2018-Dec-28 21:52:00.060804 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %a4, metadata !55, metadata !33), !dbg !56, !phasar.instruction.id !57, ID: 17
49 2018-Dec-28 21:52:00.061175 - [DEBUG] Found 1 possible target(s)
50 2018-Dec-28 21:52:00.061234 - [DEBUG] Target name: llvm.dbg.declare
51 2018-Dec-28 21:52:00.061310 - [DEBUG] Walking in function: llvm.dbg.declare
52 2018-Dec-28 21:52:00.061372 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2018-Dec-28 21:52:00.061458 - [INFO] Call graph has been constructed
54 2018-Dec-28 21:52:00.061520 - [INFO] Performing analysis: plugin
55 2018-Dec-28 21:52:00.061587 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
56 2018-Dec-28 21:52:00.062087 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %a4 = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !17, metadata !33), !dbg !34, !phasar.instruction.id !35
Got call instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
Got call instruction
Adding call instruction fact
Adding line: 22

  %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39
Adding line: 22

  store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41
Got store instruction
Adding store instruction
Adding line: 22
Adding line: 22

  %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43
Adding line: 22
Adding line: 22

  %0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44
Got load instruction
Adding load instruction fact
Adding line: 22
Adding line: 22
Adding line: 23

  %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46
Adding line: 22
Adding line: 22
Adding line: 23

  %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48
Adding line: 22
Adding line: 22
Adding line: 23

  %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50
Adding line: 22
Adding line: 22
Adding line: 23

  %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52
Adding line: 22
Adding line: 22
Adding line: 23

  store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54
Got store instruction
Adding store instruction
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23

  call void @llvm.dbg.declare(metadata i8** %a4, metadata !55, metadata !33), !dbg !56, !phasar.instruction.id !57
Got call instruction
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23

  %b5 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !58, !phasar.instruction.id !59
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23

  %a6 = getelementptr inbounds %struct.b, %struct.b* %b5, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23

  %arrayidx7 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a6, i64 0, i64 0, !dbg !62, !phasar.instruction.id !63
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23

  %a8 = getelementptr inbounds %struct.c, %struct.c* %arrayidx7, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23

  %1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66
Got load instruction
Adding load instruction fact
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25

  store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67
Got store instruction
Adding store instruction
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  %b9 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !68, !phasar.instruction.id !69
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  %a10 = getelementptr inbounds %struct.b, %struct.b* %b9, i32 0, i32 0, !dbg !70, !phasar.instruction.id !71
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  %arrayidx11 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a10, i64 0, i64 0, !dbg !72, !phasar.instruction.id !73
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  %a12 = getelementptr inbounds %struct.c, %struct.c* %arrayidx11, i32 0, i32 0, !dbg !74, !phasar.instruction.id !75
Adding line: 23
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %a12, align 8, !dbg !76, !phasar.instruction.id !77
Got store instruction
Removing store instruction
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  %b13 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !78, !phasar.instruction.id !79
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  %a14 = getelementptr inbounds %struct.b, %struct.b* %b13, i32 0, i32 0, !dbg !80, !phasar.instruction.id !81
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  %arrayidx15 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a14, i64 0, i64 0, !dbg !82, !phasar.instruction.id !83
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  %a16 = getelementptr inbounds %struct.c, %struct.c* %arrayidx15, i32 0, i32 0, !dbg !84, !phasar.instruction.id !85
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  %2 = load i8*, i8** %a16, align 8, !dbg !84, !phasar.instruction.id !86
Got load instruction
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25
Adding line: 25

  store i8* %2, i8** %a4, align 8, !dbg !87, !phasar.instruction.id !88
Got store instruction
Removing store instruction
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 25

  %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39

  store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41
Got store instruction
Adding store instruction

  %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43

  %0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44
Got load instruction
Adding load instruction fact

  %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46

  %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48

  %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50

  %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52

  store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata i8** %a4, metadata !55, metadata !33), !dbg !56, !phasar.instruction.id !57
Got call instruction

  %b5 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !58, !phasar.instruction.id !59

  %a6 = getelementptr inbounds %struct.b, %struct.b* %b5, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61

  %arrayidx7 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a6, i64 0, i64 0, !dbg !62, !phasar.instruction.id !63

  %a8 = getelementptr inbounds %struct.c, %struct.c* %arrayidx7, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65

  %1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66
Got load instruction
Adding load instruction fact

  store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67
Got store instruction
Adding store instruction

  %b9 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !68, !phasar.instruction.id !69

  %a10 = getelementptr inbounds %struct.b, %struct.b* %b9, i32 0, i32 0, !dbg !70, !phasar.instruction.id !71

  %arrayidx11 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a10, i64 0, i64 0, !dbg !72, !phasar.instruction.id !73

  %a12 = getelementptr inbounds %struct.c, %struct.c* %arrayidx11, i32 0, i32 0, !dbg !74, !phasar.instruction.id !75

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %a12, align 8, !dbg !76, !phasar.instruction.id !77
Got store instruction
Removing store instruction

  %b13 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !78, !phasar.instruction.id !79

  %a14 = getelementptr inbounds %struct.b, %struct.b* %b13, i32 0, i32 0, !dbg !80, !phasar.instruction.id !81

  %arrayidx15 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a14, i64 0, i64 0, !dbg !82, !phasar.instruction.id !83

  %a16 = getelementptr inbounds %struct.c, %struct.c* %arrayidx15, i32 0, i32 0, !dbg !84, !phasar.instruction.id !85

  %2 = load i8*, i8** %a16, align 8, !dbg !84, !phasar.instruction.id !86
Got load instruction

  store i8* %2, i8** %a4, align 8, !dbg !87, !phasar.instruction.id !88
Got store instruction
Removing store instruction

  call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !17, metadata !33), !dbg !34, !phasar.instruction.id !35
Got call instruction

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54
Got store instruction
Adding store instruction

  store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41
Got store instruction
Adding store instruction

  %a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43

  %call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  %b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46

  %a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39

  %foo = alloca %struct.a, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %a4 = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8** %a4, metadata !55, metadata !33), !dbg !56, !phasar.instruction.id !57
Got call instruction

  %0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44
Got load instruction
Adding load instruction fact

  %a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48

  %arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50

  %a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52

  %b5 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !58, !phasar.instruction.id !59

  %a6 = getelementptr inbounds %struct.b, %struct.b* %b5, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61

  %arrayidx7 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a6, i64 0, i64 0, !dbg !62, !phasar.instruction.id !63

  %a8 = getelementptr inbounds %struct.c, %struct.c* %arrayidx7, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65

  %1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66
Got load instruction
Adding load instruction fact

  store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67
Got store instruction
Adding store instruction

  %b9 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !68, !phasar.instruction.id !69

  %a10 = getelementptr inbounds %struct.b, %struct.b* %b9, i32 0, i32 0, !dbg !70, !phasar.instruction.id !71

  %arrayidx11 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a10, i64 0, i64 0, !dbg !72, !phasar.instruction.id !73

  %a12 = getelementptr inbounds %struct.c, %struct.c* %arrayidx11, i32 0, i32 0, !dbg !74, !phasar.instruction.id !75

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %a12, align 8, !dbg !76, !phasar.instruction.id !77
Got store instruction
Removing store instruction

  %b13 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !78, !phasar.instruction.id !79

  %a14 = getelementptr inbounds %struct.b, %struct.b* %b13, i32 0, i32 0, !dbg !80, !phasar.instruction.id !81

  %arrayidx15 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a14, i64 0, i64 0, !dbg !82, !phasar.instruction.id !83

  %a16 = getelementptr inbounds %struct.c, %struct.c* %arrayidx15, i32 0, i32 0, !dbg !84, !phasar.instruction.id !85

  %2 = load i8*, i8** %a16, align 8, !dbg !84, !phasar.instruction.id !86
Got load instruction

  store i8* %2, i8** %a4, align 8, !dbg !87, !phasar.instruction.id !88
Got store instruction
Removing store instruction

  ret i32 0, !dbg !89, !phasar.instruction.id !90worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %struct.a* %foo, metadata !17, metadata !33), !dbg !34, !phasar.instruction.id !35, ID: 6
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7


Instruction:
%a1 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !42, !phasar.instruction.id !43, ID: 10
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%b = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !45, !phasar.instruction.id !46, ID: 12
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
%a = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 0, !dbg !38, !phasar.instruction.id !39, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7


Instruction:
%foo = alloca %struct.a, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%a4 = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %a4, metadata !55, metadata !33), !dbg !56, !phasar.instruction.id !57, ID: 17
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7


Instruction:
%a2 = getelementptr inbounds %struct.b, %struct.b* %b, i32 0, i32 0, !dbg !47, !phasar.instruction.id !48, ID: 13
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
%arrayidx = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a2, i64 0, i64 0, !dbg !49, !phasar.instruction.id !50, ID: 14
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
%a3 = getelementptr inbounds %struct.c, %struct.c* %arrayidx, i32 0, i32 0, !dbg !51, !phasar.instruction.id !52, ID: 15
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
%b5 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !58, !phasar.instruction.id !59, ID: 18
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
%a6 = getelementptr inbounds %struct.b, %struct.b* %b5, i32 0, i32 0, !dbg !60, !phasar.instruction.id !61, ID: 19
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
%arrayidx7 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a6, i64 0, i64 0, !dbg !62, !phasar.instruction.id !63, ID: 20
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
%a8 = getelementptr inbounds %struct.c, %struct.c* %arrayidx7, i32 0, i32 0, !dbg !64, !phasar.instruction.id !65, ID: 21
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11


Instruction:
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22


Instruction:
%b9 = getelementptr inbounds %struct.a, %struct.a* %foo, i32 0, i32 1, !dbg !68, !phasar.instruction.id !69, ID: 24
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
%a10 = getelementptr inbounds %struct.b, %struct.b* %b9, i32 0, i32 0, !dbg !70, !phasar.instruction.id !71, ID: 25
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
%arrayidx11 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a10, i64 0, i64 0, !dbg !72, !phasar.instruction.id !73, ID: 26
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
%a12 = getelementptr inbounds %struct.c, %struct.c* %arrayidx11, i32 0, i32 0, !dbg !74, !phasar.instruction.id !75, ID: 27
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %a12, align 8, !dbg !76, !phasar.instruction.id !77, ID: 28
Facts:
store i8* %0, i8** %a3, align 8, !dbg !53, !phasar.instruction.id !54, ID: 16
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
%b13 = getelementptr inbounds %s57 2018-Dec-28 21:52:00.136402 - [INFO] Write results to file
58 2018-Dec-28 21:52:00.136690 - [INFO] Shutdown llvm and the analysis framework.

truct.a, %struct.a* %foo, i32 0, i32 1, !dbg !78, !phasar.instruction.id !79, ID: 29
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
%a14 = getelementptr inbounds %struct.b, %struct.b* %b13, i32 0, i32 0, !dbg !80, !phasar.instruction.id !81, ID: 30
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
%arrayidx15 = getelementptr inbounds [2 x %struct.c], [2 x %struct.c]* %a14, i64 0, i64 0, !dbg !82, !phasar.instruction.id !83, ID: 31
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
%a16 = getelementptr inbounds %struct.c, %struct.c* %arrayidx15, i32 0, i32 0, !dbg !84, !phasar.instruction.id !85, ID: 32
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
%2 = load i8*, i8** %a16, align 8, !dbg !84, !phasar.instruction.id !86, ID: 33
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
store i8* %2, i8** %a4, align 8, !dbg !87, !phasar.instruction.id !88, ID: 34
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22
store i8* %1, i8** %a4, align 8, !dbg !56, !phasar.instruction.id !67, ID: 23


Instruction:
ret i32 0, !dbg !89, !phasar.instruction.id !90, ID: 35
Facts:
store i8* %call, i8** %a, align 8, !dbg !40, !phasar.instruction.id !41, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 7
%0 = load i8*, i8** %a1, align 8, !dbg !42, !phasar.instruction.id !44, ID: 11
%1 = load i8*, i8** %a8, align 8, !dbg !64, !phasar.instruction.id !66, ID: 22


