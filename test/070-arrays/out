0 2018-Dec-28 12:41:16.515875 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-28 12:41:16.516290 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-28 12:41:16.516681 - [INFO] No configuration file is used.
3 2018-Dec-28 12:41:16.516759 - [INFO] Program options have been successfully parsed.
4 2018-Dec-28 12:41:16.516859 - [INFO] Check program options for logical errors.
5 2018-Dec-28 12:41:16.516949 - [INFO] Set-up IR database.
6 2018-Dec-28 12:41:16.520920 - [INFO] Constructed the analysis controller.
7 2018-Dec-28 12:41:16.521040 - [INFO] Found the following IR files for this project: 
8 2018-Dec-28 12:41:16.521101 - [INFO] 	main.ll
9 2018-Dec-28 12:41:16.521160 - [INFO] Check for chosen entry points.
10 2018-Dec-28 12:41:16.521221 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-28 12:41:16.521279 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-28 12:41:16.521339 - [INFO] Preprocess module: main.ll
13 2018-Dec-28 12:41:16.521713 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-28 12:41:16.521832 - [INFO] Running ValueAnnotationPass
15 2018-Dec-28 12:41:16.522091 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-28 12:41:16.522154 - [INFO] Allocated Types    : 2
17 2018-Dec-28 12:41:16.522218 - [INFO] Allocation Sites   : 2
18 2018-Dec-28 12:41:16.522276 - [INFO] Basic Blocks       : 1
19 2018-Dec-28 12:41:16.522333 - [INFO] Calls Sites        : 1
20 2018-Dec-28 12:41:16.522390 - [INFO] Functions          : 2
21 2018-Dec-28 12:41:16.522447 - [INFO] Globals            : 0
22 2018-Dec-28 12:41:16.522504 - [INFO] Global Pointer     : 0
23 2018-Dec-28 12:41:16.522561 - [INFO] Instructions       : 9
24 2018-Dec-28 12:41:16.522618 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-28 12:41:16.522675 - [INFO] Store Instructions : 3
26 2018-Dec-28 12:41:16.522733 - [INFO]  
27 2018-Dec-28 12:41:16.522810 - [INFO]   i32
28 2018-Dec-28 12:41:16.522879 - [INFO]   [2 x i32]
29 2018-Dec-28 12:41:16.523192 - [DEBUG] Analyzing function: main
30 2018-Dec-28 12:41:16.523713 - [INFO] Reconstruct the class hierarchy.
31 2018-Dec-28 12:41:16.523784 - [INFO] Construct type hierarchy
32 2018-Dec-28 12:41:16.523844 - [DEBUG] Analyse types in module: main.ll
33 2018-Dec-28 12:41:16.523985 - [DEBUG] Reconstruct virtual function table for module: main.ll
34 2018-Dec-28 12:41:16.524050 - [INFO] Reconstruction of class hierarchy completed.
35 2018-Dec-28 12:41:16.524113 - [INFO] Starting CallGraphAnalysisType: OTF
36 2018-Dec-28 12:41:16.524228 - [DEBUG] Walking in function: main
37 2018-Dec-28 12:41:16.524314 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata [2 x i32]* %numbers, metadata !14, metadata !18), !dbg !19, !phasar.instruction.id !20, ID: 3
38 2018-Dec-28 12:41:16.524587 - [DEBUG] Found 1 possible target(s)
39 2018-Dec-28 12:41:16.524647 - [DEBUG] Target name: llvm.dbg.declare
40 2018-Dec-28 12:41:16.524728 - [DEBUG] Walking in function: llvm.dbg.declare
41 2018-Dec-28 12:41:16.524791 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
42 2018-Dec-28 12:41:16.524854 - [INFO] Call graph has been constructed
43 2018-Dec-28 12:41:16.524915 - [INFO] Performing analysis: plugin
44 2018-Dec-28 12:41:16.524981 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
45 2018-Dec-28 12:41:16.525459 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraPluginTest

flow()
  %retval = alloca i32, align 4, !phasar.instruction.id !11
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %numbers = alloca [2 x i32], align 4, !phasar.instruction.id !12
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !13
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  call void @llvm.dbg.declare(metadata [2 x i32]* %numbers, metadata !14, metadata !18), !dbg !19, !phasar.instruction.id !20
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !21, !phasar.instruction.id !22
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  store i32 0, i32* %arrayidx, align 4, !dbg !23, !phasar.instruction.id !24
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 1, !dbg !25, !phasar.instruction.id !26
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  store i32 1, i32* %arrayidx1, align 4, !dbg !27, !phasar.instruction.id !28
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  call void @llvm.dbg.declare(metadata [2 x i32]* %numbers, metadata !14, metadata !18), !dbg !19, !phasar.instruction.id !20
===========================
Got call instruction

flow()
  %numbers = alloca [2 x i32], align 4, !phasar.instruction.id !12
===========================
Got operands checking instruction (alloca)

flow()
  %retval = alloca i32, align 4, !phasar.instruction.id !11
===========================
Got operands checking instruction (alloca)

flow()
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !21, !phasar.instruction.id !22
===========================

flow()
  store i32 1, i32* %arrayidx1, align 4, !dbg !27, !phasar.instruction.id !28
===========================
Got store instruction

flow()
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 1, !dbg !25, !phasar.instruction.id !26
===========================

flow()
  store i32 0, i32* %arrayidx, align 4, !dbg !23, !phasar.instruction.id !24
===========================
Got store instruction

flow()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !13
===========================
Got store instruction

flow()
  ret i32 0, !dbg !29, !phasar.instruction.id !3046 2018-Dec-28 12:41:16.529987 - [INFO] Write results to file
47 2018-Dec-28 12:41:16.530184 - [INFO] Shutdown llvm and the analysis framework.

===========================
printReport()
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata [2 x i32]* %numbers, metadata !14, metadata !18), !dbg !19, !phasar.instruction.id !20, ID: 3
Facts:
	EMPTY


Instruction:
%numbers = alloca [2 x i32], align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !11, ID: 0
Facts:
	EMPTY


Instruction:
%arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 0, !dbg !21, !phasar.instruction.id !22, ID: 4
Facts:
	EMPTY


Instruction:
store i32 1, i32* %arrayidx1, align 4, !dbg !27, !phasar.instruction.id !28, ID: 7
Facts:
	EMPTY


Instruction:
%arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %numbers, i64 0, i64 1, !dbg !25, !phasar.instruction.id !26, ID: 6
Facts:
	EMPTY


Instruction:
store i32 0, i32* %arrayidx, align 4, !dbg !23, !phasar.instruction.id !24, ID: 5
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
ret i32 0, !dbg !29, !phasar.instruction.id !30, ID: 8
Facts:
	EMPTY


