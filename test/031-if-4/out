0 2018-Dec-30 13:54:41.432074 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-30 13:54:41.432518 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-30 13:54:41.432868 - [INFO] No configuration file is used.
3 2018-Dec-30 13:54:41.432944 - [INFO] Program options have been successfully parsed.
4 2018-Dec-30 13:54:41.433044 - [INFO] Check program options for logical errors.
5 2018-Dec-30 13:54:41.433133 - [INFO] Set-up IR database.
6 2018-Dec-30 13:54:41.438117 - [INFO] Constructed the analysis controller.
7 2018-Dec-30 13:54:41.438230 - [INFO] Found the following IR files for this project: 
8 2018-Dec-30 13:54:41.438291 - [INFO] 	main.ll
9 2018-Dec-30 13:54:41.438349 - [INFO] Check for chosen entry points.
10 2018-Dec-30 13:54:41.438410 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-30 13:54:41.438468 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-30 13:54:41.438528 - [INFO] Preprocess module: main.ll
13 2018-Dec-30 13:54:41.438909 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-30 13:54:41.439037 - [INFO] Running ValueAnnotationPass
15 2018-Dec-30 13:54:41.439377 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-30 13:54:41.439440 - [INFO] Allocated Types    : 1
17 2018-Dec-30 13:54:41.439504 - [INFO] Allocation Sites   : 3
18 2018-Dec-30 13:54:41.439561 - [INFO] Basic Blocks       : 4
19 2018-Dec-30 13:54:41.439618 - [INFO] Calls Sites        : 4
20 2018-Dec-30 13:54:41.439676 - [INFO] Functions          : 4
21 2018-Dec-30 13:54:41.439733 - [INFO] Globals            : 1
22 2018-Dec-30 13:54:41.439790 - [INFO] Global Pointer     : 1
23 2018-Dec-30 13:54:41.439847 - [INFO] Instructions       : 18
24 2018-Dec-30 13:54:41.439905 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-30 13:54:41.439962 - [INFO] Store Instructions : 4
26 2018-Dec-30 13:54:41.440019 - [INFO]  
27 2018-Dec-30 13:54:41.440092 - [INFO]   i32
28 2018-Dec-30 13:54:41.440549 - [DEBUG] Analyzing function: main
29 2018-Dec-30 13:54:41.440790 - [INFO] Reconstruct the class hierarchy.
30 2018-Dec-30 13:54:41.440853 - [INFO] Construct type hierarchy
31 2018-Dec-30 13:54:41.440913 - [DEBUG] Analyse types in module: main.ll
32 2018-Dec-30 13:54:41.441062 - [DEBUG] Reconstruct virtual function table for module: main.ll
33 2018-Dec-30 13:54:41.441130 - [INFO] Reconstruction of class hierarchy completed.
34 2018-Dec-30 13:54:41.441193 - [INFO] Starting CallGraphAnalysisType: OTF
35 2018-Dec-30 13:54:41.441302 - [DEBUG] Walking in function: main
36 2018-Dec-30 13:54:41.441386 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %ret, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19, ID: 5
37 2018-Dec-30 13:54:41.441710 - [DEBUG] Found 1 possible target(s)
38 2018-Dec-30 13:54:41.441769 - [DEBUG] Target name: llvm.dbg.declare
39 2018-Dec-30 13:54:41.441854 - [DEBUG] Walking in function: llvm.dbg.declare
40 2018-Dec-30 13:54:41.441918 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
41 2018-Dec-30 13:54:41.441981 - [DEBUG] Found static call-site: %call = call i32 (...) @foo(), !dbg !20, !phasar.instruction.id !22, ID: 6
42 2018-Dec-30 13:54:41.442264 - [DEBUG] Found 1 possible target(s)
43 2018-Dec-30 13:54:41.442324 - [DEBUG] Target name: foo
44 2018-Dec-30 13:54:41.442405 - [DEBUG] Walking in function: foo
45 2018-Dec-30 13:54:41.442467 - [DEBUG] Function already visited or only declaration: foo
46 2018-Dec-30 13:54:41.442531 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a, metadata !26, metadata !17), !dbg !28, !phasar.instruction.id !29, ID: 9
47 2018-Dec-30 13:54:41.442771 - [DEBUG] Found 1 possible target(s)
48 2018-Dec-30 13:54:41.442830 - [DEBUG] Target name: llvm.dbg.declare
49 2018-Dec-30 13:54:41.442904 - [DEBUG] Walking in function: llvm.dbg.declare
50 2018-Dec-30 13:54:41.442966 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
51 2018-Dec-30 13:54:41.443029 - [DEBUG] Found static call-site: %call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 10
52 2018-Dec-30 13:54:41.443320 - [DEBUG] Found 1 possible target(s)
53 2018-Dec-30 13:54:41.443379 - [DEBUG] Target name: getenv
54 2018-Dec-30 13:54:41.443456 - [DEBUG] Walking in function: getenv
55 2018-Dec-30 13:54:41.443518 - [DEBUG] Function already visited or only declaration: getenv
56 2018-Dec-30 13:54:41.443580 - [INFO] Call graph has been constructed
57 2018-Dec-30 13:54:41.443641 - [INFO] Performing analysis: plugin
58 2018-Dec-30 13:54:41.443707 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
59 2018-Dec-30 13:54:41.444192 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %ret = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %a = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
Got store instruction

  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19
Got call instruction

  %call = call i32 (...) @foo(), !dbg !20, !phasar.instruction.id !22
Got call instruction

  %tobool = icmp ne i32 %call, 0, !dbg !20, !phasar.instruction.id !23
Got operands checking instruction (icmp)

  br i1 %tobool, label %if.then, label %if.else, !dbg !24, !phasar.instruction.id !25
Got branch instruction

  br i1 %tobool, label %if.then, label %if.else, !dbg !24, !phasar.instruction.id !25
Got branch instruction

  call void @llvm.dbg.declare(metadata i32* %a, metadata !26, metadata !17), !dbg !28, !phasar.instruction.id !29
Got call instruction

  %call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31
Got call instruction
Adding call instruction fact
Adding line: 10

  store i32 %call1, i32* %a, align 4, !dbg !28, !phasar.instruction.id !32
Got store instruction
Adding store instruction
Adding line: 10
Adding line: 10

  %0 = load i32, i32* %a, align 4, !dbg !33, !phasar.instruction.id !34
Got load instruction
Adding load instruction fact
Adding line: 10
Adding line: 10
Adding line: 11

  store i32 %0, i32* %ret, align 4, !dbg !35, !phasar.instruction.id !36
Got store instruction
Adding store instruction
Adding line: 11
Adding line: 10
Adding line: 10
Adding line: 11

  br label %if.end, !dbg !37, !phasar.instruction.id !38
Got branch instruction
Adding line: 11
Adding line: 10
Adding line: 10
Adding line: 11

  store i32 100, i32* %ret, align 4, !dbg !39, !phasar.instruction.id !41
Got store instruction

  br label %if.end, !phasar.instruction.id !42
Got branch instruction

  %1 = load i32, i32* %ret, align 4, !dbg !43, !phasar.instruction.id !44
Got load instruction
Adding load instruction fact
Adding line: 11
Adding line: 10
Adding line: 10
Adding line: 11
Adding line: 16

  store i32 %call1, i32* %a, align 4, !dbg !28, !phasar.instruction.id !32
Got store instruction
Adding store instruction

  %0 = load i32, i32* %a, align 4, !dbg !33, !phasar.instruction.id !34
Got load instruction
Adding load instruction fact

  store i32 %0, i32* %ret, align 4, !dbg !35, !phasar.instruction.id !36
Got store instruction
Adding store instruction

  br label %if.end, !dbg !37, !phasar.instruction.id !38
Got branch instruction

  %1 = load i32, i32* %ret, align 4, !dbg !43, !phasar.instruction.id !44
Got load instruction
Adding load instruction fact

  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19
Got call instruction

  %ret = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %call = call i32 (...) @foo(), !dbg !20, !phasar.instruction.id !22
Got call instruction

  %a = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 100, i32* %ret, align 4, !dbg !39, !phasar.instruction.id !41
Got store instruction

  br label %if.end, !phasar.instruction.id !42
Got branch instruction

  store i32 %0, i32* %ret, align 4, !dbg !35, !phasar.instruction.id !36
Got store instruction
Adding store instruction

  store i32 %call1, i32* %a, align 4, !dbg !28, !phasar.instruction.id !32
Got store instruction
Adding store instruction

  %tobool = icmp ne i32 %call, 0, !dbg !20, !phasar.instruction.id !23
Got operands checking instruction (icmp)

  %call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
Got store instruction

  br i1 %tobool, label %if.then, label %if.else, !dbg !24, !phasar.instruction.id !25
Got branch instruction

  call void @llvm.dbg.declare(metadata i32* %a, metadata !26, metadata !17), !dbg !28, !phasar.instruction.id !29
Got call instruction

  %0 = load i32, i32* %a, align 4, !dbg !33, !phasar.instruction.id !34
Got load instruction
Adding load instruction fact

  %1 = load i32, i32* %ret, align 4, !dbg !43, !phasar.instruction.id !44
Got load instruction
Adding load instruction fact

  br label %if.end, !dbg !37, !phasar.instruction.id !38
Got branch instruction

  ret i32 %1, !dbg !45, !phasar.instruction.id !46worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata i32* %ret, metadata !16, metadata !17), !dbg !18, !phasar.instruction.id !19, ID: 5
Facts:
	EMPTY


Instruction:
%ret = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%call = call i32 (...) @foo(), !dbg !20, !phasar.instruction.id !22, ID: 6
Facts:
	EMPTY


Instruction:
%a = alloca i32, align 4, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 100, i32* %ret, align 4, !dbg !39, !phasar.instruction.id !41, ID: 15
Facts:
	EMPTY


Instruction:
br label %if.end, !phasar.instruction.id !42, ID: 16
Facts:
	EMPTY


Instruction:
store i32 %0, i32* %ret, align 4, !dbg !35, !phasar.instruction.id !36, ID: 13
Facts:
store i32 %call1, i32* %a, align 4, !dbg !28, !phasar.instruction.id !32, ID: 11
%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 10
%0 = load i32, i32* %a, align 4, !dbg !33, !phasar.instruction.id !34, ID: 12


Instruction:
store i32 %call1, i32* %a, align 4, !dbg !28, !phasar.instruction.id !32, ID: 11
Facts:
%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 10


Instruction:
%tobool = icmp ne i32 %call, 0, !dbg !20, !phasar.instruction.id !23, ID: 7
Facts:
	EMPTY


Instruction:
%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 10
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
br i1 %tobool, label %if.then, label %if.else, !dbg !24, !phasar.instruction.id !25, ID: 8
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %a, metadata !26, metadata !17), !dbg !28, !phasar.instruction.id !29, ID: 9
Facts:
	EMPTY


Instruction:
%0 = load i32, i32* %a, align 4, !dbg !33, !phasar.instruction.id !34, ID: 12
Facts:
store i32 %call1, i32* %a, align 4, !dbg !28, !phasar.instruction.id !32, ID: 11
%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 10


Instruction:
%1 = load i32, i32* %ret, align 4, !dbg !43, !phasar.instruction.id !44, ID: 17
Facts:
store i32 %0, i32* %ret, align 4, !dbg !35, !phasar.instruction.id !36, ID: 13
store i32 %call1, i32* %a, align 4, !dbg !28, !phasar.instruction.id !32, ID: 11
%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 10
%0 = load i32, i32* %a, align 4, !dbg !33, !phasar.instruction.id !34, ID: 12


Instruction:
br label %if.end, !dbg !37, !phasar.instruction.id !38, ID: 14
Facts:
store i32 %0, i32* %ret, align 4, !dbg !35, !phasar.instruction.id !36, ID: 13
store i32 %call1, i32* %a, align 4, !dbg !28, !phasar.instruction.id !32, ID: 11
%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 10
%0 = load i32, i32* %a, align 4, !dbg !33, !phasar.instruction.id !34, ID: 12


Instruction:
ret i32 %1, !dbg !45, !phasar.instruction.id !46, ID: 18
Facts:
store i32 %0, i32* %ret, align 4, !dbg !35, !phasar.instruction.id !36, ID: 13
store i32 %call1, i32* %a, align 4, !dbg !28, !phasar.instruction.id !32, ID: 11
%call1 = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !60 2018-Dec-30 13:54:41.459229 - [INFO] Write results to file
61 2018-Dec-30 13:54:41.459404 - [INFO] Shutdown llvm and the analysis framework.

phasar.instruction.id !31, ID: 10
%0 = load i32, i32* %a, align 4, !dbg !33, !phasar.instruction.id !34, ID: 12
%1 = load i32, i32* %ret, align 4, !dbg !43, !phasar.instruction.id !44, ID: 17


