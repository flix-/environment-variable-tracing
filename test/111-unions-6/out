0 2018-Dec-30 13:54:56.000376 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-30 13:54:56.000798 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-30 13:54:56.001148 - [INFO] No configuration file is used.
3 2018-Dec-30 13:54:56.001225 - [INFO] Program options have been successfully parsed.
4 2018-Dec-30 13:54:56.001324 - [INFO] Check program options for logical errors.
5 2018-Dec-30 13:54:56.001413 - [INFO] Set-up IR database.
6 2018-Dec-30 13:54:56.008347 - [INFO] Constructed the analysis controller.
7 2018-Dec-30 13:54:56.008463 - [INFO] Found the following IR files for this project: 
8 2018-Dec-30 13:54:56.008525 - [INFO] 	main.ll
9 2018-Dec-30 13:54:56.008584 - [INFO] Check for chosen entry points.
10 2018-Dec-30 13:54:56.008645 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-30 13:54:56.008703 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-30 13:54:56.008764 - [INFO] Preprocess module: main.ll
13 2018-Dec-30 13:54:56.009143 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-30 13:54:56.009279 - [INFO] Running ValueAnnotationPass
15 2018-Dec-30 13:54:56.009672 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-30 13:54:56.009735 - [INFO] Allocated Types    : 3
17 2018-Dec-30 13:54:56.009808 - [INFO] Allocation Sites   : 4
18 2018-Dec-30 13:54:56.009865 - [INFO] Basic Blocks       : 1
19 2018-Dec-30 13:54:56.009923 - [INFO] Calls Sites        : 4
20 2018-Dec-30 13:54:56.009980 - [INFO] Functions          : 3
21 2018-Dec-30 13:54:56.010038 - [INFO] Globals            : 2
22 2018-Dec-30 13:54:56.010095 - [INFO] Global Pointer     : 2
23 2018-Dec-30 13:54:56.010153 - [INFO] Instructions       : 28
24 2018-Dec-30 13:54:56.010210 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-30 13:54:56.010268 - [INFO] Store Instructions : 5
26 2018-Dec-30 13:54:56.010325 - [INFO]  
27 2018-Dec-30 13:54:56.010405 - [INFO]   i32
28 2018-Dec-30 13:54:56.010471 - [INFO]   %struct.s1 = type { %union.u1, %union.u3 }
29 2018-Dec-30 13:54:56.010533 - [INFO]   i8*
30 2018-Dec-30 13:54:56.011104 - [DEBUG] Analyzing function: main
31 2018-Dec-30 13:54:56.016544 - [INFO] Reconstruct the class hierarchy.
32 2018-Dec-30 13:54:56.016622 - [INFO] Construct type hierarchy
33 2018-Dec-30 13:54:56.016683 - [DEBUG] Analyse types in module: main.ll
34 2018-Dec-30 13:54:56.016954 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2018-Dec-30 13:54:56.017142 - [INFO] Reconstruction of class hierarchy completed.
36 2018-Dec-30 13:54:56.017207 - [INFO] Starting CallGraphAnalysisType: OTF
37 2018-Dec-30 13:54:56.017486 - [DEBUG] Walking in function: main
38 2018-Dec-30 13:54:56.017567 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !18, metadata !39), !dbg !40, !phasar.instruction.id !41, ID: 7
39 2018-Dec-30 13:54:56.017972 - [DEBUG] Found 1 possible target(s)
40 2018-Dec-30 13:54:56.018031 - [DEBUG] Target name: llvm.dbg.declare
41 2018-Dec-30 13:54:56.018113 - [DEBUG] Walking in function: llvm.dbg.declare
42 2018-Dec-30 13:54:56.018176 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2018-Dec-30 13:54:56.018240 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8
44 2018-Dec-30 13:54:56.018622 - [DEBUG] Found 1 possible target(s)
45 2018-Dec-30 13:54:56.018681 - [DEBUG] Target name: getenv
46 2018-Dec-30 13:54:56.018761 - [DEBUG] Walking in function: getenv
47 2018-Dec-30 13:54:56.018851 - [DEBUG] Function already visited or only declaration: getenv
48 2018-Dec-30 13:54:56.018918 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !60, metadata !39), !dbg !61, !phasar.instruction.id !62, ID: 17
49 2018-Dec-30 13:54:56.019256 - [DEBUG] Found 1 possible target(s)
50 2018-Dec-30 13:54:56.019315 - [DEBUG] Target name: llvm.dbg.declare
51 2018-Dec-30 13:54:56.019389 - [DEBUG] Walking in function: llvm.dbg.declare
52 2018-Dec-30 13:54:56.019451 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2018-Dec-30 13:54:56.019535 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !73, metadata !39), !dbg !74, !phasar.instruction.id !75, ID: 24
54 2018-Dec-30 13:54:56.019872 - [DEBUG] Found 1 possible target(s)
55 2018-Dec-30 13:54:56.019930 - [DEBUG] Target name: llvm.dbg.declare
56 2018-Dec-30 13:54:56.020005 - [DEBUG] Walking in function: llvm.dbg.declare
57 2018-Dec-30 13:54:56.020067 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2018-Dec-30 13:54:56.020129 - [INFO] Call graph has been constructed
59 2018-Dec-30 13:54:56.020191 - [INFO] Performing analysis: plugin
60 2018-Dec-30 13:54:56.020257 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
61 2018-Dec-30 13:54:56.020740 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %s = alloca %struct.s1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction

  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !18, metadata !39), !dbg !40, !phasar.instruction.id !41
Got call instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
Got call instruction
Adding call instruction fact
Adding line: 30

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45
Adding line: 30

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !46, !phasar.instruction.id !47
Got operands checking instruction (bitcast)
Adding line: 30

  %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !48, !phasar.instruction.id !49
Got operands checking instruction (bitcast)
Adding line: 30

  %taint = bitcast %union.u3* %u2 to i8**, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)
Adding line: 30

  store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53
Got store instruction
Adding store instruction
Adding line: 30
Adding line: 30

  %uuu = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55
Adding line: 30
Adding line: 30

  %taint3 = bitcast %union.u3* %uuu to i8**, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 30

  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %taint3, align 8, !dbg !58, !phasar.instruction.id !59
Got store instruction
Adding line: 30
Adding line: 30

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !60, metadata !39), !dbg !61, !phasar.instruction.id !62
Got call instruction
Adding line: 30
Adding line: 30

  %u4 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64
Adding line: 30
Adding line: 30

  %u5 = bitcast %union.u1* %u4 to %union.u2*, !dbg !65, !phasar.instruction.id !66
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 30

  %u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !67, !phasar.instruction.id !68
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 30

  %taint7 = bitcast %union.u3* %u6 to i8**, !dbg !69, !phasar.instruction.id !70
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 30

  %0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71
Got load instruction
Adding load instruction fact
Adding line: 30
Adding line: 30
Adding line: 33

  store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72
Got store instruction
Adding store instruction
Adding line: 30
Adding line: 30
Adding line: 33
Adding line: 33

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !73, metadata !39), !dbg !74, !phasar.instruction.id !75
Got call instruction
Adding line: 30
Adding line: 30
Adding line: 33
Adding line: 33

  %uuu8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !76, !phasar.instruction.id !77
Adding line: 30
Adding line: 30
Adding line: 33
Adding line: 33

  %taint9 = bitcast %union.u3* %uuu8 to i8**, !dbg !78, !phasar.instruction.id !79
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 30
Adding line: 33
Adding line: 33

  %1 = load i8*, i8** %taint9, align 8, !dbg !78, !phasar.instruction.id !80
Got load instruction
Adding line: 30
Adding line: 30
Adding line: 33
Adding line: 33

  store i8* %1, i8** %not_tainted, align 8, !dbg !74, !phasar.instruction.id !81
Got store instruction
Adding line: 30
Adding line: 30
Adding line: 33
Adding line: 33

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !46, !phasar.instruction.id !47
Got operands checking instruction (bitcast)

  %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !48, !phasar.instruction.id !49
Got operands checking instruction (bitcast)

  %taint = bitcast %union.u3* %u2 to i8**, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)

  store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53
Got store instruction
Adding store instruction

  %uuu = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55

  %taint3 = bitcast %union.u3* %uuu to i8**, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)

  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %taint3, align 8, !dbg !58, !phasar.instruction.id !59
Got store instruction

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !60, metadata !39), !dbg !61, !phasar.instruction.id !62
Got call instruction

  %u4 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64

  %u5 = bitcast %union.u1* %u4 to %union.u2*, !dbg !65, !phasar.instruction.id !66
Got operands checking instruction (bitcast)

  %u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !67, !phasar.instruction.id !68
Got operands checking instruction (bitcast)

  %taint7 = bitcast %union.u3* %u6 to i8**, !dbg !69, !phasar.instruction.id !70
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71
Got load instruction
Adding load instruction fact

  store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !73, metadata !39), !dbg !74, !phasar.instruction.id !75
Got call instruction

  %uuu8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !76, !phasar.instruction.id !77

  %taint9 = bitcast %union.u3* %uuu8 to i8**, !dbg !78, !phasar.instruction.id !79
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint9, align 8, !dbg !78, !phasar.instruction.id !80
Got load instruction

  store i8* %1, i8** %not_tainted, align 8, !dbg !74, !phasar.instruction.id !81
Got store instruction

  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !18, metadata !39), !dbg !40, !phasar.instruction.id !41
Got call instruction

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53
Got store instruction
Adding store instruction

  %uuu = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !17
Got store instruction

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45

  %s = alloca %struct.s1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !60, metadata !39), !dbg !61, !phasar.instruction.id !62
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !73, metadata !39), !dbg !74, !phasar.instruction.id !75
Got call instruction

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !46, !phasar.instruction.id !47
Got operands checking instruction (bitcast)

  %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !48, !phasar.instruction.id !49
Got operands checking instruction (bitcast)

  %taint = bitcast %union.u3* %u2 to i8**, !dbg !50, !phasar.instruction.id !51
Got operands checking instruction (bitcast)

  %taint3 = bitcast %union.u3* %uuu to i8**, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)

  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %taint3, align 8, !dbg !58, !phasar.instruction.id !59
Got store instruction

  %u4 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64

  %u5 = bitcast %union.u1* %u4 to %union.u2*, !dbg !65, !phasar.instruction.id !66
Got operands checking instruction (bitcast)

  %u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !67, !phasar.instruction.id !68
Got operands checking instruction (bitcast)

  %taint7 = bitcast %union.u3* %u6 to i8**, !dbg !69, !phasar.instruction.id !70
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71
Got load instruction
Adding load instruction fact

  store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72
Got store instruction
Adding store instruction

  %uuu8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !76, !phasar.instruction.id !77

  %taint9 = bitcast %union.u3* %uuu8 to i8**, !dbg !78, !phasar.instruction.id !79
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint9, align 8, !dbg !78, !phasar.instruction.id !80
Got load instruction

  store i8* %1, i8** %not_tainted, align 8, !dbg !74, !phasar.instruction.id !81
Got store instruction

  ret i32 0, !dbg !82, !phasar.instruction.id !83worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !18, metadata !39), !dbg !40, !phasar.instruction.id !41, ID: 7
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%uuu = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !54, !phasar.instruction.id !55, ID: 14
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !44, !phasar.instruction.id !45, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%s = alloca %struct.s1, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%not_tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !60, metadata !39), !dbg !61, !phasar.instruction.id !62, ID: 17
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !73, metadata !39), !dbg !74, !phasar.instruction.id !75, ID: 24
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 22
store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72, ID: 23


Instruction:
%u1 = bitcast %union.u1* %u to %union.u2*, !dbg !46, !phasar.instruction.id !47, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !48, !phasar.instruction.id !49, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%taint = bitcast %union.u3* %u2 to i8**, !dbg !50, !phasar.instruction.id !51, ID: 12
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%taint3 = bitcast %union.u3* %uuu to i8**, !dbg !56, !phasar.instruction.id !57, ID: 15
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i8** %taint3, align 8, !dbg !58, !phasar.instruction.id !59, ID: 16
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%u4 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 0, !dbg !63, !phasar.instruction.id !64, ID: 18
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%u5 = bitcast %union.u1* %u4 to %union.u2*, !dbg !65, !phasar.instruction.id !66, ID: 19
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%u6 = bitcast %union.u2* %u5 to %union.u3*, !dbg !67, !phasar.instruction.id !68, ID: 20
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%taint7 = bitcast %union.u3* %u6 to i8**, !dbg !69, !phasar.instruction.id !70, ID: 21
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 22
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8


Instruction:
store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72, ID: 23
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 22


Instruction:
%uuu8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !76, !phasar.instruction.id !77, ID: 25
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 22
store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72, ID: 23


Instruction:
%taint9 = bitcast %union.u3* %uuu8 to i8**, !dbg !78, !phasar.instruction.id !79, ID: 26
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 22
store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72, ID: 23


Instruction:
%1 = load i8*, i8** %taint9, align 8, !dbg !78, !pha62 2018-Dec-30 13:54:56.064250 - [INFO] Write results to file
63 2018-Dec-30 13:54:56.064433 - [INFO] Shutdown llvm and the analysis framework.

sar.instruction.id !80, ID: 27
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 22
store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72, ID: 23


Instruction:
store i8* %1, i8** %not_tainted, align 8, !dbg !74, !phasar.instruction.id !81, ID: 28
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 22
store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72, ID: 23


Instruction:
ret i32 0, !dbg !82, !phasar.instruction.id !83, ID: 29
Facts:
store i8* %call, i8** %taint, align 8, !dbg !52, !phasar.instruction.id !53, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !42, !phasar.instruction.id !43, ID: 8
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 22
store i8* %0, i8** %tainted, align 8, !dbg !61, !phasar.instruction.id !72, ID: 23


