0 2018-Dec-29 21:16:08.675503 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-29 21:16:08.675978 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-29 21:16:08.676361 - [INFO] No configuration file is used.
3 2018-Dec-29 21:16:08.676447 - [INFO] Program options have been successfully parsed.
4 2018-Dec-29 21:16:08.676553 - [INFO] Check program options for logical errors.
5 2018-Dec-29 21:16:08.676658 - [INFO] Set-up IR database.
6 2018-Dec-29 21:16:08.686405 - [INFO] Constructed the analysis controller.
7 2018-Dec-29 21:16:08.686628 - [INFO] Found the following IR files for this project: 
8 2018-Dec-29 21:16:08.686699 - [INFO] 	main.ll
9 2018-Dec-29 21:16:08.686767 - [INFO] Check for chosen entry points.
10 2018-Dec-29 21:16:08.686837 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-29 21:16:08.686901 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-29 21:16:08.686970 - [INFO] Preprocess module: main.ll
13 2018-Dec-29 21:16:08.687491 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-29 21:16:08.687794 - [INFO] Running ValueAnnotationPass
15 2018-Dec-29 21:16:08.688511 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-29 21:16:08.688669 - [INFO] Allocated Types    : 3
17 2018-Dec-29 21:16:08.688760 - [INFO] Allocation Sites   : 4
18 2018-Dec-29 21:16:08.688823 - [INFO] Basic Blocks       : 1
19 2018-Dec-29 21:16:08.688885 - [INFO] Calls Sites        : 4
20 2018-Dec-29 21:16:08.688946 - [INFO] Functions          : 3
21 2018-Dec-29 21:16:08.689007 - [INFO] Globals            : 1
22 2018-Dec-29 21:16:08.689069 - [INFO] Global Pointer     : 1
23 2018-Dec-29 21:16:08.689132 - [INFO] Instructions       : 36
24 2018-Dec-29 21:16:08.689194 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-29 21:16:08.689256 - [INFO] Store Instructions : 5
26 2018-Dec-29 21:16:08.689317 - [INFO]  
27 2018-Dec-29 21:16:08.689434 - [INFO]   i32
28 2018-Dec-29 21:16:08.689511 - [INFO]   %struct.s1 = type { i8*, %union.u1, i32 }
29 2018-Dec-29 21:16:08.689575 - [INFO]   i8*
30 2018-Dec-29 21:16:08.690551 - [DEBUG] Analyzing function: main
31 2018-Dec-29 21:16:08.706576 - [INFO] Reconstruct the class hierarchy.
32 2018-Dec-29 21:16:08.706733 - [INFO] Construct type hierarchy
33 2018-Dec-29 21:16:08.706800 - [DEBUG] Analyse types in module: main.ll
34 2018-Dec-29 21:16:08.707130 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2018-Dec-29 21:16:08.707331 - [INFO] Reconstruction of class hierarchy completed.
36 2018-Dec-29 21:16:08.707399 - [INFO] Starting CallGraphAnalysisType: OTF
37 2018-Dec-29 21:16:08.709381 - [DEBUG] Walking in function: main
38 2018-Dec-29 21:16:08.709547 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !17, metadata !41), !dbg !42, !phasar.instruction.id !43, ID: 6
39 2018-Dec-29 21:16:08.710113 - [DEBUG] Found 1 possible target(s)
40 2018-Dec-29 21:16:08.710175 - [DEBUG] Target name: llvm.dbg.declare
41 2018-Dec-29 21:16:08.710263 - [DEBUG] Walking in function: llvm.dbg.declare
42 2018-Dec-29 21:16:08.710326 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2018-Dec-29 21:16:08.710390 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
44 2018-Dec-29 21:16:08.710850 - [DEBUG] Found 1 possible target(s)
45 2018-Dec-29 21:16:08.710910 - [DEBUG] Target name: getenv
46 2018-Dec-29 21:16:08.710996 - [DEBUG] Walking in function: getenv
47 2018-Dec-29 21:16:08.711058 - [DEBUG] Function already visited or only declaration: getenv
48 2018-Dec-29 21:16:08.711124 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !58, metadata !41), !dbg !59, !phasar.instruction.id !60, ID: 14
49 2018-Dec-29 21:16:08.711577 - [DEBUG] Found 1 possible target(s)
50 2018-Dec-29 21:16:08.711638 - [DEBUG] Target name: llvm.dbg.declare
51 2018-Dec-29 21:16:08.711719 - [DEBUG] Walking in function: llvm.dbg.declare
52 2018-Dec-29 21:16:08.711781 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2018-Dec-29 21:16:08.711871 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !85, metadata !41), !dbg !86, !phasar.instruction.id !87, ID: 28
54 2018-Dec-29 21:16:08.712376 - [DEBUG] Found 1 possible target(s)
55 2018-Dec-29 21:16:08.712445 - [DEBUG] Target name: llvm.dbg.declare
56 2018-Dec-29 21:16:08.712542 - [DEBUG] Walking in function: llvm.dbg.declare
57 2018-Dec-29 21:16:08.712612 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2018-Dec-29 21:16:08.712682 - [INFO] Call graph has been constructed
59 2018-Dec-29 21:16:08.712752 - [INFO] Performing analysis: plugin
60 2018-Dec-29 21:16:08.712828 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
61 2018-Dec-29 21:16:08.713567 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %s = alloca %struct.s1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %also_tainted = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !17, metadata !41), !dbg !42, !phasar.instruction.id !43
Got call instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45
Got call instruction
Adding call instruction fact
Adding line: 30

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47
Adding line: 30

  %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !48, !phasar.instruction.id !49
Got operands checking instruction (bitcast)
Adding line: 30

  %u2 = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !50, !phasar.instruction.id !51
Adding line: 30

  %arrayidx = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u2, i64 0, i64 0, !dbg !52, !phasar.instruction.id !53
Adding line: 30

  %taint = bitcast %union.u2* %arrayidx to i8**, !dbg !54, !phasar.instruction.id !55
Got operands checking instruction (bitcast)
Adding line: 30

  store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57
Got store instruction
Adding store instruction
Adding line: 30
Adding line: 30

  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !58, metadata !41), !dbg !59, !phasar.instruction.id !60
Got call instruction
Adding line: 30
Adding line: 30

  %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62
Adding line: 30
Adding line: 30

  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !63, !phasar.instruction.id !64
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 30

  %u5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !65, !phasar.instruction.id !66
Adding line: 30
Adding line: 30

  %arrayidx6 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u5, i64 0, i64 0, !dbg !67, !phasar.instruction.id !68
Adding line: 30
Adding line: 30

  %taint7 = bitcast %union.u2* %arrayidx6 to i8**, !dbg !69, !phasar.instruction.id !70
Got operands checking instruction (bitcast)
Adding line: 30
Adding line: 30

  %0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71
Got load instruction
Adding load instruction fact
Adding line: 30
Adding line: 30
Adding line: 31

  store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72
Got store instruction
Adding store instruction
Adding line: 31
Adding line: 30
Adding line: 30
Adding line: 31

  %u8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !73, !phasar.instruction.id !74
Adding line: 31
Adding line: 30
Adding line: 30
Adding line: 31

  %s9 = bitcast %union.u1* %u8 to %struct.s2*, !dbg !75, !phasar.instruction.id !76
Got operands checking instruction (bitcast)
Adding line: 31
Adding line: 30
Adding line: 30
Adding line: 31

  %u10 = getelementptr inbounds %struct.s2, %struct.s2* %s9, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78
Adding line: 31
Adding line: 30
Adding line: 30
Adding line: 31

  %arrayidx11 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u10, i64 0, i64 0, !dbg !79, !phasar.instruction.id !80
Adding line: 31
Adding line: 30
Adding line: 30
Adding line: 31

  %a = bitcast %union.u2* %arrayidx11 to i32*, !dbg !81, !phasar.instruction.id !82
Got operands checking instruction (bitcast)
Adding line: 31
Adding line: 30
Adding line: 30
Adding line: 31

  store i32 1, i32* %a, align 8, !dbg !83, !phasar.instruction.id !84
Got store instruction
Removing store instruction
Adding line: 31
Adding line: 30
Adding line: 31

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !85, metadata !41), !dbg !86, !phasar.instruction.id !87
Got call instruction
Adding line: 31
Adding line: 30
Adding line: 31

  %u12 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !88, !phasar.instruction.id !89
Adding line: 31
Adding line: 30
Adding line: 31

  %s13 = bitcast %union.u1* %u12 to %struct.s2*, !dbg !90, !phasar.instruction.id !91
Got operands checking instruction (bitcast)
Adding line: 31
Adding line: 30
Adding line: 31

  %u14 = getelementptr inbounds %struct.s2, %struct.s2* %s13, i32 0, i32 0, !dbg !92, !phasar.instruction.id !93
Adding line: 31
Adding line: 30
Adding line: 31

  %arrayidx15 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u14, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95
Adding line: 31
Adding line: 30
Adding line: 31

  %taint16 = bitcast %union.u2* %arrayidx15 to i8**, !dbg !96, !phasar.instruction.id !97
Got operands checking instruction (bitcast)
Adding line: 31
Adding line: 30
Adding line: 31

  %1 = load i8*, i8** %taint16, align 8, !dbg !96, !phasar.instruction.id !98
Got load instruction
Adding line: 31
Adding line: 30
Adding line: 31

  store i8* %1, i8** %not_tainted, align 8, !dbg !86, !phasar.instruction.id !99
Got store instruction
Adding line: 31
Adding line: 30
Adding line: 31

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47

  %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !48, !phasar.instruction.id !49
Got operands checking instruction (bitcast)

  %u2 = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !50, !phasar.instruction.id !51

  %arrayidx = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u2, i64 0, i64 0, !dbg !52, !phasar.instruction.id !53

  %taint = bitcast %union.u2* %arrayidx to i8**, !dbg !54, !phasar.instruction.id !55
Got operands checking instruction (bitcast)

  store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !58, metadata !41), !dbg !59, !phasar.instruction.id !60
Got call instruction

  %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62

  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !63, !phasar.instruction.id !64
Got operands checking instruction (bitcast)

  %u5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !65, !phasar.instruction.id !66

  %arrayidx6 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u5, i64 0, i64 0, !dbg !67, !phasar.instruction.id !68

  %taint7 = bitcast %union.u2* %arrayidx6 to i8**, !dbg !69, !phasar.instruction.id !70
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71
Got load instruction
Adding load instruction fact

  store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72
Got store instruction
Adding store instruction

  %u8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !73, !phasar.instruction.id !74

  %s9 = bitcast %union.u1* %u8 to %struct.s2*, !dbg !75, !phasar.instruction.id !76
Got operands checking instruction (bitcast)

  %u10 = getelementptr inbounds %struct.s2, %struct.s2* %s9, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78

  %arrayidx11 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u10, i64 0, i64 0, !dbg !79, !phasar.instruction.id !80

  %a = bitcast %union.u2* %arrayidx11 to i32*, !dbg !81, !phasar.instruction.id !82
Got operands checking instruction (bitcast)

  store i32 1, i32* %a, align 8, !dbg !83, !phasar.instruction.id !84
Got store instruction
Removing store instruction

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !85, metadata !41), !dbg !86, !phasar.instruction.id !87
Got call instruction

  %u12 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !88, !phasar.instruction.id !89

  %s13 = bitcast %union.u1* %u12 to %struct.s2*, !dbg !90, !phasar.instruction.id !91
Got operands checking instruction (bitcast)

  %u14 = getelementptr inbounds %struct.s2, %struct.s2* %s13, i32 0, i32 0, !dbg !92, !phasar.instruction.id !93

  %arrayidx15 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u14, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95

  %taint16 = bitcast %union.u2* %arrayidx15 to i8**, !dbg !96, !phasar.instruction.id !97
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint16, align 8, !dbg !96, !phasar.instruction.id !98
Got load instruction

  store i8* %1, i8** %not_tainted, align 8, !dbg !86, !phasar.instruction.id !99
Got store instruction

  call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !17, metadata !41), !dbg !42, !phasar.instruction.id !43
Got call instruction

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 1, i32* %a, align 8, !dbg !83, !phasar.instruction.id !84
Got store instruction
Removing store instruction

  store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72
Got store instruction
Adding store instruction

  %u2 = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !50, !phasar.instruction.id !51

  store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57
Got store instruction
Adding store instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45
Got call instruction
Adding call instruction fact

  %arrayidx = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u2, i64 0, i64 0, !dbg !52, !phasar.instruction.id !53

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  %u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47

  %s = alloca %struct.s1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %also_tainted = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !48, !phasar.instruction.id !49
Got operands checking instruction (bitcast)

  call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !58, metadata !41), !dbg !59, !phasar.instruction.id !60
Got call instruction

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !85, metadata !41), !dbg !86, !phasar.instruction.id !87
Got call instruction

  %taint = bitcast %union.u2* %arrayidx to i8**, !dbg !54, !phasar.instruction.id !55
Got operands checking instruction (bitcast)

  %u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62

  %s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !63, !phasar.instruction.id !64
Got operands checking instruction (bitcast)

  %u5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !65, !phasar.instruction.id !66

  %arrayidx6 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u5, i64 0, i64 0, !dbg !67, !phasar.instruction.id !68

  %taint7 = bitcast %union.u2* %arrayidx6 to i8**, !dbg !69, !phasar.instruction.id !70
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71
Got load instruction
Adding load instruction fact

  %u8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !73, !phasar.instruction.id !74

  %s9 = bitcast %union.u1* %u8 to %struct.s2*, !dbg !75, !phasar.instruction.id !76
Got operands checking instruction (bitcast)

  %u10 = getelementptr inbounds %struct.s2, %struct.s2* %s9, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78

  %arrayidx11 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u10, i64 0, i64 0, !dbg !79, !phasar.instruction.id !80

  %a = bitcast %union.u2* %arrayidx11 to i32*, !dbg !81, !phasar.instruction.id !82
Got operands checking instruction (bitcast)

  %u12 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !88, !phasar.instruction.id !89

  %s13 = bitcast %union.u1* %u12 to %struct.s2*, !dbg !90, !phasar.instruction.id !91
Got operands checking instruction (bitcast)

  %u14 = getelementptr inbounds %struct.s2, %struct.s2* %s13, i32 0, i32 0, !dbg !92, !phasar.instruction.id !93

  %arrayidx15 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u14, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95

  %taint16 = bitcast %union.u2* %arrayidx15 to i8**, !dbg !96, !phasar.instruction.id !97
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint16, align 8, !dbg !96, !phasar.instruction.id !98
Got load instruction

  store i8* %1, i8** %not_tainted, align 8, !dbg !86, !phasar.instruction.id !99
Got store instruction

  ret i32 0, !dbg !100, !phasar.instruction.id !101worklist size: 35
worklist size: 34
worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %struct.s1* %s, metadata !17, metadata !41), !dbg !42, !phasar.instruction.id !43, ID: 6
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 1, i32* %a, align 8, !dbg !83, !phasar.instruction.id !84, ID: 27
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
Facts:
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%u2 = getelementptr inbounds %struct.s2, %struct.s2* %s1, i32 0, i32 0, !dbg !50, !phasar.instruction.id !51, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
Facts:
	EMPTY


Instruction:
%arrayidx = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u2, i64 0, i64 0, !dbg !52, !phasar.instruction.id !53, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%u = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !46, !phasar.instruction.id !47, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
%s = alloca %struct.s1, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%not_tainted = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%also_tainted = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%s1 = bitcast %union.u1* %u to %struct.s2*, !dbg !48, !phasar.instruction.id !49, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %also_tainted, metadata !58, metadata !41), !dbg !59, !phasar.instruction.id !60, ID: 14
Facts:
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !85, metadata !41), !dbg !86, !phasar.instruction.id !87, ID: 28
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%taint = bitcast %union.u2* %arrayidx to i8**, !dbg !54, !phasar.instruction.id !55, ID: 12
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
%u3 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !61, !phasar.instruction.id !62, ID: 15
Facts:
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
%s4 = bitcast %union.u1* %u3 to %struct.s2*, !dbg !63, !phasar.instruction.id !64, ID: 16
Facts:
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
%u5 = getelementptr inbounds %struct.s2, %struct.s2* %s4, i32 0, i32 0, !dbg !65, !phasar.instruction.id !66, ID: 17
Facts:
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
%arrayidx6 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u5, i64 0, i64 0, !dbg !67, !phasar.instruction.id !68, ID: 18
Facts:
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
%taint7 = bitcast %union.u2* %arrayidx6 to i8**, !dbg !69, !phasar.instruction.id !70, ID: 19
Facts:
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20
Facts:
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7


Instruction:
%u8 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !73, !phasar.instruction.id !74, ID: 22
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%s9 = bitcast %union.u1* %u8 to %struct.s2*, !dbg !75, !phasar.instruction.id !76, ID: 23
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%u10 = getelementptr inbounds %struct.s2, %struct.s2* %s9, i32 0, i32 0, !dbg !77, !phasar.instruction.id !78, ID: 24
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%arrayidx11 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u10, i64 0, i64 0, !dbg !79, !phasar.instruction.id !80, ID: 25
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%a = bitcast %union.u2* %arrayidx11 to i32*, !dbg !81, !phasar.instruction.id !82, ID: 26
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
store i8* %call, i8** %taint, align 8, !dbg !56, !phasar.instruction.id !57, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%u12 = getelementptr inbounds %struct.s1, %struct.s1* %s, i32 0, i32 1, !dbg !88, !phasar.instruction.id !89, ID: 29
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%s13 = bitcast %union.u1* %u12 to %struct.s2*, !dbg !90, !phasar.instruction.id !91, ID: 30
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%u14 = getelementptr inbounds %struct.s2, %struct.s2* %s13, i32 0, i32 0, !dbg !92, !phasar.instruction.id !93, ID: 31
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%arrayidx15 = getelementptr inbounds [2 x %union.u2], [2 x %union.u2]* %u14, i64 0, i64 0, !dbg !94, !phasar.instruction.id !95, ID: 32
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%taint16 = bitcast %union.u2* %arrayidx15 to i8**, !dbg !96, !phasar.instruction.id !97, ID: 33
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !62 2018-Dec-29 21:16:08.791704 - [INFO] Write results to file
63 2018-Dec-29 21:16:08.792130 - [INFO] Shutdown llvm and the analysis framework.

45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
%1 = load i8*, i8** %taint16, align 8, !dbg !96, !phasar.instruction.id !98, ID: 34
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
store i8* %1, i8** %not_tainted, align 8, !dbg !86, !phasar.instruction.id !99, ID: 35
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


Instruction:
ret i32 0, !dbg !100, !phasar.instruction.id !101, ID: 36
Facts:
store i8* %0, i8** %also_tainted, align 8, !dbg !59, !phasar.instruction.id !72, ID: 21
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !44, !phasar.instruction.id !45, ID: 7
%0 = load i8*, i8** %taint7, align 8, !dbg !69, !phasar.instruction.id !71, ID: 20


