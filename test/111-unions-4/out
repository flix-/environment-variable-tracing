0 2019-Jan-05 20:21:49.534003 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 20:21:49.534405 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 20:21:49.534755 - [INFO] No configuration file is used.
3 2019-Jan-05 20:21:49.534831 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 20:21:49.534928 - [INFO] Check program options for logical errors.
5 2019-Jan-05 20:21:49.535017 - [INFO] Set-up IR database.
6 2019-Jan-05 20:21:49.540398 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 20:21:49.540515 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 20:21:49.540586 - [INFO] 	main.ll
9 2019-Jan-05 20:21:49.540645 - [INFO] Check for chosen entry points.
10 2019-Jan-05 20:21:49.540750 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 20:21:49.540809 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 20:21:49.540884 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 20:21:49.541360 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 20:21:49.541545 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 20:21:49.542010 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 20:21:49.542106 - [INFO] Allocated Types    : 3
17 2019-Jan-05 20:21:49.542187 - [INFO] Allocation Sites   : 3
18 2019-Jan-05 20:21:49.542274 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 20:21:49.542332 - [INFO] Calls Sites        : 3
20 2019-Jan-05 20:21:49.542408 - [INFO] Functions          : 3
21 2019-Jan-05 20:21:49.542465 - [INFO] Globals            : 1
22 2019-Jan-05 20:21:49.542523 - [INFO] Global Pointer     : 1
23 2019-Jan-05 20:21:49.542580 - [INFO] Instructions       : 17
24 2019-Jan-05 20:21:49.542664 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 20:21:49.542721 - [INFO] Store Instructions : 3
26 2019-Jan-05 20:21:49.542802 - [INFO]  
27 2019-Jan-05 20:21:49.542879 - [INFO]   i32
28 2019-Jan-05 20:21:49.542966 - [INFO]   %union.u1 = type { %union.u2 }
29 2019-Jan-05 20:21:49.543028 - [INFO]   i8*
30 2019-Jan-05 20:21:49.543588 - [DEBUG] Analyzing function: main
31 2019-Jan-05 20:21:49.545431 - [INFO] Reconstruct the class hierarchy.
32 2019-Jan-05 20:21:49.545513 - [INFO] Construct type hierarchy
33 2019-Jan-05 20:21:49.545574 - [DEBUG] Analyse types in module: main.ll
34 2019-Jan-05 20:21:49.545798 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2019-Jan-05 20:21:49.545960 - [INFO] Reconstruction of class hierarchy completed.
36 2019-Jan-05 20:21:49.546025 - [INFO] Starting CallGraphAnalysisType: OTF
37 2019-Jan-05 20:21:49.546214 - [DEBUG] Walking in function: main
38 2019-Jan-05 20:21:49.546295 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !16, metadata !33), !dbg !34, !phasar.instruction.id !35, ID: 5
39 2019-Jan-05 20:21:49.546637 - [DEBUG] Found 1 possible target(s)
40 2019-Jan-05 20:21:49.546697 - [DEBUG] Target name: llvm.dbg.declare
41 2019-Jan-05 20:21:49.546779 - [DEBUG] Walking in function: llvm.dbg.declare
42 2019-Jan-05 20:21:49.546841 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2019-Jan-05 20:21:49.546905 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6
44 2019-Jan-05 20:21:49.547218 - [DEBUG] Found 1 possible target(s)
45 2019-Jan-05 20:21:49.547277 - [DEBUG] Target name: getenv
46 2019-Jan-05 20:21:49.547357 - [DEBUG] Walking in function: getenv
47 2019-Jan-05 20:21:49.547419 - [DEBUG] Function already visited or only declaration: getenv
48 2019-Jan-05 20:21:49.547483 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %a, metadata !46, metadata !33), !dbg !47, !phasar.instruction.id !48, ID: 11
49 2019-Jan-05 20:21:49.547752 - [DEBUG] Found 1 possible target(s)
50 2019-Jan-05 20:21:49.547811 - [DEBUG] Target name: llvm.dbg.declare
51 2019-Jan-05 20:21:49.547885 - [DEBUG] Walking in function: llvm.dbg.declare
52 2019-Jan-05 20:21:49.547947 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2019-Jan-05 20:21:49.548025 - [INFO] Call graph has been constructed
54 2019-Jan-05 20:21:49.548086 - [INFO] Performing analysis: plugin
55 2019-Jan-05 20:21:49.548152 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
56 2019-Jan-05 20:21:49.548697 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %u = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !16, metadata !33), !dbg !34, !phasar.instruction.id !35
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============

Added line number: 25

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !38, !phasar.instruction.id !39
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============

Added line number: 25

  %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !40, !phasar.instruction.id !41
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============

Added line number: 25

  %taint = bitcast %union.u3* %u2 to i8**, !dbg !42, !phasar.instruction.id !43
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============

Added line number: 25

  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============

Added line number: 25
Added line number: 25

  call void @llvm.dbg.declare(metadata i8** %a, metadata !46, metadata !33), !dbg !47, !phasar.instruction.id !48
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============

Added line number: 25
Added line number: 25

  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
=============

Added line number: 25
Added line number: 25
Added line number: 27

  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
=============

Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27

  %tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
  %tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54
=============

Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 27

  %0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
  %tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54
  %0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55
=============

Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 27
Added line number: 27

  store i8* %0, i8** %a, align 8, !dbg !47, !phasar.instruction.id !56
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !47, !phasar.instruction.id !56
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
  %tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54
  %0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55
=============

Added line number: 27
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 27
Added line number: 27

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !38, !phasar.instruction.id !39
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============


  %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !40, !phasar.instruction.id !41
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============


  %taint = bitcast %union.u3* %u2 to i8**, !dbg !42, !phasar.instruction.id !43
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============


  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============


  call void @llvm.dbg.declare(metadata i8** %a, metadata !46, metadata !33), !dbg !47, !phasar.instruction.id !48
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
=============


  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
=============


  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
=============


  %tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
  %tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54
=============


  %0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
  %tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54
  %0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55
=============


  store i8* %0, i8** %a, align 8, !dbg !47, !phasar.instruction.id !56
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %0, i8** %a, align 8, !dbg !47, !phasar.instruction.id !56
  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
  %tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54
  %0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55
=============


  call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !16, metadata !33), !dbg !34, !phasar.instruction.id !35
Got call instruction

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i8* %0, i8** %a, align 8, !dbg !47, !phasar.instruction.id !56
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %u1 = bitcast %union.u1* %u to %union.u2*, !dbg !38, !phasar.instruction.id !39
Got operands checking instruction (bitcast)

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !15
Got store instruction
Removed 0 memory locations from facts

  %a = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %u = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8** %a, metadata !46, metadata !33), !dbg !47, !phasar.instruction.id !48
Got call instruction

  %u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !40, !phasar.instruction.id !41
Got operands checking instruction (bitcast)

  %taint = bitcast %union.u3* %u2 to i8**, !dbg !42, !phasar.instruction.id !43
Got operands checking instruction (bitcast)

  %u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50
Got operands checking instruction (bitcast)
Adding fact

  %u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52
Got operands checking instruction (bitcast)
Adding fact

  %tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54
Got operands checking instruction (bitcast)
Adding fact

  %0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55
Got load instruction
Adding load instruction fact

  ret i32 0, !dbg !57, !phasar.instruction.id !58worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !16, metadata !33), !dbg !34, !phasar.instruction.id !35, ID: 5
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i8* %0, i8** %a, align 8, !dbg !47, !phasar.instruction.id !56, ID: 16
Facts:
store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6
%u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50, ID: 12
%u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52, ID: 13
%tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54, ID: 14
%0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55, ID: 15


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6


Instruction:
%u1 = bitcast %union.u1* %u to %union.u2*, !dbg !38, !phasar.instruction.id !39, ID: 7
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%u = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %a, metadata !46, metadata !33), !dbg !47, !phasar.instruction.id !48, ID: 11
Facts:
store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6


Instruction:
%u2 = bitcast %union.u2* %u1 to %union.u3*, !dbg !40, !phasar.instruction.id !41, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6


Instruction:
%taint = bitcast %union.u3* %u2 to i8**, !dbg !42, !phasar.instruction.id !43, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6


Instruction:
%u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50, ID: 12
Facts:
store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6


Instruction:
%u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52, ID: 13
Facts:
store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6
%u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50, ID: 12


Instruction:
%tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.inst57 2019-Jan-05 20:21:49.583604 - [INFO] Write results to file
58 2019-Jan-05 20:21:49.583790 - [INFO] Shutdown llvm and the analysis framework.

ruction.id !54, ID: 14
Facts:
store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6
%u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50, ID: 12
%u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52, ID: 13


Instruction:
%0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55, ID: 15
Facts:
store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6
%u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50, ID: 12
%u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52, ID: 13
%tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54, ID: 14


Instruction:
ret i32 0, !dbg !57, !phasar.instruction.id !58, ID: 17
Facts:
store i8* %0, i8** %a, align 8, !dbg !47, !phasar.instruction.id !56, ID: 16
store i8* %call, i8** %taint, align 8, !dbg !44, !phasar.instruction.id !45, ID: 10
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !36, !phasar.instruction.id !37, ID: 6
%u3 = bitcast %union.u1* %u to %union.u2*, !dbg !49, !phasar.instruction.id !50, ID: 12
%u4 = bitcast %union.u2* %u3 to %union.u3*, !dbg !51, !phasar.instruction.id !52, ID: 13
%tainted = bitcast %union.u3* %u4 to i8**, !dbg !53, !phasar.instruction.id !54, ID: 14
%0 = load i8*, i8** %tainted, align 8, !dbg !53, !phasar.instruction.id !55, ID: 15


