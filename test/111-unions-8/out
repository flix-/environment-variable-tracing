0 2019-Jan-05 20:21:50.704481 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 20:21:50.704886 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 20:21:50.705277 - [INFO] No configuration file is used.
3 2019-Jan-05 20:21:50.705356 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 20:21:50.705447 - [INFO] Check program options for logical errors.
5 2019-Jan-05 20:21:50.705536 - [INFO] Set-up IR database.
6 2019-Jan-05 20:21:50.711813 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 20:21:50.711945 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 20:21:50.712006 - [INFO] 	main.ll
9 2019-Jan-05 20:21:50.712065 - [INFO] Check for chosen entry points.
10 2019-Jan-05 20:21:50.712126 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 20:21:50.712184 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 20:21:50.712244 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 20:21:50.712587 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 20:21:50.712734 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 20:21:50.713117 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 20:21:50.713181 - [INFO] Allocated Types    : 3
17 2019-Jan-05 20:21:50.713244 - [INFO] Allocation Sites   : 6
18 2019-Jan-05 20:21:50.713302 - [INFO] Basic Blocks       : 1
19 2019-Jan-05 20:21:50.713359 - [INFO] Calls Sites        : 7
20 2019-Jan-05 20:21:50.713416 - [INFO] Functions          : 4
21 2019-Jan-05 20:21:50.713473 - [INFO] Globals            : 2
22 2019-Jan-05 20:21:50.713530 - [INFO] Global Pointer     : 2
23 2019-Jan-05 20:21:50.713587 - [INFO] Instructions       : 30
24 2019-Jan-05 20:21:50.713645 - [INFO] Memory Intrinsics  : 1
25 2019-Jan-05 20:21:50.713702 - [INFO] Store Instructions : 6
26 2019-Jan-05 20:21:50.713759 - [INFO]  
27 2019-Jan-05 20:21:50.713832 - [INFO]   i32
28 2019-Jan-05 20:21:50.713898 - [INFO]   %union.u1 = type { i8* }
29 2019-Jan-05 20:21:50.713960 - [INFO]   i8*
30 2019-Jan-05 20:21:50.714591 - [DEBUG] Analyzing function: main
31 2019-Jan-05 20:21:50.718216 - [INFO] Reconstruct the class hierarchy.
32 2019-Jan-05 20:21:50.718294 - [INFO] Construct type hierarchy
33 2019-Jan-05 20:21:50.718355 - [DEBUG] Analyse types in module: main.ll
34 2019-Jan-05 20:21:50.718606 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2019-Jan-05 20:21:50.718734 - [INFO] Reconstruction of class hierarchy completed.
36 2019-Jan-05 20:21:50.718798 - [INFO] Starting CallGraphAnalysisType: OTF
37 2019-Jan-05 20:21:50.719013 - [DEBUG] Walking in function: main
38 2019-Jan-05 20:21:50.719100 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !20, metadata !26), !dbg !27, !phasar.instruction.id !28, ID: 9
39 2019-Jan-05 20:21:50.719500 - [DEBUG] Found 1 possible target(s)
40 2019-Jan-05 20:21:50.719560 - [DEBUG] Target name: llvm.dbg.declare
41 2019-Jan-05 20:21:50.719642 - [DEBUG] Walking in function: llvm.dbg.declare
42 2019-Jan-05 20:21:50.719704 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2019-Jan-05 20:21:50.719768 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
44 2019-Jan-05 20:21:50.720128 - [DEBUG] Found 1 possible target(s)
45 2019-Jan-05 20:21:50.720187 - [DEBUG] Target name: getenv
46 2019-Jan-05 20:21:50.720267 - [DEBUG] Walking in function: getenv
47 2019-Jan-05 20:21:50.720329 - [DEBUG] Function already visited or only declaration: getenv
48 2019-Jan-05 20:21:50.720392 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %union.u1* %uu, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37, ID: 13
49 2019-Jan-05 20:21:50.720712 - [DEBUG] Found 1 possible target(s)
50 2019-Jan-05 20:21:50.720771 - [DEBUG] Target name: llvm.dbg.declare
51 2019-Jan-05 20:21:50.720845 - [DEBUG] Walking in function: llvm.dbg.declare
52 2019-Jan-05 20:21:50.720907 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2019-Jan-05 20:21:50.720988 - [DEBUG] Found static call-site: call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41, ID: 16
54 2019-Jan-05 20:21:50.721320 - [DEBUG] Found 1 possible target(s)
55 2019-Jan-05 20:21:50.721378 - [DEBUG] Target name: llvm.memcpy.p0i8.p0i8.i64
56 2019-Jan-05 20:21:50.721456 - [DEBUG] Walking in function: llvm.memcpy.p0i8.p0i8.i64
57 2019-Jan-05 20:21:50.721518 - [DEBUG] Function already visited or only declaration: llvm.memcpy.p0i8.p0i8.i64
58 2019-Jan-05 20:21:50.721581 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %tainted, metadata !42, metadata !26), !dbg !43, !phasar.instruction.id !44, ID: 17
59 2019-Jan-05 20:21:50.721916 - [DEBUG] Found 1 possible target(s)
60 2019-Jan-05 20:21:50.721975 - [DEBUG] Target name: llvm.dbg.declare
61 2019-Jan-05 20:21:50.722049 - [DEBUG] Walking in function: llvm.dbg.declare
62 2019-Jan-05 20:21:50.722111 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
63 2019-Jan-05 20:21:50.722175 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !53, metadata !26), !dbg !54, !phasar.instruction.id !55, ID: 23
64 2019-Jan-05 20:21:50.722494 - [DEBUG] Found 1 possible target(s)
65 2019-Jan-05 20:21:50.722552 - [DEBUG] Target name: llvm.dbg.declare
66 2019-Jan-05 20:21:50.722626 - [DEBUG] Walking in function: llvm.dbg.declare
67 2019-Jan-05 20:21:50.722688 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
68 2019-Jan-05 20:21:50.722752 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !60, metadata !26), !dbg !61, !phasar.instruction.id !62, ID: 27
69 2019-Jan-05 20:21:50.723070 - [DEBUG] Found 1 possible target(s)
70 2019-Jan-05 20:21:50.723128 - [DEBUG] Target name: llvm.dbg.declare
71 2019-Jan-05 20:21:50.723202 - [DEBUG] Walking in function: llvm.dbg.declare
72 2019-Jan-05 20:21:50.723264 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
73 2019-Jan-05 20:21:50.723326 - [INFO] Call graph has been constructed
74 2019-Jan-05 20:21:50.723387 - [INFO] Performing analysis: plugin
75 2019-Jan-05 20:21:50.723453 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
76 2019-Jan-05 20:21:50.723950 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %u = alloca %union.u1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %uu = alloca %union.u1, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !17
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %still_tainted = alloca i8*, align 8, !phasar.instruction.id !18
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !19
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !20, metadata !26), !dbg !27, !phasar.instruction.id !28
Got call instruction
Dumping facts
=============
=============


  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
=============

Added line number: 13

  %t = bitcast %union.u1* %u to i8**, !dbg !31, !phasar.instruction.id !32
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
=============

Added line number: 13

  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
=============

Added line number: 13
Added line number: 13

  call void @llvm.dbg.declare(metadata %union.u1* %uu, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
=============

Added line number: 13
Added line number: 13

  %0 = bitcast %union.u1* %uu to i8*, !dbg !38, !phasar.instruction.id !39
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
=============

Added line number: 13
Added line number: 13

  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
=============

Added line number: 13
Added line number: 13
Added line number: 15

  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
Got memcpy/memmove instruction
Removed 0 memory locations from facts
Adding memory location (memcpy/memmove)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
=============

Added line number: 15
Added line number: 13
Added line number: 13
Added line number: 15

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !42, metadata !26), !dbg !43, !phasar.instruction.id !44
Got call instruction
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
=============

Added line number: 15
Added line number: 13
Added line number: 13
Added line number: 15

  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
=============

Added line number: 15
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17

  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
Got load instruction
Adding load instruction fact
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
=============

Added line number: 15
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17

  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
=============

Added line number: 15
Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17

  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============

Added line number: 15
Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %t2, align 8, !dbg !51, !phasar.instruction.id !52
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============

Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !53, metadata !26), !dbg !54, !phasar.instruction.id !55
Got call instruction
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============

Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19

  %t3 = bitcast %union.u1* %uu to i8**, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============

Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19

  %3 = load i8*, i8** %t3, align 8, !dbg !56, !phasar.instruction.id !58
Got load instruction
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============

Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19

  store i8* %3, i8** %not_tainted, align 8, !dbg !54, !phasar.instruction.id !59
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============

Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19

  call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !60, metadata !26), !dbg !61, !phasar.instruction.id !62
Got call instruction
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============

Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19

  %t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
  %t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64
=============

Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19
Added line number: 23

  %4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
  %t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64
  %4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65
=============

Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19
Added line number: 23
Added line number: 23

  store i8* %4, i8** %still_tainted, align 8, !dbg !61, !phasar.instruction.id !66
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
  %t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64
  %4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65
  store i8* %4, i8** %still_tainted, align 8, !dbg !61, !phasar.instruction.id !66
=============

Added line number: 17
Added line number: 13
Added line number: 13
Added line number: 15
Added line number: 17
Added line number: 17
Added line number: 19
Added line number: 23
Added line number: 23
Added line number: 23

  %t = bitcast %union.u1* %u to i8**, !dbg !31, !phasar.instruction.id !32
Got operands checking instruction (bitcast)
Dumping facts
=============
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
=============


  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
=============


  call void @llvm.dbg.declare(metadata %union.u1* %uu, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37
Got call instruction
Dumping facts
=============
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
=============


  %0 = bitcast %union.u1* %uu to i8*, !dbg !38, !phasar.instruction.id !39
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
=============


  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
=============


  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
Got memcpy/memmove instruction
Removed 0 memory locations from facts
Adding memory location (memcpy/memmove)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
=============


  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !42, metadata !26), !dbg !43, !phasar.instruction.id !44
Got call instruction
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
=============


  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
=============


  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
Got load instruction
Adding load instruction fact
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
=============


  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
=============


  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============


  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %t2, align 8, !dbg !51, !phasar.instruction.id !52
Got store instruction
Removed 1 memory locations from facts
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============


  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !53, metadata !26), !dbg !54, !phasar.instruction.id !55
Got call instruction
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============


  %t3 = bitcast %union.u1* %uu to i8**, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============


  %3 = load i8*, i8** %t3, align 8, !dbg !56, !phasar.instruction.id !58
Got load instruction
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============


  store i8* %3, i8** %not_tainted, align 8, !dbg !54, !phasar.instruction.id !59
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============


  call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !60, metadata !26), !dbg !61, !phasar.instruction.id !62
Got call instruction
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
=============


  %t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64
Got operands checking instruction (bitcast)
Adding fact
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
  %t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64
=============


  %4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
  %t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64
  %4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65
=============


  store i8* %4, i8** %still_tainted, align 8, !dbg !61, !phasar.instruction.id !66
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
  %t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64
  %4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65
  store i8* %4, i8** %still_tainted, align 8, !dbg !61, !phasar.instruction.id !66
=============


  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41
Got memcpy/memmove instruction
Removed 0 memory locations from facts
Adding memory location (memcpy/memmove)

  %retval = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %t = bitcast %union.u1* %u to i8**, !dbg !31, !phasar.instruction.id !32
Got operands checking instruction (bitcast)

  store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !19
Got store instruction
Removed 0 memory locations from facts

  %uu = alloca %union.u1, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %not_tainted = alloca i8*, align 8, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  %u = alloca %union.u1, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %tainted = alloca i8*, align 8, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata %union.u1* %uu, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37
Got call instruction

  call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !20, metadata !26), !dbg !27, !phasar.instruction.id !28
Got call instruction

  %still_tainted = alloca i8*, align 8, !phasar.instruction.id !18
Got operands checking instruction (alloca)

  %0 = bitcast %union.u1* %uu to i8*, !dbg !38, !phasar.instruction.id !39
Got operands checking instruction (bitcast)

  %1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40
Got operands checking instruction (bitcast)
Adding fact

  call void @llvm.dbg.declare(metadata i8** %tainted, metadata !42, metadata !26), !dbg !43, !phasar.instruction.id !44
Got call instruction

  %t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46
Got operands checking instruction (bitcast)
Adding fact

  %2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47
Got load instruction
Adding load instruction fact

  %t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50
Got operands checking instruction (bitcast)
Adding fact

  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %t2, align 8, !dbg !51, !phasar.instruction.id !52
Got store instruction
Removed 1 memory locations from facts

  call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !53, metadata !26), !dbg !54, !phasar.instruction.id !55
Got call instruction

  %t3 = bitcast %union.u1* %uu to i8**, !dbg !56, !phasar.instruction.id !57
Got operands checking instruction (bitcast)

  %3 = load i8*, i8** %t3, align 8, !dbg !56, !phasar.instruction.id !58
Got load instruction

  store i8* %3, i8** %not_tainted, align 8, !dbg !54, !phasar.instruction.id !59
Got store instruction
Removed 0 memory locations from facts

  call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !60, metadata !26), !dbg !61, !phasar.instruction.id !62
Got call instruction

  %t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64
Got operands checking instruction (bitcast)
Adding fact

  %4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65
Got load instruction
Adding load instruction fact

  store i8* %4, i8** %still_tainted, align 8, !dbg !61, !phasar.instruction.id !66
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  ret i32 0, !dbg !67, !phasar.instruction.id !68worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41, ID: 16
Facts:
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41, ID: 16
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19


Instruction:
%t = bitcast %union.u1* %u to i8**, !dbg !31, !phasar.instruction.id !32, ID: 11
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10


Instruction:
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !19, ID: 8
Facts:
	EMPTY


Instruction:
%uu = alloca %union.u1, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%not_tainted = alloca i8*, align 8, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
%u = alloca %union.u1, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%tainted = alloca i8*, align 8, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata %union.u1* %uu, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37, ID: 13
Facts:
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10


Instruction:
call void @llvm.dbg.declare(metadata %union.u1* %u, metadata !20, metadata !26), !dbg !27, !phasar.instruction.id !28, ID: 9
Facts:
	EMPTY


Instruction:
%still_tainted = alloca i8*, align 8, !phasar.instruction.id !18, ID: 7
Facts:
	EMPTY


Instruction:
%0 = bitcast %union.u1* %uu to i8*, !dbg !38, !phasar.instruction.id !39, ID: 14
Facts:
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10


Instruction:
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
Facts:
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10


Instruction:
call void @llvm.dbg.declare(metadata i8** %tainted, metadata !42, metadata !26), !dbg !43, !phasar.instruction.id !44, ID: 17
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41, ID: 16
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15


Instruction:
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41, ID: 16
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15


Instruction:
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41, ID: 16
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18


Instruction:
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41, ID: 16
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19


Instruction:
store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8** %t2, align 8, !dbg !51, !phasar.instruction.id !52, ID: 22
Facts:
call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !dbg !38, !phasar.instruction.id !41, ID: 16
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21


Instruction:
call void @llvm.dbg.declare(metadata i8** %not_tainted, metadata !53, metadata !26), !dbg !54, !phasar.instruction.id !55, ID: 23
Facts:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21


Instruction:
%t3 = bitcast %union.u1* %uu to i8**, !dbg !56, !phasar.instruction.id !57, ID: 24
Facts:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21


Instruction:
%3 = load i8*, i8** %t3, align 8, !dbg !56, !phasar.instruction.id !58, ID: 25
Facts:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21


Instruction:
store i8* %3, i8** %not_tainted, align 8, !dbg !54, !phasar.instruction.id !59, ID: 26
Facts:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21


Instruction:
call void @llvm.dbg.declare(metadata i8** %still_tainted, metadata !60, metadata !26), !dbg !61, !phasar.instruction.id !62, ID: 27
Facts:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21


Instruction:
%t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64, ID: 28
Facts:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, 77 2019-Jan-05 20:21:50.842696 - [INFO] Write results to file
78 2019-Jan-05 20:21:50.842896 - [INFO] Shutdown llvm and the analysis framework.

!phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21


Instruction:
%4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65, ID: 29
Facts:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21
%t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64, ID: 28


Instruction:
store i8* %4, i8** %still_tainted, align 8, !dbg !61, !phasar.instruction.id !66, ID: 30
Facts:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21
%t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64, ID: 28
%4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65, ID: 29


Instruction:
ret i32 0, !dbg !67, !phasar.instruction.id !68, ID: 31
Facts:
store i8* %2, i8** %tainted, align 8, !dbg !43, !phasar.instruction.id !48, ID: 20
store i8* %call, i8** %t, align 8, !dbg !33, !phasar.instruction.id !34, ID: 12
%call = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 10
%1 = bitcast %union.u1* %u to i8*, !dbg !38, !phasar.instruction.id !40, ID: 15
%t1 = bitcast %union.u1* %uu to i8**, !dbg !45, !phasar.instruction.id !46, ID: 18
%2 = load i8*, i8** %t1, align 8, !dbg !45, !phasar.instruction.id !47, ID: 19
%t2 = bitcast %union.u1* %uu to i8**, !dbg !49, !phasar.instruction.id !50, ID: 21
%t4 = bitcast %union.u1* %u to i8**, !dbg !63, !phasar.instruction.id !64, ID: 28
%4 = load i8*, i8** %t4, align 8, !dbg !63, !phasar.instruction.id !65, ID: 29
store i8* %4, i8** %still_tainted, align 8, !dbg !61, !phasar.instruction.id !66, ID: 30


