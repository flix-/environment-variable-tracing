0 2018-Dec-29 12:16:28.417737 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-29 12:16:28.418187 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-29 12:16:28.418543 - [INFO] No configuration file is used.
3 2018-Dec-29 12:16:28.418620 - [INFO] Program options have been successfully parsed.
4 2018-Dec-29 12:16:28.418719 - [INFO] Check program options for logical errors.
5 2018-Dec-29 12:16:28.418808 - [INFO] Set-up IR database.
6 2018-Dec-29 12:16:28.424152 - [INFO] Constructed the analysis controller.
7 2018-Dec-29 12:16:28.424265 - [INFO] Found the following IR files for this project: 
8 2018-Dec-29 12:16:28.424327 - [INFO] 	main.ll
9 2018-Dec-29 12:16:28.424386 - [INFO] Check for chosen entry points.
10 2018-Dec-29 12:16:28.424447 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-29 12:16:28.424505 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-29 12:16:28.424566 - [INFO] Preprocess module: main.ll
13 2018-Dec-29 12:16:28.424932 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-29 12:16:28.425067 - [INFO] Running ValueAnnotationPass
15 2018-Dec-29 12:16:28.425403 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-29 12:16:28.425466 - [INFO] Allocated Types    : 3
17 2018-Dec-29 12:16:28.425531 - [INFO] Allocation Sites   : 4
18 2018-Dec-29 12:16:28.425589 - [INFO] Basic Blocks       : 1
19 2018-Dec-29 12:16:28.425646 - [INFO] Calls Sites        : 4
20 2018-Dec-29 12:16:28.425704 - [INFO] Functions          : 3
21 2018-Dec-29 12:16:28.425761 - [INFO] Globals            : 1
22 2018-Dec-29 12:16:28.425819 - [INFO] Global Pointer     : 1
23 2018-Dec-29 12:16:28.425877 - [INFO] Instructions       : 20
24 2018-Dec-29 12:16:28.425934 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-29 12:16:28.425992 - [INFO] Store Instructions : 5
26 2018-Dec-29 12:16:28.426049 - [INFO]  
27 2018-Dec-29 12:16:28.426129 - [INFO]   i32
28 2018-Dec-29 12:16:28.426195 - [INFO]   %union.u1 = type { double }
29 2018-Dec-29 12:16:28.426258 - [INFO]   i8*
30 2018-Dec-29 12:16:28.426718 - [DEBUG] Analyzing function: main
31 2018-Dec-29 12:16:28.428505 - [INFO] Reconstruct the class hierarchy.
32 2018-Dec-29 12:16:28.428579 - [INFO] Construct type hierarchy
33 2018-Dec-29 12:16:28.428640 - [DEBUG] Analyse types in module: main.ll
34 2018-Dec-29 12:16:28.428832 - [DEBUG] Reconstruct virtual function table for module: main.ll
35 2018-Dec-29 12:16:28.428957 - [INFO] Reconstruction of class hierarchy completed.
36 2018-Dec-29 12:16:28.429022 - [INFO] Starting CallGraphAnalysisType: OTF
37 2018-Dec-29 12:16:28.429189 - [DEBUG] Walking in function: main
38 2018-Dec-29 12:16:28.429269 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !26), !dbg !27, !phasar.instruction.id !28, ID: 6
39 2018-Dec-29 12:16:28.429612 - [DEBUG] Found 1 possible target(s)
40 2018-Dec-29 12:16:28.429672 - [DEBUG] Target name: llvm.dbg.declare
41 2018-Dec-29 12:16:28.429754 - [DEBUG] Walking in function: llvm.dbg.declare
42 2018-Dec-29 12:16:28.429817 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
43 2018-Dec-29 12:16:28.429881 - [DEBUG] Found static call-site: %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
44 2018-Dec-29 12:16:28.430194 - [DEBUG] Found 1 possible target(s)
45 2018-Dec-29 12:16:28.430253 - [DEBUG] Target name: getenv
46 2018-Dec-29 12:16:28.430334 - [DEBUG] Walking in function: getenv
47 2018-Dec-29 12:16:28.430396 - [DEBUG] Function already visited or only declaration: getenv
48 2018-Dec-29 12:16:28.430460 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %a, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37, ID: 10
49 2018-Dec-29 12:16:28.430727 - [DEBUG] Found 1 possible target(s)
50 2018-Dec-29 12:16:28.430786 - [DEBUG] Target name: llvm.dbg.declare
51 2018-Dec-29 12:16:28.430861 - [DEBUG] Walking in function: llvm.dbg.declare
52 2018-Dec-29 12:16:28.430923 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
53 2018-Dec-29 12:16:28.431004 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i8** %b, metadata !46, metadata !26), !dbg !47, !phasar.instruction.id !48, ID: 16
54 2018-Dec-29 12:16:28.431270 - [DEBUG] Found 1 possible target(s)
55 2018-Dec-29 12:16:28.431329 - [DEBUG] Target name: llvm.dbg.declare
56 2018-Dec-29 12:16:28.431436 - [DEBUG] Walking in function: llvm.dbg.declare
57 2018-Dec-29 12:16:28.431500 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
58 2018-Dec-29 12:16:28.431562 - [INFO] Call graph has been constructed
59 2018-Dec-29 12:16:28.431623 - [INFO] Performing analysis: plugin
60 2018-Dec-29 12:16:28.431689 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
61 2018-Dec-29 12:16:28.432173 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %un = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %a = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %b = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !26), !dbg !27, !phasar.instruction.id !28
Got call instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
Got call instruction
Adding call instruction fact
Adding line: 15

  %taint = bitcast %union.u1* %un to i8**, !dbg !31, !phasar.instruction.id !32
Got operands checking instruction (bitcast)
Adding line: 15

  store i8* %call, i8** %taint, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Adding store instruction
Adding line: 15
Adding line: 15

  call void @llvm.dbg.declare(metadata i8** %a, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37
Got call instruction
Adding line: 15
Adding line: 15

  %taint1 = bitcast %union.u1* %un to i8**, !dbg !38, !phasar.instruction.id !39
Got operands checking instruction (bitcast)
Adding line: 15
Adding line: 15

  %0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40
Got load instruction
Adding load instruction fact
Adding line: 15
Adding line: 15
Adding line: 17

  store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41
Got store instruction
Adding store instruction
Adding line: 17
Adding line: 15
Adding line: 15
Adding line: 17

  %a2 = bitcast %union.u1* %un to i32*, !dbg !42, !phasar.instruction.id !43
Got operands checking instruction (bitcast)
Adding line: 17
Adding line: 15
Adding line: 15
Adding line: 17

  store i32 1, i32* %a2, align 8, !dbg !44, !phasar.instruction.id !45
Got store instruction
Removing store instruction
Adding line: 17
Adding line: 15
Adding line: 17

  call void @llvm.dbg.declare(metadata i8** %b, metadata !46, metadata !26), !dbg !47, !phasar.instruction.id !48
Got call instruction
Adding line: 17
Adding line: 15
Adding line: 17

  %taint3 = bitcast %union.u1* %un to i8**, !dbg !49, !phasar.instruction.id !50
Got operands checking instruction (bitcast)
Adding line: 17
Adding line: 15
Adding line: 17

  %1 = load i8*, i8** %taint3, align 8, !dbg !49, !phasar.instruction.id !51
Got load instruction
Adding line: 17
Adding line: 15
Adding line: 17

  store i8* %1, i8** %b, align 8, !dbg !47, !phasar.instruction.id !52
Got store instruction
Adding line: 17
Adding line: 15
Adding line: 17

  %taint = bitcast %union.u1* %un to i8**, !dbg !31, !phasar.instruction.id !32
Got operands checking instruction (bitcast)

  store i8* %call, i8** %taint, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Adding store instruction

  call void @llvm.dbg.declare(metadata i8** %a, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37
Got call instruction

  %taint1 = bitcast %union.u1* %un to i8**, !dbg !38, !phasar.instruction.id !39
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40
Got load instruction
Adding load instruction fact

  store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41
Got store instruction
Adding store instruction

  %a2 = bitcast %union.u1* %un to i32*, !dbg !42, !phasar.instruction.id !43
Got operands checking instruction (bitcast)

  store i32 1, i32* %a2, align 8, !dbg !44, !phasar.instruction.id !45
Got store instruction
Removing store instruction

  call void @llvm.dbg.declare(metadata i8** %b, metadata !46, metadata !26), !dbg !47, !phasar.instruction.id !48
Got call instruction

  %taint3 = bitcast %union.u1* %un to i8**, !dbg !49, !phasar.instruction.id !50
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint3, align 8, !dbg !49, !phasar.instruction.id !51
Got load instruction

  store i8* %1, i8** %b, align 8, !dbg !47, !phasar.instruction.id !52
Got store instruction

  call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !26), !dbg !27, !phasar.instruction.id !28
Got call instruction

  %un = alloca %union.u1, align 8, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 1, i32* %a2, align 8, !dbg !44, !phasar.instruction.id !45
Got store instruction
Removing store instruction

  store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41
Got store instruction
Adding store instruction

  store i8* %call, i8** %taint, align 8, !dbg !33, !phasar.instruction.id !34
Got store instruction
Adding store instruction

  %call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !16
Got store instruction

  %b = alloca i8*, align 8, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %a = alloca i8*, align 8, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i8** %a, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37
Got call instruction

  %taint = bitcast %union.u1* %un to i8**, !dbg !31, !phasar.instruction.id !32
Got operands checking instruction (bitcast)

  call void @llvm.dbg.declare(metadata i8** %b, metadata !46, metadata !26), !dbg !47, !phasar.instruction.id !48
Got call instruction

  %taint1 = bitcast %union.u1* %un to i8**, !dbg !38, !phasar.instruction.id !39
Got operands checking instruction (bitcast)

  %0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40
Got load instruction
Adding load instruction fact

  %a2 = bitcast %union.u1* %un to i32*, !dbg !42, !phasar.instruction.id !43
Got operands checking instruction (bitcast)

  %taint3 = bitcast %union.u1* %un to i8**, !dbg !49, !phasar.instruction.id !50
Got operands checking instruction (bitcast)

  %1 = load i8*, i8** %taint3, align 8, !dbg !49, !phasar.instruction.id !51
Got load instruction

  store i8* %1, i8** %b, align 8, !dbg !47, !phasar.instruction.id !52
Got store instruction

  ret i32 0, !dbg !53, !phasar.instruction.id !54worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
call void @llvm.dbg.declare(metadata %union.u1* %un, metadata !17, metadata !26), !dbg !27, !phasar.instruction.id !28, ID: 6
Facts:
	EMPTY


Instruction:
%un = alloca %union.u1, align 8, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 1, i32* %a2, align 8, !dbg !44, !phasar.instruction.id !45, ID: 15
Facts:
store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41, ID: 13
store i8* %call, i8** %taint, align 8, !dbg !33, !phasar.instruction.id !34, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
%0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40, ID: 12


Instruction:
store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41, ID: 13
Facts:
store i8* %call, i8** %taint, align 8, !dbg !33, !phasar.instruction.id !34, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
%0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40, ID: 12


Instruction:
store i8* %call, i8** %taint, align 8, !dbg !33, !phasar.instruction.id !34, ID: 9
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7


Instruction:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%b = alloca i8*, align 8, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%a = alloca i8*, align 8, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i8** %a, metadata !35, metadata !26), !dbg !36, !phasar.instruction.id !37, ID: 10
Facts:
store i8* %call, i8** %taint, align 8, !dbg !33, !phasar.instruction.id !34, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7


Instruction:
%taint = bitcast %union.u1* %un to i8**, !dbg !31, !phasar.instruction.id !32, ID: 8
Facts:
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7


Instruction:
call void @llvm.dbg.declare(metadata i8** %b, metadata !46, metadata !26), !dbg !47, !phasar.instruction.id !48, ID: 16
Facts:
store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
%0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40, ID: 12


Instruction:
%taint1 = bitcast %union.u1* %un to i8**, !dbg !38, !phasar.instruction.id !39, ID: 11
Facts:
store i8* %call, i8** %taint, align 8, !dbg !33, !phasar.instruction.id !34, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7


Instruction:
%0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40, ID: 12
Facts:
store i8* %call, i8** %taint, align 8, !dbg !3362 2018-Dec-29 12:16:28.455065 - [INFO] Write results to file
63 2018-Dec-29 12:16:28.455242 - [INFO] Shutdown llvm and the analysis framework.

, !phasar.instruction.id !34, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7


Instruction:
%a2 = bitcast %union.u1* %un to i32*, !dbg !42, !phasar.instruction.id !43, ID: 14
Facts:
store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41, ID: 13
store i8* %call, i8** %taint, align 8, !dbg !33, !phasar.instruction.id !34, ID: 9
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
%0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40, ID: 12


Instruction:
%taint3 = bitcast %union.u1* %un to i8**, !dbg !49, !phasar.instruction.id !50, ID: 17
Facts:
store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
%0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40, ID: 12


Instruction:
%1 = load i8*, i8** %taint3, align 8, !dbg !49, !phasar.instruction.id !51, ID: 18
Facts:
store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
%0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40, ID: 12


Instruction:
store i8* %1, i8** %b, align 8, !dbg !47, !phasar.instruction.id !52, ID: 19
Facts:
store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
%0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40, ID: 12


Instruction:
ret i32 0, !dbg !53, !phasar.instruction.id !54, ID: 20
Facts:
store i8* %0, i8** %a, align 8, !dbg !36, !phasar.instruction.id !41, ID: 13
%call = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0)), !dbg !29, !phasar.instruction.id !30, ID: 7
%0 = load i8*, i8** %taint1, align 8, !dbg !38, !phasar.instruction.id !40, ID: 12


