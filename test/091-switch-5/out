0 2018-Dec-29 12:16:24.755264 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-29 12:16:24.755676 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-29 12:16:24.756033 - [INFO] No configuration file is used.
3 2018-Dec-29 12:16:24.756112 - [INFO] Program options have been successfully parsed.
4 2018-Dec-29 12:16:24.756211 - [INFO] Check program options for logical errors.
5 2018-Dec-29 12:16:24.756300 - [INFO] Set-up IR database.
6 2018-Dec-29 12:16:24.764257 - [INFO] Constructed the analysis controller.
7 2018-Dec-29 12:16:24.764369 - [INFO] Found the following IR files for this project: 
8 2018-Dec-29 12:16:24.764431 - [INFO] 	main.ll
9 2018-Dec-29 12:16:24.764489 - [INFO] Check for chosen entry points.
10 2018-Dec-29 12:16:24.764550 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-29 12:16:24.764608 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-29 12:16:24.764669 - [INFO] Preprocess module: main.ll
13 2018-Dec-29 12:16:24.765072 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-29 12:16:24.765248 - [INFO] Running ValueAnnotationPass
15 2018-Dec-29 12:16:24.765836 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-29 12:16:24.765899 - [INFO] Allocated Types    : 1
17 2018-Dec-29 12:16:24.765962 - [INFO] Allocation Sites   : 10
18 2018-Dec-29 12:16:24.766019 - [INFO] Basic Blocks       : 13
19 2018-Dec-29 12:16:24.766076 - [INFO] Calls Sites        : 10
20 2018-Dec-29 12:16:24.766133 - [INFO] Functions          : 3
21 2018-Dec-29 12:16:24.766191 - [INFO] Globals            : 1
22 2018-Dec-29 12:16:24.766248 - [INFO] Global Pointer     : 1
23 2018-Dec-29 12:16:24.766304 - [INFO] Instructions       : 47
24 2018-Dec-29 12:16:24.766361 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-29 12:16:24.766419 - [INFO] Store Instructions : 10
26 2018-Dec-29 12:16:24.766476 - [INFO]  
27 2018-Dec-29 12:16:24.766549 - [INFO]   i32
28 2018-Dec-29 12:16:24.767466 - [DEBUG] Analyzing function: main
29 2018-Dec-29 12:16:24.768103 - [INFO] Reconstruct the class hierarchy.
30 2018-Dec-29 12:16:24.768169 - [INFO] Construct type hierarchy
31 2018-Dec-29 12:16:24.768229 - [DEBUG] Analyse types in module: main.ll
32 2018-Dec-29 12:16:24.768460 - [DEBUG] Reconstruct virtual function table for module: main.ll
33 2018-Dec-29 12:16:24.768529 - [INFO] Reconstruction of class hierarchy completed.
34 2018-Dec-29 12:16:24.768591 - [INFO] Starting CallGraphAnalysisType: OTF
35 2018-Dec-29 12:16:24.768712 - [DEBUG] Walking in function: main
36 2018-Dec-29 12:16:24.768799 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %rc, metadata !23, metadata !24), !dbg !25, !phasar.instruction.id !26, ID: 12
37 2018-Dec-29 12:16:24.769282 - [DEBUG] Found 1 possible target(s)
38 2018-Dec-29 12:16:24.769342 - [DEBUG] Target name: llvm.dbg.declare
39 2018-Dec-29 12:16:24.769429 - [DEBUG] Walking in function: llvm.dbg.declare
40 2018-Dec-29 12:16:24.769492 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
41 2018-Dec-29 12:16:24.769556 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %taint, metadata !27, metadata !24), !dbg !28, !phasar.instruction.id !29, ID: 13
42 2018-Dec-29 12:16:24.769961 - [DEBUG] Found 1 possible target(s)
43 2018-Dec-29 12:16:24.770020 - [DEBUG] Target name: llvm.dbg.declare
44 2018-Dec-29 12:16:24.770094 - [DEBUG] Walking in function: llvm.dbg.declare
45 2018-Dec-29 12:16:24.770156 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
46 2018-Dec-29 12:16:24.770218 - [DEBUG] Found static call-site: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
47 2018-Dec-29 12:16:24.770675 - [DEBUG] Found 1 possible target(s)
48 2018-Dec-29 12:16:24.770734 - [DEBUG] Target name: getenv
49 2018-Dec-29 12:16:24.770815 - [DEBUG] Walking in function: getenv
50 2018-Dec-29 12:16:24.770876 - [DEBUG] Function already visited or only declaration: getenv
51 2018-Dec-29 12:16:24.770941 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22
52 2018-Dec-29 12:16:24.771361 - [DEBUG] Found 1 possible target(s)
53 2018-Dec-29 12:16:24.771443 - [DEBUG] Target name: llvm.dbg.declare
54 2018-Dec-29 12:16:24.771518 - [DEBUG] Walking in function: llvm.dbg.declare
55 2018-Dec-29 12:16:24.771580 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
56 2018-Dec-29 12:16:24.771644 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25
57 2018-Dec-29 12:16:24.772046 - [DEBUG] Found 1 possible target(s)
58 2018-Dec-29 12:16:24.772104 - [DEBUG] Target name: llvm.dbg.declare
59 2018-Dec-29 12:16:24.772179 - [DEBUG] Walking in function: llvm.dbg.declare
60 2018-Dec-29 12:16:24.772241 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
61 2018-Dec-29 12:16:24.772304 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28
62 2018-Dec-29 12:16:24.772704 - [DEBUG] Found 1 possible target(s)
63 2018-Dec-29 12:16:24.772763 - [DEBUG] Target name: llvm.dbg.declare
64 2018-Dec-29 12:16:24.772837 - [DEBUG] Walking in function: llvm.dbg.declare
65 2018-Dec-29 12:16:24.772899 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
66 2018-Dec-29 12:16:24.772963 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31
67 2018-Dec-29 12:16:24.773363 - [DEBUG] Found 1 possible target(s)
68 2018-Dec-29 12:16:24.773422 - [DEBUG] Target name: llvm.dbg.declare
69 2018-Dec-29 12:16:24.773496 - [DEBUG] Walking in function: llvm.dbg.declare
70 2018-Dec-29 12:16:24.773557 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
71 2018-Dec-29 12:16:24.773621 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34
72 2018-Dec-29 12:16:24.774021 - [DEBUG] Found 1 possible target(s)
73 2018-Dec-29 12:16:24.774079 - [DEBUG] Target name: llvm.dbg.declare
74 2018-Dec-29 12:16:24.774154 - [DEBUG] Walking in function: llvm.dbg.declare
75 2018-Dec-29 12:16:24.774215 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
76 2018-Dec-29 12:16:24.774279 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37
77 2018-Dec-29 12:16:24.774679 - [DEBUG] Found 1 possible target(s)
78 2018-Dec-29 12:16:24.774760 - [DEBUG] Target name: llvm.dbg.declare
79 2018-Dec-29 12:16:24.774836 - [DEBUG] Walking in function: llvm.dbg.declare
80 2018-Dec-29 12:16:24.774897 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
81 2018-Dec-29 12:16:24.774962 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %b12, metadata !90, metadata !24), !dbg !91, !phasar.instruction.id !92, ID: 43
82 2018-Dec-29 12:16:24.775363 - [DEBUG] Found 1 possible target(s)
83 2018-Dec-29 12:16:24.775422 - [DEBUG] Target name: llvm.dbg.declare
84 2018-Dec-29 12:16:24.775496 - [DEBUG] Walking in function: llvm.dbg.declare
85 2018-Dec-29 12:16:24.775558 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
86 2018-Dec-29 12:16:24.775620 - [INFO] Call graph has been constructed
87 2018-Dec-29 12:16:24.775680 - [INFO] Performing analysis: plugin
88 2018-Dec-29 12:16:24.775746 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
89 2018-Dec-29 12:16:24.776230 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  %rc = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %taint = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %a = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %b = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %c = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  %a4 = alloca i32, align 4, !phasar.instruction.id !18
Got operands checking instruction (alloca)

  %b6 = alloca i32, align 4, !phasar.instruction.id !19
Got operands checking instruction (alloca)

  %c8 = alloca i32, align 4, !phasar.instruction.id !20
Got operands checking instruction (alloca)

  %b12 = alloca i32, align 4, !phasar.instruction.id !21
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !22
Got store instruction

  call void @llvm.dbg.declare(metadata i32* %rc, metadata !23, metadata !24), !dbg !25, !phasar.instruction.id !26
Got call instruction

  call void @llvm.dbg.declare(metadata i32* %taint, metadata !27, metadata !24), !dbg !28, !phasar.instruction.id !29
Got call instruction

  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31
Got call instruction
Adding call instruction fact
Adding line: 9

  store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32
Got store instruction
Adding store instruction
Adding line: 9
Adding line: 9

  %0 = load i32, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !34
Got load instruction
Adding line: 9
Adding line: 9

  switch i32 %0, label %sw.default11 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !35, !phasar.instruction.id !36
Got switch instruction
Adding line: 9
Adding line: 9

  switch i32 %0, label %sw.default11 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !35, !phasar.instruction.id !36
Got switch instruction
Adding line: 9
Adding line: 9

  switch i32 %0, label %sw.default11 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !35, !phasar.instruction.id !36
Got switch instruction
Adding line: 9
Adding line: 9

  %1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39
Got load instruction
Adding load instruction fact
Adding line: 9
Adding line: 9
Adding line: 12

  switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41
Got switch instruction
Adding switch instruction fact
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12

  switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41
Got switch instruction
Adding switch instruction fact
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12

  switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41
Got switch instruction
Adding switch instruction fact
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12

  %2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12

  call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17

  store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17

  br label %sw.epilog, !dbg !52, !phasar.instruction.id !53
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17

  call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 21

  store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57
Adding line: 21
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 21

  br label %sw.epilog, !dbg !58, !phasar.instruction.id !59
Adding line: 21
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17
Adding line: 21

  call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 25

  store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 25
Adding line: 25

  br label %sw.epilog, !dbg !64, !phasar.instruction.id !65
Adding line: 21
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17
Adding line: 21
Adding line: 25
Adding line: 25

  call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68
Adding line: 21
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17
Adding line: 21
Adding line: 25
Adding line: 25
Adding line: 27

  store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69
Adding line: 21
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17
Adding line: 21
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27

  br label %sw.epilog9, !dbg !70, !phasar.instruction.id !71
Adding line: 21
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17
Adding line: 21
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27

  call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 31

  store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 31
Adding line: 31

  br label %sw.epilog9, !dbg !76, !phasar.instruction.id !77
Adding line: 21
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17
Adding line: 21
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 31
Adding line: 31

  call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 35

  store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 12
Adding line: 35
Adding line: 35

  br label %sw.epilog9, !dbg !82, !phasar.instruction.id !83
Adding line: 21
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 12
Adding line: 17
Adding line: 21
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 31
Adding line: 31
Adding line: 35
Adding line: 35

  br label %sw.epilog13, !dbg !84, !phasar.instruction.id !85
Got branch instruction
Adding line: 21
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 17
Adding line: 21
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 31
Adding line: 31
Adding line: 35
Adding line: 35

  store i32 1, i32* %rc, align 4, !dbg !86, !phasar.instruction.id !87
Got store instruction
Adding line: 9
Adding line: 9

  br label %sw.epilog13, !dbg !88, !phasar.instruction.id !89
Got branch instruction

  call void @llvm.dbg.declare(metadata i32* %b12, metadata !90, metadata !24), !dbg !91, !phasar.instruction.id !92
Got call instruction
Adding line: 9
Adding line: 9

  store i32 2, i32* %b12, align 4, !dbg !91, !phasar.instruction.id !93
Got store instruction
Adding line: 9
Adding line: 9

  br label %sw.epilog13, !dbg !94, !phasar.instruction.id !95
Got branch instruction

  %3 = load i32, i32* %rc, align 4, !dbg !96, !phasar.instruction.id !97
Got load instruction
Adding line: 21
Adding line: 17
Adding line: 9
Adding line: 9
Adding line: 12
Adding line: 14
Adding line: 17
Adding line: 21
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 31
Adding line: 31
Adding line: 35
Adding line: 35

  store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32
Got store instruction
Adding store instruction

  %0 = load i32, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !34
Got load instruction

  switch i32 %0, label %sw.default11 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !35, !phasar.instruction.id !36
Got switch instruction

  switch i32 %0, label %sw.default11 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !35, !phasar.instruction.id !36
Got switch instruction

  switch i32 %0, label %sw.default11 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !35, !phasar.instruction.id !36
Got switch instruction

  call void @llvm.dbg.declare(metadata i32* %b12, metadata !90, metadata !24), !dbg !91, !phasar.instruction.id !92
Got call instruction

  %1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39
Got load instruction
Adding load instruction fact

  store i32 1, i32* %rc, align 4, !dbg !86, !phasar.instruction.id !87
Got store instruction

  switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41
Got switch instruction
Adding switch instruction fact

  switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41
Got switch instruction
Adding switch instruction fact

  switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41
Got switch instruction
Adding switch instruction fact

  call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80

  %2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44

  call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46

  call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62

  call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50

  call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56

  store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51

  br label %sw.epilog, !dbg !52, !phasar.instruction.id !53

  call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68

  store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57

  br label %sw.epilog, !dbg !58, !phasar.instruction.id !59

  call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68

  store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63

  br label %sw.epilog, !dbg !64, !phasar.instruction.id !65

  call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68

  store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69

  br label %sw.epilog9, !dbg !70, !phasar.instruction.id !71

  br label %sw.epilog13, !dbg !84, !phasar.instruction.id !85
Got branch instruction

  store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75

  br label %sw.epilog9, !dbg !76, !phasar.instruction.id !77

  br label %sw.epilog13, !dbg !84, !phasar.instruction.id !85
Got branch instruction

  store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81

  br label %sw.epilog9, !dbg !82, !phasar.instruction.id !83

  br label %sw.epilog13, !dbg !84, !phasar.instruction.id !85
Got branch instruction

  %3 = load i32, i32* %rc, align 4, !dbg !96, !phasar.instruction.id !97
Got load instruction

  br label %sw.epilog13, !dbg !88, !phasar.instruction.id !89
Got branch instruction

  store i32 2, i32* %b12, align 4, !dbg !91, !phasar.instruction.id !93
Got store instruction

  br label %sw.epilog13, !dbg !94, !phasar.instruction.id !95
Got branch instruction

  %rc = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %b12 = alloca i32, align 4, !phasar.instruction.id !21
Got operands checking instruction (alloca)

  %taint = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57

  call void @llvm.dbg.declare(metadata i32* %taint, metadata !27, metadata !24), !dbg !28, !phasar.instruction.id !29
Got call instruction

  store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51

  store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32
Got store instruction
Adding store instruction

  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31
Got call instruction
Adding call instruction fact

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !22
Got store instruction

  %b6 = alloca i32, align 4, !phasar.instruction.id !19
Got operands checking instruction (alloca)

  %a4 = alloca i32, align 4, !phasar.instruction.id !18
Got operands checking instruction (alloca)

  %b = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %c = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i32* %rc, metadata !23, metadata !24), !dbg !25, !phasar.instruction.id !26
Got call instruction

  %c8 = alloca i32, align 4, !phasar.instruction.id !20
Got operands checking instruction (alloca)

  %a = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  %0 = load i32, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !34
Got load instruction

  br label %sw.epilog13, !dbg !94, !phasar.instruction.id !95
Got branch instruction

  %1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39
Got load instruction
Adding load instruction fact

  br label %sw.epilog13, !dbg !88, !phasar.instruction.id !89
Got branch instruction

  switch i32 %0, label %sw.default11 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !35, !phasar.instruction.id !36
Got switch instruction

  br label %sw.epilog9, !dbg !82, !phasar.instruction.id !83

  %2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44

  br label %sw.epilog9, !dbg !76, !phasar.instruction.id !77

  switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41
Got switch instruction
Adding switch instruction fact

  br label %sw.epilog, !dbg !64, !phasar.instruction.id !65

  %3 = load i32, i32* %rc, align 4, !dbg !96, !phasar.instruction.id !97
Got load instruction

  br label %sw.epilog, !dbg !58, !phasar.instruction.id !59

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46

  call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50

  br label %sw.epilog, !dbg !52, !phasar.instruction.id !53

  call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56

  call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62

  store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63

  call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68

  store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69

  br label %sw.epilog9, !dbg !70, !phasar.instruction.id !71

  call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74

  store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75

  call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80

  store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81

  br label %sw.epilog13, !dbg !84, !phasar.instruction.id !85
Got branch instruction

  store i32 1, i32* %rc, align 4, !dbg !86, !phasar.instruction.id !87
Got store instruction

  call void @llvm.dbg.declare(metadata i32* %b12, metadata !90, metadata !24), !dbg !91, !phasar.instruction.id !92
Got call instruction

  store i32 2, i32* %b12, align 4, !dbg !91, !phasar.instruction.id !93
Got store instruction

  ret i32 %3, !dbg !98, !phasar.instruction.id !99worklist size: 52
worklist size: 51
worklist size: 50
worklist size: 49
worklist size: 48
worklist size: 47
worklist size: 46
worklist size: 45
worklist size: 44
worklist size: 43
worklist size: 42
worklist size: 41
worklist size: 40
worklist size: 39
worklist size: 39
worklist size: 39
worklist size: 41
worklist size: 41
worklist size: 41
worklist size: 41
worklist size: 43
worklist size: 43
worklist size: 43
worklist size: 43
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 45
worklist size: 44
worklist size: 44
worklist size: 44
worklist size: 43
worklist size: 42
worklist size: 41
worklist size: 40
worklist size: 39
worklist size: 38
worklist size: 37
worklist size: 36
worklist size: 35
worklist size: 34
worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%b12 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10
Facts:
	EMPTY


Instruction:
%taint = alloca i32, align 4, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25


Instruction:
call void @llvm.dbg.declare(metadata i32* %taint, metadata !27, metadata !24), !dbg !28, !phasar.instruction.id !29, ID: 13
Facts:
	EMPTY


Instruction:
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22


Instruction:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
Facts:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


Instruction:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !22, ID: 11
Facts:
	EMPTY


Instruction:
%b6 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8
Facts:
	EMPTY


Instruction:
%a4 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7
Facts:
	EMPTY


Instruction:
%b = alloca i32, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%c = alloca i32, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %rc, metadata !23, metadata !24), !dbg !25, !phasar.instruction.id !26, ID: 12
Facts:
	EMPTY


Instruction:
%c8 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9
Facts:
	EMPTY


Instruction:
%a = alloca i32, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
%0 = load i32, i32* %rc, align 4, !dbg !33, !phasar.instruction.id !34, ID: 16
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


Instruction:
br label %sw.epilog13, !dbg !94, !phasar.instruction.id !95, ID: 45
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


Instruction:
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


Instruction:
br label %sw.epilog13, !dbg !88, !phasar.instruction.id !89, ID: 42
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


Instruction:
switch i32 %0, label %sw.default11 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !35, !phasar.instruction.id !36, ID: 17
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


Instruction:
br label %sw.epilog9, !dbg !82, !phasar.instruction.id !83, ID: 39
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37
store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38


Instruction:
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19


Instruction:
br label %sw.epilog9, !dbg !76, !phasar.instruction.id !77, ID: 36
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34
store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35


Instruction:
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18


Instruction:
br label %sw.epilog, !dbg !64, !phasar.instruction.id !65, ID: 30
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29


Instruction:
%3 = load i32, i32* %rc, align 4, !dbg !96, !phasar.instruction.id !97, ID: 46
Facts:
store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22
call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25
call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31
store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32
call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34
store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35
call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37
store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38


Instruction:
br label %sw.epilog, !dbg !58, !phasar.instruction.id !59, ID: 27
Facts:
store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25


Instruction:
switch i32 %2, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !45, !phasar.instruction.id !46, ID: 21
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19


Instruction:
call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19


Instruction:
br label %sw.epilog, !dbg !52, !phasar.instruction.id !53, ID: 24
Facts:
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22


Instruction:
call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19


Instruction:
call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19


Instruction:
store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28


Instruction:
call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31
Facts:
store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22
call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25
call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29


Instruction:
store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32
Facts:
store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22
call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25
call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31


Instruction:
br label %sw.epilog9, !dbg !70, !phasar.instruction.id !71, ID: 33
Facts:
store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22
call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25
call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31
store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32


Instruction:
call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19


Instruction:
store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34


Instruction:
call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19


Instruction:
store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37


Instruction:
br label %sw.epilog13, !dbg !84, !phasar.instruction.id !85, ID: 40
Facts:
store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
switch i32 %1, label %sw.default7 [
    i32 0, label %sw.bb1
    i32 1, label %sw.bb5
  ], !dbg !40, !phasar.instruction.id !41, ID: 19
call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22
call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25
call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31
store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32
call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction90 2018-Dec-29 12:16:24.910739 - [INFO] Write results to file
91 2018-Dec-29 12:16:24.910937 - [INFO] Shutdown llvm and the analysis framework.

.id !74, ID: 34
store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35
call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37
store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38


Instruction:
store i32 1, i32* %rc, align 4, !dbg !86, !phasar.instruction.id !87, ID: 41
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


Instruction:
call void @llvm.dbg.declare(metadata i32* %b12, metadata !90, metadata !24), !dbg !91, !phasar.instruction.id !92, ID: 43
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


Instruction:
store i32 2, i32* %b12, align 4, !dbg !91, !phasar.instruction.id !93, ID: 44
Facts:
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14


Instruction:
ret i32 %3, !dbg !98, !phasar.instruction.id !99, ID: 47
Facts:
store i32 2, i32* %b, align 4, !dbg !55, !phasar.instruction.id !57, ID: 26
store i32 1, i32* %a, align 4, !dbg !49, !phasar.instruction.id !51, ID: 23
store i32 %call, i32* %taint, align 4, !dbg !28, !phasar.instruction.id !32, ID: 15
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !30, !phasar.instruction.id !31, ID: 14
%1 = load i32, i32* %taint, align 4, !dbg !37, !phasar.instruction.id !39, ID: 18
%2 = load i32, i32* %rc, align 4, !dbg !42, !phasar.instruction.id !44, ID: 20
call void @llvm.dbg.declare(metadata i32* %a, metadata !47, metadata !24), !dbg !49, !phasar.instruction.id !50, ID: 22
call void @llvm.dbg.declare(metadata i32* %b, metadata !54, metadata !24), !dbg !55, !phasar.instruction.id !56, ID: 25
call void @llvm.dbg.declare(metadata i32* %c, metadata !60, metadata !24), !dbg !61, !phasar.instruction.id !62, ID: 28
store i32 3, i32* %c, align 4, !dbg !61, !phasar.instruction.id !63, ID: 29
call void @llvm.dbg.declare(metadata i32* %a4, metadata !66, metadata !24), !dbg !67, !phasar.instruction.id !68, ID: 31
store i32 1, i32* %a4, align 4, !dbg !67, !phasar.instruction.id !69, ID: 32
call void @llvm.dbg.declare(metadata i32* %b6, metadata !72, metadata !24), !dbg !73, !phasar.instruction.id !74, ID: 34
store i32 2, i32* %b6, align 4, !dbg !73, !phasar.instruction.id !75, ID: 35
call void @llvm.dbg.declare(metadata i32* %c8, metadata !78, metadata !24), !dbg !79, !phasar.instruction.id !80, ID: 37
store i32 3, i32* %c8, align 4, !dbg !79, !phasar.instruction.id !81, ID: 38


