0 2019-Jan-05 14:31:38.702201 - [DEBUG] Set-up the command-line parameters
1 2019-Jan-05 14:31:38.702603 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2019-Jan-05 14:31:38.702947 - [INFO] No configuration file is used.
3 2019-Jan-05 14:31:38.703023 - [INFO] Program options have been successfully parsed.
4 2019-Jan-05 14:31:38.703120 - [INFO] Check program options for logical errors.
5 2019-Jan-05 14:31:38.703209 - [INFO] Set-up IR database.
6 2019-Jan-05 14:31:38.716707 - [INFO] Constructed the analysis controller.
7 2019-Jan-05 14:31:38.716818 - [INFO] Found the following IR files for this project: 
8 2019-Jan-05 14:31:38.716879 - [INFO] 	main.ll
9 2019-Jan-05 14:31:38.716937 - [INFO] Check for chosen entry points.
10 2019-Jan-05 14:31:38.716998 - [INFO] link all llvm modules into a single module for WPA ...

11 2019-Jan-05 14:31:38.717056 - [INFO] link all llvm modules into a single module for WPA ended

12 2019-Jan-05 14:31:38.717116 - [INFO] Preprocess module: main.ll
13 2019-Jan-05 14:31:38.717472 - [INFO] Running GeneralStatisticsPass
14 2019-Jan-05 14:31:38.717703 - [INFO] Running ValueAnnotationPass
15 2019-Jan-05 14:31:38.718857 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2019-Jan-05 14:31:38.718920 - [INFO] Allocated Types    : 1
17 2019-Jan-05 14:31:38.718984 - [INFO] Allocation Sites   : 15
18 2019-Jan-05 14:31:38.719042 - [INFO] Basic Blocks       : 31
19 2019-Jan-05 14:31:38.719099 - [INFO] Calls Sites        : 19
20 2019-Jan-05 14:31:38.719156 - [INFO] Functions          : 5
21 2019-Jan-05 14:31:38.719213 - [INFO] Globals            : 1
22 2019-Jan-05 14:31:38.719271 - [INFO] Global Pointer     : 1
23 2019-Jan-05 14:31:38.719328 - [INFO] Instructions       : 98
24 2019-Jan-05 14:31:38.719385 - [INFO] Memory Intrinsics  : 0
25 2019-Jan-05 14:31:38.719442 - [INFO] Store Instructions : 17
26 2019-Jan-05 14:31:38.719499 - [INFO]  
27 2019-Jan-05 14:31:38.719579 - [INFO]   i32
28 2019-Jan-05 14:31:38.721193 - [DEBUG] Analyzing function: main
29 2019-Jan-05 14:31:38.722298 - [INFO] Reconstruct the class hierarchy.
30 2019-Jan-05 14:31:38.722363 - [INFO] Construct type hierarchy
31 2019-Jan-05 14:31:38.722423 - [DEBUG] Analyse types in module: main.ll
32 2019-Jan-05 14:31:38.722759 - [DEBUG] Reconstruct virtual function table for module: main.ll
33 2019-Jan-05 14:31:38.722828 - [INFO] Reconstruction of class hierarchy completed.
34 2019-Jan-05 14:31:38.722890 - [INFO] Starting CallGraphAnalysisType: OTF
35 2019-Jan-05 14:31:38.723019 - [DEBUG] Walking in function: main
36 2019-Jan-05 14:31:38.723106 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %rc, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31, ID: 17
37 2019-Jan-05 14:31:38.723835 - [DEBUG] Found 1 possible target(s)
38 2019-Jan-05 14:31:38.723894 - [DEBUG] Target name: llvm.dbg.declare
39 2019-Jan-05 14:31:38.723999 - [DEBUG] Walking in function: llvm.dbg.declare
40 2019-Jan-05 14:31:38.724063 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
41 2019-Jan-05 14:31:38.724126 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %untainted, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34, ID: 18
42 2019-Jan-05 14:31:38.724792 - [DEBUG] Found 1 possible target(s)
43 2019-Jan-05 14:31:38.724851 - [DEBUG] Target name: llvm.dbg.declare
44 2019-Jan-05 14:31:38.724925 - [DEBUG] Walking in function: llvm.dbg.declare
45 2019-Jan-05 14:31:38.724988 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
46 2019-Jan-05 14:31:38.725051 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %taint, metadata !35, metadata !29), !dbg !36, !phasar.instruction.id !37, ID: 19
47 2019-Jan-05 14:31:38.725713 - [DEBUG] Found 1 possible target(s)
48 2019-Jan-05 14:31:38.725772 - [DEBUG] Target name: llvm.dbg.declare
49 2019-Jan-05 14:31:38.725846 - [DEBUG] Walking in function: llvm.dbg.declare
50 2019-Jan-05 14:31:38.725908 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
51 2019-Jan-05 14:31:38.725972 - [DEBUG] Found static call-site: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
52 2019-Jan-05 14:31:38.726694 - [DEBUG] Found 1 possible target(s)
53 2019-Jan-05 14:31:38.726753 - [DEBUG] Target name: getenv
54 2019-Jan-05 14:31:38.726834 - [DEBUG] Walking in function: getenv
55 2019-Jan-05 14:31:38.726896 - [DEBUG] Function already visited or only declaration: getenv
56 2019-Jan-05 14:31:38.726962 - [DEBUG] Found static call-site: %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
57 2019-Jan-05 14:31:38.727633 - [DEBUG] Found 1 possible target(s)
58 2019-Jan-05 14:31:38.727691 - [DEBUG] Target name: bar
59 2019-Jan-05 14:31:38.727768 - [DEBUG] Walking in function: bar
60 2019-Jan-05 14:31:38.727830 - [DEBUG] Function already visited or only declaration: bar
61 2019-Jan-05 14:31:38.727894 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
62 2019-Jan-05 14:31:38.728554 - [DEBUG] Found 1 possible target(s)
63 2019-Jan-05 14:31:38.728613 - [DEBUG] Target name: llvm.dbg.declare
64 2019-Jan-05 14:31:38.728687 - [DEBUG] Walking in function: llvm.dbg.declare
65 2019-Jan-05 14:31:38.728749 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
66 2019-Jan-05 14:31:38.728813 - [DEBUG] Found static call-site: %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
67 2019-Jan-05 14:31:38.729467 - [DEBUG] Found 1 possible target(s)
68 2019-Jan-05 14:31:38.729526 - [DEBUG] Target name: foo
69 2019-Jan-05 14:31:38.729606 - [DEBUG] Walking in function: foo
70 2019-Jan-05 14:31:38.729668 - [DEBUG] Function already visited or only declaration: foo
71 2019-Jan-05 14:31:38.729733 - [DEBUG] Found static call-site: %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
72 2019-Jan-05 14:31:38.730386 - [DEBUG] Found 1 possible target(s)
73 2019-Jan-05 14:31:38.730444 - [DEBUG] Target name: bar
74 2019-Jan-05 14:31:38.730518 - [DEBUG] Walking in function: bar
75 2019-Jan-05 14:31:38.730580 - [DEBUG] Function already visited or only declaration: bar
76 2019-Jan-05 14:31:38.730664 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
77 2019-Jan-05 14:31:38.731324 - [DEBUG] Found 1 possible target(s)
78 2019-Jan-05 14:31:38.731383 - [DEBUG] Target name: llvm.dbg.declare
79 2019-Jan-05 14:31:38.731457 - [DEBUG] Walking in function: llvm.dbg.declare
80 2019-Jan-05 14:31:38.731520 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
81 2019-Jan-05 14:31:38.731583 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
82 2019-Jan-05 14:31:38.732243 - [DEBUG] Found 1 possible target(s)
83 2019-Jan-05 14:31:38.732302 - [DEBUG] Target name: llvm.dbg.declare
84 2019-Jan-05 14:31:38.732376 - [DEBUG] Walking in function: llvm.dbg.declare
85 2019-Jan-05 14:31:38.732439 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
86 2019-Jan-05 14:31:38.732504 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
87 2019-Jan-05 14:31:38.733162 - [DEBUG] Found 1 possible target(s)
88 2019-Jan-05 14:31:38.733221 - [DEBUG] Target name: llvm.dbg.declare
89 2019-Jan-05 14:31:38.733295 - [DEBUG] Walking in function: llvm.dbg.declare
90 2019-Jan-05 14:31:38.733357 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
91 2019-Jan-05 14:31:38.733421 - [DEBUG] Found static call-site: %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
92 2019-Jan-05 14:31:38.734091 - [DEBUG] Found 1 possible target(s)
93 2019-Jan-05 14:31:38.734149 - [DEBUG] Target name: foo
94 2019-Jan-05 14:31:38.734223 - [DEBUG] Walking in function: foo
95 2019-Jan-05 14:31:38.734294 - [DEBUG] Function already visited or only declaration: foo
96 2019-Jan-05 14:31:38.734359 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
97 2019-Jan-05 14:31:38.735020 - [DEBUG] Found 1 possible target(s)
98 2019-Jan-05 14:31:38.735078 - [DEBUG] Target name: llvm.dbg.declare
99 2019-Jan-05 14:31:38.735153 - [DEBUG] Walking in function: llvm.dbg.declare
100 2019-Jan-05 14:31:38.735215 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
101 2019-Jan-05 14:31:38.735279 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
102 2019-Jan-05 14:31:38.735939 - [DEBUG] Found 1 possible target(s)
103 2019-Jan-05 14:31:38.735998 - [DEBUG] Target name: llvm.dbg.declare
104 2019-Jan-05 14:31:38.736072 - [DEBUG] Walking in function: llvm.dbg.declare
105 2019-Jan-05 14:31:38.736134 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
106 2019-Jan-05 14:31:38.736199 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
107 2019-Jan-05 14:31:38.736858 - [DEBUG] Found 1 possible target(s)
108 2019-Jan-05 14:31:38.736916 - [DEBUG] Target name: llvm.dbg.declare
109 2019-Jan-05 14:31:38.736991 - [DEBUG] Walking in function: llvm.dbg.declare
110 2019-Jan-05 14:31:38.737053 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
111 2019-Jan-05 14:31:38.737117 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
112 2019-Jan-05 14:31:38.737793 - [DEBUG] Found 1 possible target(s)
113 2019-Jan-05 14:31:38.737852 - [DEBUG] Target name: llvm.dbg.declare
114 2019-Jan-05 14:31:38.737926 - [DEBUG] Walking in function: llvm.dbg.declare
115 2019-Jan-05 14:31:38.737989 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
116 2019-Jan-05 14:31:38.738053 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163, ID: 80
117 2019-Jan-05 14:31:38.738712 - [DEBUG] Found 1 possible target(s)
118 2019-Jan-05 14:31:38.738771 - [DEBUG] Target name: llvm.dbg.declare
119 2019-Jan-05 14:31:38.738845 - [DEBUG] Walking in function: llvm.dbg.declare
120 2019-Jan-05 14:31:38.738907 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
121 2019-Jan-05 14:31:38.738971 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169, ID: 83
122 2019-Jan-05 14:31:38.739630 - [DEBUG] Found 1 possible target(s)
123 2019-Jan-05 14:31:38.739689 - [DEBUG] Target name: llvm.dbg.declare
124 2019-Jan-05 14:31:38.739763 - [DEBUG] Walking in function: llvm.dbg.declare
125 2019-Jan-05 14:31:38.739826 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
126 2019-Jan-05 14:31:38.739892 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
127 2019-Jan-05 14:31:38.740551 - [DEBUG] Found 1 possible target(s)
128 2019-Jan-05 14:31:38.740623 - [DEBUG] Target name: llvm.dbg.declare
129 2019-Jan-05 14:31:38.740698 - [DEBUG] Walking in function: llvm.dbg.declare
130 2019-Jan-05 14:31:38.740760 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
131 2019-Jan-05 14:31:38.740823 - [INFO] Call graph has been constructed
132 2019-Jan-05 14:31:38.740884 - [INFO] Performing analysis: plugin
133 2019-Jan-05 14:31:38.740950 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
134 2019-Jan-05 14:31:38.741464 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraEnvironmentVariableTracing

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %rc = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %untainted = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %taint = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a12 = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a14 = alloca i32, align 4, !phasar.instruction.id !18
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a19 = alloca i32, align 4, !phasar.instruction.id !19
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a23 = alloca i32, align 4, !phasar.instruction.id !20
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a25 = alloca i32, align 4, !phasar.instruction.id !21
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a28 = alloca i32, align 4, !phasar.instruction.id !22
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a29 = alloca i32, align 4, !phasar.instruction.id !23
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %u = alloca i32, align 4, !phasar.instruction.id !24
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a33 = alloca i32, align 4, !phasar.instruction.id !25
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  %a39 = alloca i32, align 4, !phasar.instruction.id !26
Got operands checking instruction (alloca)
Dumping facts
=============
=============


  store i32 0, i32* %retval, align 4, !phasar.instruction.id !27
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i32* %rc, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31
Got call instruction
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i32* %untainted, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34
Got call instruction
Dumping facts
=============
=============


  call void @llvm.dbg.declare(metadata i32* %taint, metadata !35, metadata !29), !dbg !36, !phasar.instruction.id !37
Got call instruction
Dumping facts
=============
=============


  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
Got call instruction
Adding call instruction fact
Dumping facts
=============
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============

Added line number: 10

  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============

Added line number: 10
Added line number: 10

  %0 = load i32, i32* %rc, align 4, !dbg !41, !phasar.instruction.id !43
Got load instruction
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============

Added line number: 10
Added line number: 10

  %tobool = icmp ne i32 %0, 0, !dbg !41, !phasar.instruction.id !44
Got operands checking instruction (icmp)
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============

Added line number: 10
Added line number: 10

  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
Got branch instruction
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============

Added line number: 10
Added line number: 10

  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
Got branch instruction
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============

Added line number: 10
Added line number: 10

  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
=============

Added line number: 10
Added line number: 10
Added line number: 13

  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
Got operands checking instruction (icmp)
Adding fact
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
=============

Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13

  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
Got branch instruction
Adding conditional branch instruction fact
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============

Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 13

  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
Got branch instruction
Adding conditional branch instruction fact
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============

Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 13

  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============

Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============

Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============

Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13

  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13

  br label %sw.bb, !dbg !62, !phasar.instruction.id !63
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13

  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19

  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19

  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19

  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22

  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22

  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22

  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22

  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 23

  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 23

  br label %if.end15, !dbg !80, !phasar.instruction.id !81
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 23

  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24

  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24

  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24

  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24

  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24

  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24

  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24

  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24

  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25

  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25

  br label %if.end, !dbg !98, !phasar.instruction.id !99
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25

  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 27

  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 27
Added line number: 27

  br label %if.end, !phasar.instruction.id !105
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
=============

Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27

  br label %if.end15, !phasar.instruction.id !106
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27

  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29

  br label %sw.bb16, !dbg !109, !phasar.instruction.id !110
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29

  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29

  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32

  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32

  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32

  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33

  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33

  br label %if.end27, !dbg !122, !phasar.instruction.id !123
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33

  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34

  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34

  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34

  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34

  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34

  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34

  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============


  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============


  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34
Added line number: 35

  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35

  br label %if.end26, !dbg !138, !phasar.instruction.id !139
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35

  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34
Added line number: 37

  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34
Added line number: 37
Added line number: 37

  br label %if.end26, !phasar.instruction.id !145
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37

  br label %if.end27, !phasar.instruction.id !146
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37

  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39

  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39

  br label %sw.epilog, !dbg !151, !phasar.instruction.id !152
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39

  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42

  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  br label %sw.epilog30, !dbg !157, !phasar.instruction.id !158
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  br label %if.end31, !dbg !159, !phasar.instruction.id !160
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 13
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163
Got call instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  store i32 0, i32* %u, align 4, !dbg !162, !phasar.instruction.id !164
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  br label %if.end32, !dbg !165, !phasar.instruction.id !166
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169
Got call instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  store i32 0, i32* %a33, align 4, !dbg !168, !phasar.instruction.id !170
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  %5 = load i32, i32* %untainted, align 4, !dbg !171, !phasar.instruction.id !173
Got load instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  %tobool34 = icmp ne i32 %5, 0, !dbg !171, !phasar.instruction.id !174
Got operands checking instruction (icmp)
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  store i32 1, i32* %a33, align 4, !dbg !177, !phasar.instruction.id !179
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  br label %if.end37, !dbg !180, !phasar.instruction.id !181
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  store i32 2, i32* %a33, align 4, !dbg !182, !phasar.instruction.id !184
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42

  br label %if.end37, !phasar.instruction.id !185
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42
Added line number: 56

  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
Got switch instruction
Adding switch instruction fact
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42
Added line number: 56
Added line number: 56

  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
Got switch instruction
Adding switch instruction fact
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42
Added line number: 56
Added line number: 56

  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42
Added line number: 56
Added line number: 56
Added line number: 59

  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42
Added line number: 56
Added line number: 56
Added line number: 59
Added line number: 59

  br label %sw.epilog40, !dbg !195, !phasar.instruction.id !196
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42
Added line number: 56
Added line number: 56
Added line number: 59
Added line number: 59

  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
=============

Added line number: 23
Added line number: 17
Added line number: 10
Added line number: 10
Added line number: 13
Added line number: 13
Added line number: 14
Added line number: 19
Added line number: 32
Added line number: 22
Added line number: 22
Added line number: 23
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 24
Added line number: 25
Added line number: 25
Added line number: 27
Added line number: 27
Added line number: 29
Added line number: 32
Added line number: 33
Added line number: 33
Added line number: 34
Added line number: 34
Added line number: 35
Added line number: 35
Added line number: 37
Added line number: 37
Added line number: 39
Added line number: 39
Added line number: 42
Added line number: 42
Added line number: 56
Added line number: 63
Added line number: 59
Added line number: 59

  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============


  %0 = load i32, i32* %rc, align 4, !dbg !41, !phasar.instruction.id !43
Got load instruction
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============


  %tobool = icmp ne i32 %0, 0, !dbg !41, !phasar.instruction.id !44
Got operands checking instruction (icmp)
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============


  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
Got branch instruction
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============


  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
Got branch instruction
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
=============


  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
=============


  call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169
Got call instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
Got operands checking instruction (icmp)
Adding fact
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
=============


  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
Got branch instruction
Adding conditional branch instruction fact
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============


  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
Got branch instruction
Adding conditional branch instruction fact
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============


  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============


  call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163
Got call instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============


  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58
Dumping facts
=============
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============


  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============


  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
=============


  br label %sw.bb, !dbg !62, !phasar.instruction.id !63
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
=============


  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
=============


  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
=============


  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
=============


  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
=============


  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
=============


  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
=============


  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
=============


  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
=============


  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
=============


  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
=============


  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
=============


  br label %if.end15, !dbg !80, !phasar.instruction.id !81
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
=============


  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
=============


  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
=============


  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
=============


  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
=============


  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
=============


  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
=============


  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
=============


  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
=============


  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
=============


  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
=============


  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
=============


  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
=============


  br label %if.end, !dbg !98, !phasar.instruction.id !99
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
=============


  br label %if.end15, !phasar.instruction.id !106
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
=============


  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
=============


  br label %if.end, !phasar.instruction.id !105
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
=============


  br label %if.end15, !phasar.instruction.id !106
Dumping facts
=============
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
=============


  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
=============


  br label %sw.bb16, !dbg !109, !phasar.instruction.id !110
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
=============


  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
=============


  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
=============


  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
=============


  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
=============


  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
=============


  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
=============


  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
=============


  br label %if.end27, !dbg !122, !phasar.instruction.id !123
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
=============


  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
=============


  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============


  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============


  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============


  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============


  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============


  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============


  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
=============


  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
=============


  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
=============


  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
=============


  br label %if.end26, !dbg !138, !phasar.instruction.id !139
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
=============


  br label %if.end27, !phasar.instruction.id !146
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
=============


  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
=============


  br label %if.end26, !phasar.instruction.id !145
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
=============


  br label %if.end27, !phasar.instruction.id !146
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
=============


  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
=============


  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
=============


  br label %sw.epilog, !dbg !151, !phasar.instruction.id !152
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
=============


  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
=============


  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  br label %sw.epilog30, !dbg !157, !phasar.instruction.id !158
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  br label %if.end31, !dbg !159, !phasar.instruction.id !160
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163
Got call instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  store i32 0, i32* %u, align 4, !dbg !162, !phasar.instruction.id !164
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  br label %if.end32, !dbg !165, !phasar.instruction.id !166
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169
Got call instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  store i32 0, i32* %a33, align 4, !dbg !168, !phasar.instruction.id !170
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  %5 = load i32, i32* %untainted, align 4, !dbg !171, !phasar.instruction.id !173
Got load instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  %tobool34 = icmp ne i32 %5, 0, !dbg !171, !phasar.instruction.id !174
Got operands checking instruction (icmp)
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  store i32 1, i32* %a33, align 4, !dbg !177, !phasar.instruction.id !179
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  store i32 2, i32* %a33, align 4, !dbg !182, !phasar.instruction.id !184
Got store instruction
Removed 0 memory locations from facts
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  br label %if.end37, !dbg !180, !phasar.instruction.id !181
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
=============


  br label %if.end37, !phasar.instruction.id !185
Got branch instruction
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
=============


  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
Got switch instruction
Adding switch instruction fact
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
=============


  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
Got switch instruction
Adding switch instruction fact
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
=============


  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
=============


  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
=============


  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
=============


  br label %sw.epilog40, !dbg !195, !phasar.instruction.id !196
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
=============


  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
Got load instruction
Adding load instruction fact
Dumping facts
=============
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
=============


  %rc = alloca i32, align 4, !phasar.instruction.id !13
Got operands checking instruction (alloca)

  %a28 = alloca i32, align 4, !phasar.instruction.id !22
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i32* %rc, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31
Got call instruction

  %a25 = alloca i32, align 4, !phasar.instruction.id !21
Got operands checking instruction (alloca)

  %untainted = alloca i32, align 4, !phasar.instruction.id !14
Got operands checking instruction (alloca)

  %retval = alloca i32, align 4, !phasar.instruction.id !12
Got operands checking instruction (alloca)

  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79

  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61

  %a39 = alloca i32, align 4, !phasar.instruction.id !26
Got operands checking instruction (alloca)

  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
Got store instruction
Removed 0 memory locations from facts
Adding memory location (store)

  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
Got call instruction
Adding call instruction fact

  %a29 = alloca i32, align 4, !phasar.instruction.id !23
Got operands checking instruction (alloca)

  %a33 = alloca i32, align 4, !phasar.instruction.id !25
Got operands checking instruction (alloca)

  store i32 0, i32* %retval, align 4, !phasar.instruction.id !27
Got store instruction
Removed 0 memory locations from facts

  %u = alloca i32, align 4, !phasar.instruction.id !24
Got operands checking instruction (alloca)

  %a19 = alloca i32, align 4, !phasar.instruction.id !19
Got operands checking instruction (alloca)

  %a14 = alloca i32, align 4, !phasar.instruction.id !18
Got operands checking instruction (alloca)

  %a = alloca i32, align 4, !phasar.instruction.id !16
Got operands checking instruction (alloca)

  %a12 = alloca i32, align 4, !phasar.instruction.id !17
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i32* %untainted, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34
Got call instruction

  %a23 = alloca i32, align 4, !phasar.instruction.id !20
Got operands checking instruction (alloca)

  %taint = alloca i32, align 4, !phasar.instruction.id !15
Got operands checking instruction (alloca)

  call void @llvm.dbg.declare(metadata i32* %taint, metadata !35, metadata !29), !dbg !36, !phasar.instruction.id !37
Got call instruction

  %0 = load i32, i32* %rc, align 4, !dbg !41, !phasar.instruction.id !43
Got load instruction

  %tobool = icmp ne i32 %0, 0, !dbg !41, !phasar.instruction.id !44
Got operands checking instruction (icmp)

  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
Got load instruction
Adding load instruction fact

  %5 = load i32, i32* %untainted, align 4, !dbg !171, !phasar.instruction.id !173
Got load instruction

  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
Got branch instruction

  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
Got operands checking instruction (icmp)
Adding fact

  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56

  br label %if.end32, !dbg !165, !phasar.instruction.id !166
Got branch instruction

  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
Got branch instruction
Adding conditional branch instruction fact

  br label %sw.bb, !dbg !62, !phasar.instruction.id !63

  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65

  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58

  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113

  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67

  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71

  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72

  br label %sw.bb16, !dbg !109, !phasar.instruction.id !110

  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74

  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78

  br label %if.end15, !dbg !80, !phasar.instruction.id !81

  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84

  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85

  br label %if.end15, !phasar.instruction.id !106

  br label %if.end, !phasar.instruction.id !105

  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87

  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89

  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90

  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92

  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96

  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97

  br label %if.end, !dbg !98, !phasar.instruction.id !99

  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103

  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104

  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108

  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114

  br label %if.end31, !dbg !159, !phasar.instruction.id !160

  br label %if.end27, !phasar.instruction.id !146

  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116

  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120

  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121

  br label %if.end27, !dbg !122, !phasar.instruction.id !123

  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126

  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128

  br label %if.end26, !dbg !138, !phasar.instruction.id !139

  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130

  br label %if.end26, !phasar.instruction.id !145

  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131

  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132

  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136

  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137

  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143

  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144

  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149

  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150

  br label %sw.epilog, !dbg !151, !phasar.instruction.id !152

  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155

  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156

  br label %sw.epilog30, !dbg !157, !phasar.instruction.id !158

  call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163
Got call instruction

  store i32 0, i32* %u, align 4, !dbg !162, !phasar.instruction.id !164
Got store instruction
Removed 0 memory locations from facts

  call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169
Got call instruction

  store i32 0, i32* %a33, align 4, !dbg !168, !phasar.instruction.id !170
Got store instruction
Removed 0 memory locations from facts

  %tobool34 = icmp ne i32 %5, 0, !dbg !171, !phasar.instruction.id !174
Got operands checking instruction (icmp)

  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
Got load instruction
Adding load instruction fact

  br label %if.end37, !phasar.instruction.id !185
Got branch instruction

  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
Got branch instruction

  store i32 1, i32* %a33, align 4, !dbg !177, !phasar.instruction.id !179
Got store instruction
Removed 0 memory locations from facts

  br label %if.end37, !dbg !180, !phasar.instruction.id !181
Got branch instruction

  store i32 2, i32* %a33, align 4, !dbg !182, !phasar.instruction.id !184
Got store instruction
Removed 0 memory locations from facts

  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
Got load instruction
Adding load instruction fact

  br label %sw.epilog40, !dbg !195, !phasar.instruction.id !196

  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
Got switch instruction
Adding switch instruction fact

  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193

  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194

  ret i32 %7, !dbg !199, !phasar.instruction.id !200worklist size: 110
worklist size: 109
worklist size: 108
worklist size: 107
worklist size: 106
worklist size: 105
worklist size: 104
worklist size: 103
worklist size: 102
worklist size: 101
worklist size: 100
worklist size: 99
worklist size: 98
worklist size: 97
worklist size: 96
worklist size: 95
worklist size: 94
worklist size: 93
worklist size: 92
worklist size: 91
worklist size: 91
worklist size: 91
worklist size: 91
worklist size: 92
worklist size: 92
worklist size: 92
worklist size: 92
worklist size: 93
worklist size: 93
worklist size: 93
worklist size: 94
worklist size: 94
worklist size: 94
worklist size: 94
worklist size: 94
worklist size: 95
worklist size: 95
worklist size: 95
worklist size: 95
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 97
worklist size: 97
worklist size: 97
worklist size: 97
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 100
worklist size: 101
worklist size: 102
worklist size: 102
worklist size: 102
worklist size: 101
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 100
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 100
worklist size: 99
worklist size: 98
worklist size: 97
worklist size: 96
worklist size: 95
worklist size: 94
worklist size: 93
worklist size: 92
worklist size: 91
worklist size: 90
worklist size: 89
worklist size: 88
worklist size: 87
worklist size: 86
worklist size: 85
worklist size: 84
worklist size: 83
worklist size: 82
worklist size: 81
worklist size: 80
worklist size: 79
worklist size: 78
worklist size: 77
worklist size: 76
worklist size: 75
worklist size: 74
worklist size: 73
worklist size: 72
worklist size: 71
worklist size: 70
worklist size: 69
worklist size: 68
worklist size: 67
worklist size: 66
worklist size: 65
worklist size: 64
worklist size: 63
worklist size: 62
worklist size: 61
worklist size: 60
worklist size: 59
worklist size: 58
worklist size: 57
worklist size: 56
worklist size: 55
worklist size: 54
worklist size: 53
worklist size: 52
worklist size: 51
worklist size: 50
worklist size: 49
worklist size: 48
worklist size: 47
worklist size: 46
worklist size: 45
worklist size: 44
worklist size: 43
worklist size: 42
worklist size: 41
worklist size: 40
worklist size: 39
worklist size: 38
worklist size: 37
worklist size: 36
worklist size: 35
worklist size: 34
worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%a28 = alloca i32, align 4, !phasar.instruction.id !22, ID: 11
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %rc, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31, ID: 17
Facts:
	EMPTY


Instruction:
%a25 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10
Facts:
	EMPTY


Instruction:
%untainted = alloca i32, align 4, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37


Instruction:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
%a39 = alloca i32, align 4, !phasar.instruction.id !26, ID: 15
Facts:
	EMPTY


Instruction:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
Facts:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
Facts:
	EMPTY


Instruction:
%a29 = alloca i32, align 4, !phasar.instruction.id !23, ID: 12
Facts:
	EMPTY


Instruction:
%a33 = alloca i32, align 4, !phasar.instruction.id !25, ID: 14
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !27, ID: 16
Facts:
	EMPTY


Instruction:
%u = alloca i32, align 4, !phasar.instruction.id !24, ID: 13
Facts:
	EMPTY


Instruction:
%a19 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8
Facts:
	EMPTY


Instruction:
%a14 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7
Facts:
	EMPTY


Instruction:
%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%a12 = alloca i32, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %untainted, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34, ID: 18
Facts:
	EMPTY


Instruction:
%a23 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9
Facts:
	EMPTY


Instruction:
%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %taint, metadata !35, metadata !29), !dbg !36, !phasar.instruction.id !37, ID: 19
Facts:
	EMPTY


Instruction:
%0 = load i32, i32* %rc, align 4, !dbg !41, !phasar.instruction.id !43, ID: 22
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%tobool = icmp ne i32 %0, 0, !dbg !41, !phasar.instruction.id !44, ID: 23
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%5 = load i32, i32* %untainted, align 4, !dbg !171, !phasar.instruction.id !173, ID: 85
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46, ID: 24
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25


Instruction:
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
br label %if.end32, !dbg !165, !phasar.instruction.id !166, ID: 82
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26


Instruction:
br label %sw.bb, !dbg !62, !phasar.instruction.id !63, ID: 31
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58, ID: 29
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53


Instruction:
switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67, ID: 33
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32


Instruction:
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32


Instruction:
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34


Instruction:
br label %sw.bb16, !dbg !109, !phasar.instruction.id !110, ID: 54
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53


Instruction:
br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74, ID: 36
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35


Instruction:
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35


Instruction:
br label %if.end15, !dbg !80, !phasar.instruction.id !81, ID: 39
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37


Instruction:
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35


Instruction:
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40


Instruction:
br label %if.end15, !phasar.instruction.id !106, ID: 52
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50


Instruction:
br label %if.end, !phasar.instruction.id !105, ID: 51
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50


Instruction:
br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87, ID: 42
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41


Instruction:
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41


Instruction:
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43


Instruction:
br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92, ID: 45
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44


Instruction:
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44


Instruction:
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46


Instruction:
br label %if.end, !dbg !98, !phasar.instruction.id !99, ID: 48
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47


Instruction:
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44


Instruction:
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49


Instruction:
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50


Instruction:
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53


Instruction:
br label %if.end31, !dbg !159, !phasar.instruction.id !160, ID: 79
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br label %if.end27, !phasar.instruction.id !146, ID: 72
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70


Instruction:
br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116, ID: 57
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56


Instruction:
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56


Instruction:
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58


Instruction:
br label %if.end27, !dbg !122, !phasar.instruction.id !123, ID: 60
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59


Instruction:
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56


Instruction:
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61


Instruction:
br label %if.end26, !dbg !138, !phasar.instruction.id !139, ID: 68
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67


Instruction:
br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130, ID: 63
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
br label %if.end26, !phasar.instruction.id !145, ID: 71
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70


Instruction:
br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131, ID: 64
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132, ID: 65
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66


Instruction:
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69


Instruction:
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70


Instruction:
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73


Instruction:
br label %sw.epilog, !dbg !151, !phasar.instruction.id !152, ID: 75
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74


Instruction:
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74


Instruction:
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76


Instruction:
br label %sw.epilog30, !dbg !157, !phasar.instruction.id !158, ID: 78
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163, ID: 80
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
store i32 0, i32* %u, align 4, !dbg !162, !phasar.instruction.id !164, ID: 81
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169, ID: 83
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
store i32 0, i32* %a33, align 4, !dbg !168, !phasar.instruction.id !170, ID: 84
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
%tobool34 = icmp ne i32 %5, 0, !dbg !171, !phasar.instruction.id !174, ID: 86
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br label %if.end37, !phasar.instruction.id !185, ID: 91
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176, ID: 87
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
store i32 1, i32* %a33, align 4, !dbg !177, !phasar.instruction.id !179, ID: 88
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br label %if.end37, !dbg !180, !phasar.instruction.id !181, ID: 89
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
store i32 2, i32* %a33, align 4, !dbg !182, !phasar.instruction.id !184, ID: 90
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
%7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198, ID: 97
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194, ID: 95


Instruction:
br label %sw.epilog40, !dbg !195, !phasar.instruction.id !196, ID: 96
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194, ID: 95


Instruction:
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92


Instruction:
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93


Instruction:
store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194, ID: 95
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94


Instruction:
ret i32 %7, !dbg !199, !phasar.instruction.id !200, ID: 98
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32135 2019-Jan-05 14:31:42.428626 - [INFO] Write results to file
136 2019-Jan-05 14:31:42.428862 - [INFO] Shutdown llvm and the analysis framework.

* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
%7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198, ID: 97
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194, ID: 95


