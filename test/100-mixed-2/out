0 2018-Dec-28 12:41:21.515889 - [DEBUG] Set-up the command-line parameters
1 2018-Dec-28 12:41:21.516302 - [INFO] Chosen operation mode: 'phasarLLVM'
2 2018-Dec-28 12:41:21.516693 - [INFO] No configuration file is used.
3 2018-Dec-28 12:41:21.516772 - [INFO] Program options have been successfully parsed.
4 2018-Dec-28 12:41:21.516871 - [INFO] Check program options for logical errors.
5 2018-Dec-28 12:41:21.516961 - [INFO] Set-up IR database.
6 2018-Dec-28 12:41:21.531079 - [INFO] Constructed the analysis controller.
7 2018-Dec-28 12:41:21.531202 - [INFO] Found the following IR files for this project: 
8 2018-Dec-28 12:41:21.531263 - [INFO] 	main.ll
9 2018-Dec-28 12:41:21.531322 - [INFO] Check for chosen entry points.
10 2018-Dec-28 12:41:21.531384 - [INFO] link all llvm modules into a single module for WPA ...

11 2018-Dec-28 12:41:21.531442 - [INFO] link all llvm modules into a single module for WPA ended

12 2018-Dec-28 12:41:21.531502 - [INFO] Preprocess module: main.ll
13 2018-Dec-28 12:41:21.531841 - [INFO] Running GeneralStatisticsPass
14 2018-Dec-28 12:41:21.532072 - [INFO] Running ValueAnnotationPass
15 2018-Dec-28 12:41:21.533266 - [INFO] GeneralStatisticsPass summary for module: 'main.ll'

16 2018-Dec-28 12:41:21.533346 - [INFO] Allocated Types    : 1
17 2018-Dec-28 12:41:21.533415 - [INFO] Allocation Sites   : 15
18 2018-Dec-28 12:41:21.533473 - [INFO] Basic Blocks       : 31
19 2018-Dec-28 12:41:21.533530 - [INFO] Calls Sites        : 19
20 2018-Dec-28 12:41:21.533588 - [INFO] Functions          : 5
21 2018-Dec-28 12:41:21.533645 - [INFO] Globals            : 1
22 2018-Dec-28 12:41:21.533703 - [INFO] Global Pointer     : 1
23 2018-Dec-28 12:41:21.533761 - [INFO] Instructions       : 98
24 2018-Dec-28 12:41:21.533818 - [INFO] Memory Intrinsics  : 0
25 2018-Dec-28 12:41:21.533876 - [INFO] Store Instructions : 17
26 2018-Dec-28 12:41:21.533933 - [INFO]  
27 2018-Dec-28 12:41:21.534011 - [INFO]   i32
28 2018-Dec-28 12:41:21.535656 - [DEBUG] Analyzing function: main
29 2018-Dec-28 12:41:21.536769 - [INFO] Reconstruct the class hierarchy.
30 2018-Dec-28 12:41:21.536838 - [INFO] Construct type hierarchy
31 2018-Dec-28 12:41:21.536899 - [DEBUG] Analyse types in module: main.ll
32 2018-Dec-28 12:41:21.537243 - [DEBUG] Reconstruct virtual function table for module: main.ll
33 2018-Dec-28 12:41:21.537313 - [INFO] Reconstruction of class hierarchy completed.
34 2018-Dec-28 12:41:21.537377 - [INFO] Starting CallGraphAnalysisType: OTF
35 2018-Dec-28 12:41:21.537508 - [DEBUG] Walking in function: main
36 2018-Dec-28 12:41:21.537597 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %rc, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31, ID: 17
37 2018-Dec-28 12:41:21.538352 - [DEBUG] Found 1 possible target(s)
38 2018-Dec-28 12:41:21.538412 - [DEBUG] Target name: llvm.dbg.declare
39 2018-Dec-28 12:41:21.538499 - [DEBUG] Walking in function: llvm.dbg.declare
40 2018-Dec-28 12:41:21.538562 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
41 2018-Dec-28 12:41:21.538626 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %untainted, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34, ID: 18
42 2018-Dec-28 12:41:21.539315 - [DEBUG] Found 1 possible target(s)
43 2018-Dec-28 12:41:21.539374 - [DEBUG] Target name: llvm.dbg.declare
44 2018-Dec-28 12:41:21.539452 - [DEBUG] Walking in function: llvm.dbg.declare
45 2018-Dec-28 12:41:21.539516 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
46 2018-Dec-28 12:41:21.539580 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %taint, metadata !35, metadata !29), !dbg !36, !phasar.instruction.id !37, ID: 19
47 2018-Dec-28 12:41:21.540293 - [DEBUG] Found 1 possible target(s)
48 2018-Dec-28 12:41:21.540352 - [DEBUG] Target name: llvm.dbg.declare
49 2018-Dec-28 12:41:21.540428 - [DEBUG] Walking in function: llvm.dbg.declare
50 2018-Dec-28 12:41:21.540490 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
51 2018-Dec-28 12:41:21.540553 - [DEBUG] Found static call-site: %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
52 2018-Dec-28 12:41:21.541292 - [DEBUG] Found 1 possible target(s)
53 2018-Dec-28 12:41:21.541352 - [DEBUG] Target name: getenv
54 2018-Dec-28 12:41:21.541434 - [DEBUG] Walking in function: getenv
55 2018-Dec-28 12:41:21.541496 - [DEBUG] Function already visited or only declaration: getenv
56 2018-Dec-28 12:41:21.541562 - [DEBUG] Found static call-site: %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
57 2018-Dec-28 12:41:21.542228 - [DEBUG] Found 1 possible target(s)
58 2018-Dec-28 12:41:21.542287 - [DEBUG] Target name: bar
59 2018-Dec-28 12:41:21.542368 - [DEBUG] Walking in function: bar
60 2018-Dec-28 12:41:21.542430 - [DEBUG] Function already visited or only declaration: bar
61 2018-Dec-28 12:41:21.542494 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
62 2018-Dec-28 12:41:21.543168 - [DEBUG] Found 1 possible target(s)
63 2018-Dec-28 12:41:21.543242 - [DEBUG] Target name: llvm.dbg.declare
64 2018-Dec-28 12:41:21.543317 - [DEBUG] Walking in function: llvm.dbg.declare
65 2018-Dec-28 12:41:21.543380 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
66 2018-Dec-28 12:41:21.543443 - [DEBUG] Found static call-site: %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
67 2018-Dec-28 12:41:21.544109 - [DEBUG] Found 1 possible target(s)
68 2018-Dec-28 12:41:21.544168 - [DEBUG] Target name: foo
69 2018-Dec-28 12:41:21.544248 - [DEBUG] Walking in function: foo
70 2018-Dec-28 12:41:21.544310 - [DEBUG] Function already visited or only declaration: foo
71 2018-Dec-28 12:41:21.544373 - [DEBUG] Found static call-site: %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
72 2018-Dec-28 12:41:21.545038 - [DEBUG] Found 1 possible target(s)
73 2018-Dec-28 12:41:21.545097 - [DEBUG] Target name: bar
74 2018-Dec-28 12:41:21.545170 - [DEBUG] Walking in function: bar
75 2018-Dec-28 12:41:21.545232 - [DEBUG] Function already visited or only declaration: bar
76 2018-Dec-28 12:41:21.545296 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
77 2018-Dec-28 12:41:21.545978 - [DEBUG] Found 1 possible target(s)
78 2018-Dec-28 12:41:21.546037 - [DEBUG] Target name: llvm.dbg.declare
79 2018-Dec-28 12:41:21.546112 - [DEBUG] Walking in function: llvm.dbg.declare
80 2018-Dec-28 12:41:21.546174 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
81 2018-Dec-28 12:41:21.546238 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
82 2018-Dec-28 12:41:21.546928 - [DEBUG] Found 1 possible target(s)
83 2018-Dec-28 12:41:21.546996 - [DEBUG] Target name: llvm.dbg.declare
84 2018-Dec-28 12:41:21.547071 - [DEBUG] Walking in function: llvm.dbg.declare
85 2018-Dec-28 12:41:21.547133 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
86 2018-Dec-28 12:41:21.547199 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
87 2018-Dec-28 12:41:21.547873 - [DEBUG] Found 1 possible target(s)
88 2018-Dec-28 12:41:21.547932 - [DEBUG] Target name: llvm.dbg.declare
89 2018-Dec-28 12:41:21.548006 - [DEBUG] Walking in function: llvm.dbg.declare
90 2018-Dec-28 12:41:21.548068 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
91 2018-Dec-28 12:41:21.548132 - [DEBUG] Found static call-site: %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
92 2018-Dec-28 12:41:21.548814 - [DEBUG] Found 1 possible target(s)
93 2018-Dec-28 12:41:21.548875 - [DEBUG] Target name: foo
94 2018-Dec-28 12:41:21.548951 - [DEBUG] Walking in function: foo
95 2018-Dec-28 12:41:21.549026 - [DEBUG] Function already visited or only declaration: foo
96 2018-Dec-28 12:41:21.549092 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
97 2018-Dec-28 12:41:21.549811 - [DEBUG] Found 1 possible target(s)
98 2018-Dec-28 12:41:21.549872 - [DEBUG] Target name: llvm.dbg.declare
99 2018-Dec-28 12:41:21.549971 - [DEBUG] Walking in function: llvm.dbg.declare
100 2018-Dec-28 12:41:21.550035 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
101 2018-Dec-28 12:41:21.550100 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
102 2018-Dec-28 12:41:21.550785 - [DEBUG] Found 1 possible target(s)
103 2018-Dec-28 12:41:21.550845 - [DEBUG] Target name: llvm.dbg.declare
104 2018-Dec-28 12:41:21.550919 - [DEBUG] Walking in function: llvm.dbg.declare
105 2018-Dec-28 12:41:21.550982 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
106 2018-Dec-28 12:41:21.551046 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
107 2018-Dec-28 12:41:21.551724 - [DEBUG] Found 1 possible target(s)
108 2018-Dec-28 12:41:21.551783 - [DEBUG] Target name: llvm.dbg.declare
109 2018-Dec-28 12:41:21.551860 - [DEBUG] Walking in function: llvm.dbg.declare
110 2018-Dec-28 12:41:21.551923 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
111 2018-Dec-28 12:41:21.551987 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
112 2018-Dec-28 12:41:21.552663 - [DEBUG] Found 1 possible target(s)
113 2018-Dec-28 12:41:21.552722 - [DEBUG] Target name: llvm.dbg.declare
114 2018-Dec-28 12:41:21.552797 - [DEBUG] Walking in function: llvm.dbg.declare
115 2018-Dec-28 12:41:21.552859 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
116 2018-Dec-28 12:41:21.552924 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163, ID: 80
117 2018-Dec-28 12:41:21.553616 - [DEBUG] Found 1 possible target(s)
118 2018-Dec-28 12:41:21.553675 - [DEBUG] Target name: llvm.dbg.declare
119 2018-Dec-28 12:41:21.553750 - [DEBUG] Walking in function: llvm.dbg.declare
120 2018-Dec-28 12:41:21.553812 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
121 2018-Dec-28 12:41:21.553876 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169, ID: 83
122 2018-Dec-28 12:41:21.554550 - [DEBUG] Found 1 possible target(s)
123 2018-Dec-28 12:41:21.554609 - [DEBUG] Target name: llvm.dbg.declare
124 2018-Dec-28 12:41:21.554684 - [DEBUG] Walking in function: llvm.dbg.declare
125 2018-Dec-28 12:41:21.554746 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
126 2018-Dec-28 12:41:21.554812 - [DEBUG] Found static call-site: call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
127 2018-Dec-28 12:41:21.555545 - [DEBUG] Found 1 possible target(s)
128 2018-Dec-28 12:41:21.555604 - [DEBUG] Target name: llvm.dbg.declare
129 2018-Dec-28 12:41:21.555682 - [DEBUG] Walking in function: llvm.dbg.declare
130 2018-Dec-28 12:41:21.555745 - [DEBUG] Function already visited or only declaration: llvm.dbg.declare
131 2018-Dec-28 12:41:21.555807 - [INFO] Call graph has been constructed
132 2018-Dec-28 12:41:21.555870 - [INFO] Performing analysis: plugin
133 2018-Dec-28 12:41:21.555937 - [DEBUG] Loading shared object library: '/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so'
134 2018-Dec-28 12:41:21.556467 - [INFO] Solving plugin: mono
PhASAR v1218
A LLVM-based static analysis framework

--- Configuration ---
Project ID: myphasarproject
Graph ID: 123456
Module(s): main.ll 
Data-flow analysis: plugin 
WPA: 1
Mem2reg: 0
Print edge recorder: 0
Analysis plugin(s): 
/home/sebastian/.qt-creator-workspace/build-Phasar-Desktop-Debug/EnvironmentVariableTainting/libEnvironmentVariableTainting.so
Output: results.json
All modules loaded
PTG construction ...
PTG construction ended
DONE
init - MonoIntraPluginTest

flow()
  %retval = alloca i32, align 4, !phasar.instruction.id !12
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %rc = alloca i32, align 4, !phasar.instruction.id !13
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %untainted = alloca i32, align 4, !phasar.instruction.id !14
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %taint = alloca i32, align 4, !phasar.instruction.id !15
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a = alloca i32, align 4, !phasar.instruction.id !16
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a12 = alloca i32, align 4, !phasar.instruction.id !17
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a14 = alloca i32, align 4, !phasar.instruction.id !18
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a19 = alloca i32, align 4, !phasar.instruction.id !19
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a23 = alloca i32, align 4, !phasar.instruction.id !20
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a25 = alloca i32, align 4, !phasar.instruction.id !21
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a28 = alloca i32, align 4, !phasar.instruction.id !22
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a29 = alloca i32, align 4, !phasar.instruction.id !23
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %u = alloca i32, align 4, !phasar.instruction.id !24
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a33 = alloca i32, align 4, !phasar.instruction.id !25
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %a39 = alloca i32, align 4, !phasar.instruction.id !26
===========================
Got operands checking instruction (alloca)
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !27
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  call void @llvm.dbg.declare(metadata i32* %untainted, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  call void @llvm.dbg.declare(metadata i32* %taint, metadata !35, metadata !29), !dbg !36, !phasar.instruction.id !37
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 0

flow()
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
===========================
Got call instruction
Adding call instruction fact
sqSubSetEqual()
Old Facts: 0
New Facts: 1
join()
Adding line: 10

flow()
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
===========================
Got store instruction
Adding store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 2
join()
Adding line: 10
Adding line: 10

flow()
  %0 = load i32, i32* %rc, align 4, !dbg !41, !phasar.instruction.id !43
===========================
Got operands checking instruction (load)
sqSubSetEqual()
Old Facts: 0
New Facts: 2
join()
Adding line: 10
Adding line: 10

flow()
  %tobool = icmp ne i32 %0, 0, !dbg !41, !phasar.instruction.id !44
===========================
Got operands checking instruction (icmp)
sqSubSetEqual()
Old Facts: 0
New Facts: 2
join()
Adding line: 10
Adding line: 10

flow()
  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 2
join()
Adding line: 10
Adding line: 10

flow()
  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 2
join()
Adding line: 10
Adding line: 10

flow()
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
===========================
Got operands checking instruction (load)
Adding fact
sqSubSetEqual()
Old Facts: 0
New Facts: 3
join()
Adding line: 10
Adding line: 10
Adding line: 13

flow()
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
===========================
Got operands checking instruction (icmp)
Adding fact
sqSubSetEqual()
Old Facts: 0
New Facts: 4
join()
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13

flow()
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
===========================
Got branch instruction
Adding conditional branch instruction fact
sqSubSetEqual()
Old Facts: 0
New Facts: 5
join()
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 13

flow()
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
===========================
Got branch instruction
Adding conditional branch instruction fact
sqSubSetEqual()
Old Facts: 0
New Facts: 5
join()
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 13

flow()
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 6
join()
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13

flow()
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 6
join()
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13

flow()
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 6
join()
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13

flow()
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 7
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13

flow()
  br label %sw.bb, !dbg !62, !phasar.instruction.id !63
===========================
sqSubSetEqual()
Old Facts: 6
New Facts: 7
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13

flow()
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 8
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19

flow()
  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 8
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19

flow()
  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 8
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19

flow()
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 9
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22

flow()
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 10
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22

flow()
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 10
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22

flow()
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 10
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22

flow()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 11
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 23

flow()
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 12
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 23

flow()
  br label %if.end15, !dbg !80, !phasar.instruction.id !81
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 12
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 23

flow()
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 11
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24

flow()
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 12
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24

flow()
  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 12
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24

flow()
  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 12
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24

flow()
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 13
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24

flow()
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 14
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24

flow()
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92
===========================
sqSubSetEqual()
Old Facts: 12
New Facts: 14
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24

flow()
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 14
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24

flow()
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 15
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25

flow()
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 16
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25

flow()
  br label %if.end, !dbg !98, !phasar.instruction.id !99
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 16
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25

flow()
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 15
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 27

flow()
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 16
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 27
Adding line: 27

flow()
  br label %if.end, !phasar.instruction.id !105
===========================
sqSubSetEqual()
Old Facts: 16
New Facts: 16
join()
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27

flow()
  br label %if.end15, !phasar.instruction.id !106
===========================
sqSubSetEqual()
Old Facts: 12
New Facts: 18
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27

flow()
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 21
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29

flow()
  br label %sw.bb16, !dbg !109, !phasar.instruction.id !110
===========================
sqSubSetEqual()
Old Facts: 8
New Facts: 21
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29

flow()
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 22
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29

flow()
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 23
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32

flow()
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 23
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32

flow()
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 23
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32

flow()
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 24
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33

flow()
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 25
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33

flow()
  br label %if.end27, !dbg !122, !phasar.instruction.id !123
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 25
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33

flow()
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 24
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34

flow()
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 25
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34

flow()
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 25
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34

flow()
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 25
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34

flow()
  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 25
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34

flow()
  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 25
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34

flow()
  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 26
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34
Adding line: 35

flow()
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 27
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35

flow()
  br label %if.end26, !dbg !138, !phasar.instruction.id !139
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 27
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35

flow()
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 26
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34
Adding line: 37

flow()
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 27
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34
Adding line: 37
Adding line: 37

flow()
  br label %if.end26, !phasar.instruction.id !145
===========================
sqSubSetEqual()
Old Facts: 27
New Facts: 27
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37

flow()
  br label %if.end27, !phasar.instruction.id !146
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 29
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37

flow()
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 32
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39

flow()
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 33
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39

flow()
  br label %sw.epilog, !dbg !151, !phasar.instruction.id !152
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 33
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39

flow()
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42

flow()
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 35
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  br label %sw.epilog30, !dbg !157, !phasar.instruction.id !158
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 35
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  br label %if.end31, !dbg !159, !phasar.instruction.id !160
===========================
sqSubSetEqual()
Old Facts: 5
New Facts: 35
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 13
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  store i32 0, i32* %u, align 4, !dbg !162, !phasar.instruction.id !164
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  br label %if.end32, !dbg !165, !phasar.instruction.id !166
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 2
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  store i32 0, i32* %a33, align 4, !dbg !168, !phasar.instruction.id !170
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  %5 = load i32, i32* %untainted, align 4, !dbg !171, !phasar.instruction.id !173
===========================
Got operands checking instruction (load)
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  %tobool34 = icmp ne i32 %5, 0, !dbg !171, !phasar.instruction.id !174
===========================
Got operands checking instruction (icmp)
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  store i32 1, i32* %a33, align 4, !dbg !177, !phasar.instruction.id !179
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  br label %if.end37, !dbg !180, !phasar.instruction.id !181
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  store i32 2, i32* %a33, align 4, !dbg !182, !phasar.instruction.id !184
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 0
New Facts: 34
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42

flow()
  br label %if.end37, !phasar.instruction.id !185
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
===========================
Got operands checking instruction (load)
Adding fact
sqSubSetEqual()
Old Facts: 0
New Facts: 35
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42
Adding line: 56

flow()
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
===========================
Got switch instruction
Adding switch instruction fact
sqSubSetEqual()
Old Facts: 0
New Facts: 36
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42
Adding line: 56
Adding line: 56

flow()
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
===========================
Got switch instruction
Adding switch instruction fact
sqSubSetEqual()
Old Facts: 0
New Facts: 36
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42
Adding line: 56
Adding line: 56

flow()
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 37
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42
Adding line: 56
Adding line: 56
Adding line: 59

flow()
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
===========================
sqSubSetEqual()
Old Facts: 0
New Facts: 38
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42
Adding line: 56
Adding line: 56
Adding line: 59
Adding line: 59

flow()
  br label %sw.epilog40, !dbg !195, !phasar.instruction.id !196
===========================
sqSubSetEqual()
Old Facts: 36
New Facts: 38
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42
Adding line: 56
Adding line: 56
Adding line: 59
Adding line: 59

flow()
  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
===========================
Got operands checking instruction (load)
Adding fact
sqSubSetEqual()
Old Facts: 0
New Facts: 38
join()
Adding line: 23
Adding line: 17
Adding line: 10
Adding line: 10
Adding line: 13
Adding line: 13
Adding line: 14
Adding line: 19
Adding line: 32
Adding line: 22
Adding line: 22
Adding line: 23
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 24
Adding line: 25
Adding line: 25
Adding line: 27
Adding line: 27
Adding line: 29
Adding line: 32
Adding line: 33
Adding line: 33
Adding line: 34
Adding line: 34
Adding line: 35
Adding line: 35
Adding line: 37
Adding line: 37
Adding line: 39
Adding line: 39
Adding line: 42
Adding line: 42
Adding line: 56
Adding line: 63
Adding line: 59
Adding line: 59

flow()
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
===========================
Got store instruction
Adding store instruction
sqSubSetEqual()
Old Facts: 2
New Facts: 2

flow()
  %0 = load i32, i32* %rc, align 4, !dbg !41, !phasar.instruction.id !43
===========================
Got operands checking instruction (load)
sqSubSetEqual()
Old Facts: 2
New Facts: 2

flow()
  %tobool = icmp ne i32 %0, 0, !dbg !41, !phasar.instruction.id !44
===========================
Got operands checking instruction (icmp)
sqSubSetEqual()
Old Facts: 2
New Facts: 2

flow()
  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 2
New Facts: 2

flow()
  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 2

flow()
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
===========================
Got operands checking instruction (load)
Adding fact
sqSubSetEqual()
Old Facts: 3
New Facts: 3

flow()
  call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
===========================
Got operands checking instruction (icmp)
Adding fact
sqSubSetEqual()
Old Facts: 4
New Facts: 4

flow()
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
===========================
Got branch instruction
Adding conditional branch instruction fact
sqSubSetEqual()
Old Facts: 5
New Facts: 5

flow()
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
===========================
Got branch instruction
Adding conditional branch instruction fact
sqSubSetEqual()
Old Facts: 35
New Facts: 5

flow()
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
===========================
sqSubSetEqual()
Old Facts: 6
New Facts: 6

flow()
  call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58
===========================
sqSubSetEqual()
Old Facts: 6
New Facts: 6

flow()
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58
===========================
sqSubSetEqual()
Old Facts: 7
New Facts: 6

flow()
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
===========================
sqSubSetEqual()
Old Facts: 7
New Facts: 7

flow()
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
===========================
sqSubSetEqual()
Old Facts: 8
New Facts: 8

flow()
  br label %sw.bb, !dbg !62, !phasar.instruction.id !63
===========================
sqSubSetEqual()
Old Facts: 7
New Facts: 7

flow()
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
===========================
sqSubSetEqual()
Old Facts: 8
New Facts: 8

flow()
  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67
===========================
sqSubSetEqual()
Old Facts: 8
New Facts: 8

flow()
  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67
===========================
sqSubSetEqual()
Old Facts: 21
New Facts: 8

flow()
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
===========================
sqSubSetEqual()
Old Facts: 9
New Facts: 9

flow()
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
===========================
sqSubSetEqual()
Old Facts: 22
New Facts: 22

flow()
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
===========================
sqSubSetEqual()
Old Facts: 10
New Facts: 10

flow()
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74
===========================
sqSubSetEqual()
Old Facts: 10
New Facts: 10

flow()
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74
===========================
sqSubSetEqual()
Old Facts: 10
New Facts: 10

flow()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
===========================
sqSubSetEqual()
Old Facts: 11
New Facts: 11

flow()
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
===========================
sqSubSetEqual()
Old Facts: 11
New Facts: 11

flow()
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
===========================
sqSubSetEqual()
Old Facts: 12
New Facts: 12

flow()
  br label %if.end15, !dbg !80, !phasar.instruction.id !81
===========================
sqSubSetEqual()
Old Facts: 20
New Facts: 12

flow()
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
===========================
sqSubSetEqual()
Old Facts: 21
New Facts: 21

flow()
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
===========================
sqSubSetEqual()
Old Facts: 12
New Facts: 12

flow()
  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87
===========================
sqSubSetEqual()
Old Facts: 14
New Facts: 12

flow()
  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87
===========================
sqSubSetEqual()
Old Facts: 12
New Facts: 12

flow()
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
===========================
sqSubSetEqual()
Old Facts: 15
New Facts: 15

flow()
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
===========================
sqSubSetEqual()
Old Facts: 13
New Facts: 13

flow()
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
===========================
sqSubSetEqual()
Old Facts: 14
New Facts: 14

flow()
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92
===========================
sqSubSetEqual()
Old Facts: 14
New Facts: 14

flow()
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92
===========================
sqSubSetEqual()
Old Facts: 14
New Facts: 14

flow()
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
===========================
sqSubSetEqual()
Old Facts: 15
New Facts: 15

flow()
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
===========================
sqSubSetEqual()
Old Facts: 15
New Facts: 15

flow()
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
===========================
sqSubSetEqual()
Old Facts: 16
New Facts: 16

flow()
  br label %if.end, !dbg !98, !phasar.instruction.id !99
===========================
sqSubSetEqual()
Old Facts: 18
New Facts: 16

flow()
  br label %if.end15, !phasar.instruction.id !106
===========================
sqSubSetEqual()
Old Facts: 20
New Facts: 18

flow()
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
===========================
sqSubSetEqual()
Old Facts: 16
New Facts: 16

flow()
  br label %if.end, !phasar.instruction.id !105
===========================
sqSubSetEqual()
Old Facts: 18
New Facts: 16

flow()
  br label %if.end15, !phasar.instruction.id !106
===========================
sqSubSetEqual()
Old Facts: 20
New Facts: 18

flow()
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
===========================
sqSubSetEqual()
Old Facts: 21
New Facts: 21

flow()
  br label %sw.bb16, !dbg !109, !phasar.instruction.id !110
===========================
sqSubSetEqual()
Old Facts: 21
New Facts: 21

flow()
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
===========================
sqSubSetEqual()
Old Facts: 22
New Facts: 22

flow()
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
===========================
sqSubSetEqual()
Old Facts: 23
New Facts: 23

flow()
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116
===========================
sqSubSetEqual()
Old Facts: 23
New Facts: 23

flow()
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116
===========================
sqSubSetEqual()
Old Facts: 23
New Facts: 23

flow()
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
===========================
sqSubSetEqual()
Old Facts: 24
New Facts: 24

flow()
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
===========================
sqSubSetEqual()
Old Facts: 24
New Facts: 24

flow()
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  br label %if.end27, !dbg !122, !phasar.instruction.id !123
===========================
sqSubSetEqual()
Old Facts: 31
New Facts: 25

flow()
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
===========================
sqSubSetEqual()
Old Facts: 32
New Facts: 32

flow()
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132
===========================
sqSubSetEqual()
Old Facts: 25
New Facts: 25

flow()
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
===========================
sqSubSetEqual()
Old Facts: 26
New Facts: 26

flow()
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
===========================
sqSubSetEqual()
Old Facts: 26
New Facts: 26

flow()
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
===========================
sqSubSetEqual()
Old Facts: 27
New Facts: 27

flow()
  br label %if.end26, !dbg !138, !phasar.instruction.id !139
===========================
sqSubSetEqual()
Old Facts: 29
New Facts: 27

flow()
  br label %if.end27, !phasar.instruction.id !146
===========================
sqSubSetEqual()
Old Facts: 31
New Facts: 29

flow()
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
===========================
sqSubSetEqual()
Old Facts: 27
New Facts: 27

flow()
  br label %if.end26, !phasar.instruction.id !145
===========================
sqSubSetEqual()
Old Facts: 29
New Facts: 27

flow()
  br label %if.end27, !phasar.instruction.id !146
===========================
sqSubSetEqual()
Old Facts: 31
New Facts: 29

flow()
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
===========================
sqSubSetEqual()
Old Facts: 32
New Facts: 32

flow()
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
===========================
sqSubSetEqual()
Old Facts: 33
New Facts: 33

flow()
  br label %sw.epilog, !dbg !151, !phasar.instruction.id !152
===========================
sqSubSetEqual()
Old Facts: 33
New Facts: 33

flow()
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
===========================
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
===========================
sqSubSetEqual()
Old Facts: 35
New Facts: 35

flow()
  br label %sw.epilog30, !dbg !157, !phasar.instruction.id !158
===========================
sqSubSetEqual()
Old Facts: 35
New Facts: 35

flow()
  br label %if.end31, !dbg !159, !phasar.instruction.id !160
===========================
sqSubSetEqual()
Old Facts: 35
New Facts: 35

flow()
  call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  store i32 0, i32* %u, align 4, !dbg !162, !phasar.instruction.id !164
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  br label %if.end32, !dbg !165, !phasar.instruction.id !166
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169
===========================
Got call instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  store i32 0, i32* %a33, align 4, !dbg !168, !phasar.instruction.id !170
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  %5 = load i32, i32* %untainted, align 4, !dbg !171, !phasar.instruction.id !173
===========================
Got operands checking instruction (load)
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  %tobool34 = icmp ne i32 %5, 0, !dbg !171, !phasar.instruction.id !174
===========================
Got operands checking instruction (icmp)
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  store i32 1, i32* %a33, align 4, !dbg !177, !phasar.instruction.id !179
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  store i32 2, i32* %a33, align 4, !dbg !182, !phasar.instruction.id !184
===========================
Got store instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  br label %if.end37, !dbg !180, !phasar.instruction.id !181
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
===========================
Got operands checking instruction (load)
Adding fact
sqSubSetEqual()
Old Facts: 35
New Facts: 35

flow()
  br label %if.end37, !phasar.instruction.id !185
===========================
Got branch instruction
sqSubSetEqual()
Old Facts: 34
New Facts: 34

flow()
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
===========================
Got switch instruction
Adding switch instruction fact
sqSubSetEqual()
Old Facts: 38
New Facts: 36

flow()
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
===========================
Got switch instruction
Adding switch instruction fact
sqSubSetEqual()
Old Facts: 36
New Facts: 36

flow()
  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
===========================
Got operands checking instruction (load)
Adding fact
sqSubSetEqual()
Old Facts: 38
New Facts: 38

flow()
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
===========================
sqSubSetEqual()
Old Facts: 37
New Facts: 37

flow()
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
===========================
sqSubSetEqual()
Old Facts: 38
New Facts: 38

flow()
  br label %sw.epilog40, !dbg !195, !phasar.instruction.id !196
===========================
sqSubSetEqual()
Old Facts: 38
New Facts: 38

flow()
  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
===========================
Got operands checking instruction (load)
Adding fact
sqSubSetEqual()
Old Facts: 38
New Facts: 38

flow()
  %rc = alloca i32, align 4, !phasar.instruction.id !13
===========================
Got operands checking instruction (alloca)

flow()
  %a28 = alloca i32, align 4, !phasar.instruction.id !22
===========================
Got operands checking instruction (alloca)

flow()
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31
===========================
Got call instruction

flow()
  %a25 = alloca i32, align 4, !phasar.instruction.id !21
===========================
Got operands checking instruction (alloca)

flow()
  %untainted = alloca i32, align 4, !phasar.instruction.id !14
===========================
Got operands checking instruction (alloca)

flow()
  %retval = alloca i32, align 4, !phasar.instruction.id !12
===========================
Got operands checking instruction (alloca)

flow()
  store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79
===========================

flow()
  store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61
===========================

flow()
  %a39 = alloca i32, align 4, !phasar.instruction.id !26
===========================
Got operands checking instruction (alloca)

flow()
  store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40
===========================
Got store instruction
Adding store instruction

flow()
  %call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39
===========================
Got call instruction
Adding call instruction fact

flow()
  %a29 = alloca i32, align 4, !phasar.instruction.id !23
===========================
Got operands checking instruction (alloca)

flow()
  %a33 = alloca i32, align 4, !phasar.instruction.id !25
===========================
Got operands checking instruction (alloca)

flow()
  store i32 0, i32* %retval, align 4, !phasar.instruction.id !27
===========================
Got store instruction

flow()
  %u = alloca i32, align 4, !phasar.instruction.id !24
===========================
Got operands checking instruction (alloca)

flow()
  %a19 = alloca i32, align 4, !phasar.instruction.id !19
===========================
Got operands checking instruction (alloca)

flow()
  %a14 = alloca i32, align 4, !phasar.instruction.id !18
===========================
Got operands checking instruction (alloca)

flow()
  %a = alloca i32, align 4, !phasar.instruction.id !16
===========================
Got operands checking instruction (alloca)

flow()
  %a12 = alloca i32, align 4, !phasar.instruction.id !17
===========================
Got operands checking instruction (alloca)

flow()
  call void @llvm.dbg.declare(metadata i32* %untainted, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34
===========================
Got call instruction

flow()
  %a23 = alloca i32, align 4, !phasar.instruction.id !20
===========================
Got operands checking instruction (alloca)

flow()
  %taint = alloca i32, align 4, !phasar.instruction.id !15
===========================
Got operands checking instruction (alloca)

flow()
  call void @llvm.dbg.declare(metadata i32* %taint, metadata !35, metadata !29), !dbg !36, !phasar.instruction.id !37
===========================
Got call instruction

flow()
  %0 = load i32, i32* %rc, align 4, !dbg !41, !phasar.instruction.id !43
===========================
Got operands checking instruction (load)

flow()
  %tobool = icmp ne i32 %0, 0, !dbg !41, !phasar.instruction.id !44
===========================
Got operands checking instruction (icmp)

flow()
  %1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50
===========================
Got operands checking instruction (load)
Adding fact

flow()
  %5 = load i32, i32* %untainted, align 4, !dbg !171, !phasar.instruction.id !173
===========================
Got operands checking instruction (load)

flow()
  br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46
===========================
Got branch instruction

flow()
  %tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51
===========================
Got operands checking instruction (icmp)
Adding fact

flow()
  %2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56
===========================

flow()
  br label %if.end32, !dbg !165, !phasar.instruction.id !166
===========================
Got branch instruction

flow()
  br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53
===========================
Got branch instruction
Adding conditional branch instruction fact

flow()
  br label %sw.bb, !dbg !62, !phasar.instruction.id !63
===========================

flow()
  %3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65
===========================

flow()
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58
===========================

flow()
  %4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113
===========================

flow()
  switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67
===========================

flow()
  %call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71
===========================

flow()
  %tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72
===========================

flow()
  br label %sw.bb16, !dbg !109, !phasar.instruction.id !110
===========================

flow()
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74
===========================

flow()
  call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78
===========================

flow()
  br label %if.end15, !dbg !80, !phasar.instruction.id !81
===========================

flow()
  %call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84
===========================

flow()
  %tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85
===========================

flow()
  br label %if.end15, !phasar.instruction.id !106
===========================

flow()
  br label %if.end, !phasar.instruction.id !105
===========================

flow()
  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87
===========================

flow()
  %call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89
===========================

flow()
  %tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90
===========================

flow()
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92
===========================

flow()
  call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96
===========================

flow()
  store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97
===========================

flow()
  br label %if.end, !dbg !98, !phasar.instruction.id !99
===========================

flow()
  call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103
===========================

flow()
  store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104
===========================

flow()
  store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108
===========================

flow()
  %tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114
===========================

flow()
  br label %if.end31, !dbg !159, !phasar.instruction.id !160
===========================

flow()
  br label %if.end27, !phasar.instruction.id !146
===========================

flow()
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116
===========================

flow()
  call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120
===========================

flow()
  store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121
===========================

flow()
  br label %if.end27, !dbg !122, !phasar.instruction.id !123
===========================

flow()
  %call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126
===========================

flow()
  %cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128
===========================

flow()
  br label %if.end26, !dbg !138, !phasar.instruction.id !139
===========================

flow()
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130
===========================

flow()
  br label %if.end26, !phasar.instruction.id !145
===========================

flow()
  br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131
===========================

flow()
  br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132
===========================

flow()
  call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136
===========================

flow()
  store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137
===========================

flow()
  call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143
===========================

flow()
  store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144
===========================

flow()
  call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149
===========================

flow()
  store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150
===========================

flow()
  br label %sw.epilog, !dbg !151, !phasar.instruction.id !152
===========================

flow()
  call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155
===========================

flow()
  store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156
===========================

flow()
  br label %sw.epilog30, !dbg !157, !phasar.instruction.id !158
===========================

flow()
  call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163
===========================
Got call instruction

flow()
  store i32 0, i32* %u, align 4, !dbg !162, !phasar.instruction.id !164
===========================
Got store instruction

flow()
  call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169
===========================
Got call instruction

flow()
  store i32 0, i32* %a33, align 4, !dbg !168, !phasar.instruction.id !170
===========================
Got store instruction

flow()
  %tobool34 = icmp ne i32 %5, 0, !dbg !171, !phasar.instruction.id !174
===========================
Got operands checking instruction (icmp)

flow()
  %6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187
===========================
Got operands checking instruction (load)
Adding fact

flow()
  br label %if.end37, !phasar.instruction.id !185
===========================
Got branch instruction

flow()
  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176
===========================
Got branch instruction

flow()
  store i32 1, i32* %a33, align 4, !dbg !177, !phasar.instruction.id !179
===========================
Got store instruction

flow()
  br label %if.end37, !dbg !180, !phasar.instruction.id !181
===========================
Got branch instruction

flow()
  store i32 2, i32* %a33, align 4, !dbg !182, !phasar.instruction.id !184
===========================
Got store instruction

flow()
  %7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198
===========================
Got operands checking instruction (load)
Adding fact

flow()
  br label %sw.epilog40, !dbg !195, !phasar.instruction.id !196
===========================

flow()
  switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189
===========================
Got switch instruction
Adding switch instruction fact

flow()
  call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193
===========================

flow()
  store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194
===========================

flow()
  ret i32 %7, !dbg !199, !phasar.instruction.id !200worklist size: 110
worklist size: 109
worklist size: 108
worklist size: 107
worklist size: 106
worklist size: 105
worklist size: 104
worklist size: 103
worklist size: 102
worklist size: 101
worklist size: 100
worklist size: 99
worklist size: 98
worklist size: 97
worklist size: 96
worklist size: 95
worklist size: 94
worklist size: 93
worklist size: 92
worklist size: 91
worklist size: 91
worklist size: 91
worklist size: 91
worklist size: 92
worklist size: 92
worklist size: 92
worklist size: 92
worklist size: 93
worklist size: 93
worklist size: 93
worklist size: 94
worklist size: 94
worklist size: 94
worklist size: 94
worklist size: 94
worklist size: 95
worklist size: 95
worklist size: 95
worklist size: 95
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 96
worklist size: 97
worklist size: 97
worklist size: 97
worklist size: 97
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 98
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 99
worklist size: 100
worklist size: 101
worklist size: 102
worklist size: 102
worklist size: 102
worklist size: 101
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 100
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 100
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 101
worklist size: 100
worklist size: 99
worklist size: 98
worklist size: 97
worklist size: 96
worklist size: 95
worklist size: 94
worklist size: 93
worklist size: 92
worklist size: 91
worklist size: 90
worklist size: 89
worklist size: 88
worklist size: 87
worklist size: 86
worklist size: 85
worklist size: 84
worklist size: 83
worklist size: 82
worklist size: 81
worklist size: 80
worklist size: 79
worklist size: 78
worklist size: 77
worklist size: 76
worklist size: 75
worklist size: 74
worklist size: 73
worklist size: 72
worklist size: 71
worklist size: 70
worklist size: 69
worklist size: 68
worklist size: 67
worklist size: 66
worklist size: 65
worklist size: 64
worklist size: 63
worklist size: 62
worklist size: 61
worklist size: 60
worklist size: 59
worklist size: 58
worklist size: 57
worklist size: 56
worklist size: 55
worklist size: 54
worklist size: 53
worklist size: 52
worklist size: 51
worklist size: 50
worklist size: 49
worklist size: 48
worklist size: 47
worklist size: 46
worklist size: 45
worklist size: 44
worklist size: 43
worklist size: 42
worklist size: 41
worklist size: 40
worklist size: 39
worklist size: 38
worklist size: 37
worklist size: 36
worklist size: 35
worklist size: 34
worklist size: 33
worklist size: 32
worklist size: 31
worklist size: 30
worklist size: 29
worklist size: 28
worklist size: 27
worklist size: 26
worklist size: 25
worklist size: 24
worklist size: 23
worklist size: 22
worklist size: 21
worklist size: 20
worklist size: 19
worklist size: 18
worklist size: 17
worklist size: 16
worklist size: 15
worklist size: 14
worklist size: 13
worklist size: 12
worklist size: 11
worklist size: 10
worklist size: 9
worklist size: 8
worklist size: 7
worklist size: 6
worklist size: 5
worklist size: 4
worklist size: 3
worklist size: 2
worklist size: 1
LLVM-Intra-Monotone solver results:
-----------------------------------
Instruction:
%rc = alloca i32, align 4, !phasar.instruction.id !13, ID: 2
Facts:
	EMPTY


Instruction:
%a28 = alloca i32, align 4, !phasar.instruction.id !22, ID: 11
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %rc, metadata !28, metadata !29), !dbg !30, !phasar.instruction.id !31, ID: 17
Facts:
	EMPTY


Instruction:
%a25 = alloca i32, align 4, !phasar.instruction.id !21, ID: 10
Facts:
	EMPTY


Instruction:
%untainted = alloca i32, align 4, !phasar.instruction.id !14, ID: 3
Facts:
	EMPTY


Instruction:
%retval = alloca i32, align 4, !phasar.instruction.id !12, ID: 1
Facts:
	EMPTY


Instruction:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37


Instruction:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
%a39 = alloca i32, align 4, !phasar.instruction.id !26, ID: 15
Facts:
	EMPTY


Instruction:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
Facts:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
Facts:
	EMPTY


Instruction:
%a29 = alloca i32, align 4, !phasar.instruction.id !23, ID: 12
Facts:
	EMPTY


Instruction:
%a33 = alloca i32, align 4, !phasar.instruction.id !25, ID: 14
Facts:
	EMPTY


Instruction:
store i32 0, i32* %retval, align 4, !phasar.instruction.id !27, ID: 16
Facts:
	EMPTY


Instruction:
%u = alloca i32, align 4, !phasar.instruction.id !24, ID: 13
Facts:
	EMPTY


Instruction:
%a19 = alloca i32, align 4, !phasar.instruction.id !19, ID: 8
Facts:
	EMPTY


Instruction:
%a14 = alloca i32, align 4, !phasar.instruction.id !18, ID: 7
Facts:
	EMPTY


Instruction:
%a = alloca i32, align 4, !phasar.instruction.id !16, ID: 5
Facts:
	EMPTY


Instruction:
%a12 = alloca i32, align 4, !phasar.instruction.id !17, ID: 6
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %untainted, metadata !32, metadata !29), !dbg !33, !phasar.instruction.id !34, ID: 18
Facts:
	EMPTY


Instruction:
%a23 = alloca i32, align 4, !phasar.instruction.id !20, ID: 9
Facts:
	EMPTY


Instruction:
%taint = alloca i32, align 4, !phasar.instruction.id !15, ID: 4
Facts:
	EMPTY


Instruction:
call void @llvm.dbg.declare(metadata i32* %taint, metadata !35, metadata !29), !dbg !36, !phasar.instruction.id !37, ID: 19
Facts:
	EMPTY


Instruction:
%0 = load i32, i32* %rc, align 4, !dbg !41, !phasar.instruction.id !43, ID: 22
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%tobool = icmp ne i32 %0, 0, !dbg !41, !phasar.instruction.id !44, ID: 23
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%5 = load i32, i32* %untainted, align 4, !dbg !171, !phasar.instruction.id !173, ID: 85
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br i1 %tobool, label %if.then, label %if.end32, !dbg !45, !phasar.instruction.id !46, ID: 24
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20


Instruction:
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25


Instruction:
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
br label %if.end32, !dbg !165, !phasar.instruction.id !166, ID: 82
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26


Instruction:
br label %sw.bb, !dbg !62, !phasar.instruction.id !63, ID: 31
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !57, !phasar.instruction.id !58, ID: 29
Facts:
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27


Instruction:
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53


Instruction:
switch i32 %3, label %sw.default3 [
    i32 0, label %sw.bb16
  ], !dbg !66, !phasar.instruction.id !67, ID: 33
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32


Instruction:
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32


Instruction:
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34


Instruction:
br label %sw.bb16, !dbg !109, !phasar.instruction.id !110, ID: 54
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53


Instruction:
br i1 %tobool5, label %if.then6, label %if.else, !dbg !73, !phasar.instruction.id !74, ID: 36
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35


Instruction:
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35


Instruction:
br label %if.end15, !dbg !80, !phasar.instruction.id !81, ID: 39
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37


Instruction:
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35


Instruction:
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40


Instruction:
br label %if.end15, !phasar.instruction.id !106, ID: 52
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50


Instruction:
br label %if.end, !phasar.instruction.id !105, ID: 51
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50


Instruction:
br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !86, !phasar.instruction.id !87, ID: 42
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41


Instruction:
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41


Instruction:
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43


Instruction:
br i1 %tobool10, label %if.then11, label %if.else13, !dbg !91, !phasar.instruction.id !92, ID: 45
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44


Instruction:
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44


Instruction:
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46


Instruction:
br label %if.end, !dbg !98, !phasar.instruction.id !99, ID: 48
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47


Instruction:
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44


Instruction:
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
Facts:
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49


Instruction:
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50


Instruction:
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53


Instruction:
br label %if.end31, !dbg !159, !phasar.instruction.id !160, ID: 79
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br label %if.end27, !phasar.instruction.id !146, ID: 72
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70


Instruction:
br i1 %tobool17, label %if.then18, label %if.else20, !dbg !115, !phasar.instruction.id !116, ID: 57
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56


Instruction:
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56


Instruction:
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58


Instruction:
br label %if.end27, !dbg !122, !phasar.instruction.id !123, ID: 60
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59


Instruction:
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56


Instruction:
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61


Instruction:
br label %if.end26, !dbg !138, !phasar.instruction.id !139, ID: 68
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67


Instruction:
br i1 %cmp, label %cond.true, label %cond.false, !dbg !129, !phasar.instruction.id !130, ID: 63
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
br label %if.end26, !phasar.instruction.id !145, ID: 71
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70


Instruction:
br i1 false, label %if.then22, label %if.else24, !dbg !124, !phasar.instruction.id !131, ID: 64
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
br i1 true, label %if.then22, label %if.else24, !dbg !129, !phasar.instruction.id !132, ID: 65
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66


Instruction:
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62


Instruction:
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69


Instruction:
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70


Instruction:
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73


Instruction:
br label %sw.epilog, !dbg !151, !phasar.instruction.id !152, ID: 75
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74


Instruction:
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74


Instruction:
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76


Instruction:
br label %sw.epilog30, !dbg !157, !phasar.instruction.id !158, ID: 78
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
call void @llvm.dbg.declare(metadata i32* %u, metadata !161, metadata !29), !dbg !162, !phasar.instruction.id !163, ID: 80
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
br i1 %tobool1, label %if.then2, label %if.end31, !dbg !52, !phasar.instruction.id !53, ID: 27
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
store i32 0, i32* %u, align 4, !dbg !162, !phasar.instruction.id !164, ID: 81
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
call void @llvm.dbg.declare(metadata i32* %a33, metadata !167, metadata !29), !dbg !168, !phasar.instruction.id !169, ID: 83
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
store i32 0, i32* %a33, align 4, !dbg !168, !phasar.instruction.id !170, ID: 84
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
%tobool34 = icmp ne i32 %5, 0, !dbg !171, !phasar.instruction.id !174, ID: 86
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br label %if.end37, !phasar.instruction.id !185, ID: 91
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br i1 %tobool34, label %if.then35, label %if.else36, !dbg !175, !phasar.instruction.id !176, ID: 87
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
store i32 1, i32* %a33, align 4, !dbg !177, !phasar.instruction.id !179, ID: 88
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
br label %if.end37, !dbg !180, !phasar.instruction.id !181, ID: 89
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
store i32 2, i32* %a33, align 4, !dbg !182, !phasar.instruction.id !184, ID: 90
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77


Instruction:
%7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198, ID: 97
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194, ID: 95


Instruction:
br label %sw.epilog40, !dbg !195, !phasar.instruction.id !196, ID: 96
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194, ID: 95


Instruction:
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92


Instruction:
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93


Instruction:
store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194, ID: 95
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
switch i32 %6, label %sw.epilog40 [
    i32 0, label %sw.bb38
  ], !dbg !188, !phasar.instruction.id !189, ID: 93
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94


Instruction:
ret i32 %7, !dbg !199, !phasar.instruction.id !200, ID: 98
Facts:
store i32 2, i32* %a, align 4, !dbg !77, !phasar.instruction.id !79, ID: 38
store i32 1, i32* %rc, align 4, !dbg !59, !phasar.instruction.id !61, ID: 30
store i32 %call, i32* %taint, align 4, !dbg !36, !phasar.instruction.id !40, ID: 21
%call = call i32 @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !38, !phasar.instruction.id !39, ID: 20
%1 = load i32, i32* %taint, align 4, !dbg !47, !phasar.instruction.id !50, ID: 25
%tobool1 = icmp ne i32 %1, 0, !dbg !47, !phasar.instruction.id !51, ID: 26
%2 = load i32, i32* %rc, align 4, !dbg !54, !phasar.instruction.id !56, ID: 28
%3 = load i32, i32* %rc, align 4, !dbg !64, !phasar.instruction.id !65, ID: 32
%4 = load i32, i32* %taint, align 4, !dbg !111, !phasar.instruction.id !113, ID: 55
%call4 = call i32 (...) @bar(), !dbg !68, !phasar.instruction.id !71, ID: 34
%tobool5 = icmp ne i32 %call4, 0, !dbg !68, !phasar.instruction.id !72, ID: 35
call void @llvm.dbg.declare(metadata i32* %a, metadata !75, metadata !29), !dbg !77, !phasar.instruction.id !78, ID: 37
%call7 = call i32 (...) @foo(), !dbg !82, !phasar.instruction.id !84, ID: 40
%tobool8 = icmp ne i32 %call7, 0, !dbg !82, !phasar.instruction.id !85, ID: 41
%call9 = call i32 (...) @bar(), !dbg !88, !phasar.instruction.id !89, ID: 43
%tobool10 = icmp ne i32 %call9, 0, !dbg !88, !phasar.instruction.id !90, ID: 44
call void @llvm.dbg.declare(metadata i32* %a12, metadata !93, metadata !29), !dbg !95, !phasar.instruction.id !96, ID: 46
store i32 1, i32* %a12, align 4, !dbg !95, !phasar.instruction.id !97, ID: 47
call void @llvm.dbg.declare(metadata i32* %a14, metadata !100, metadata !29), !dbg !102, !phasar.instruction.id !103, ID: 49
store i32 3, i32* %a14, align 4, !dbg !102, !phasar.instruction.id !104, ID: 50
store i32 1, i32135 2018-Dec-28 12:41:22.898187 - [INFO] Write results to file
136 2018-Dec-28 12:41:22.898421 - [INFO] Shutdown llvm and the analysis framework.

===========================
printReport()
* %rc, align 4, !dbg !107, !phasar.instruction.id !108, ID: 53
%tobool17 = icmp ne i32 %4, 0, !dbg !111, !phasar.instruction.id !114, ID: 56
call void @llvm.dbg.declare(metadata i32* %a19, metadata !117, metadata !29), !dbg !119, !phasar.instruction.id !120, ID: 58
store i32 2, i32* %a19, align 4, !dbg !119, !phasar.instruction.id !121, ID: 59
%call21 = call i32 (...) @foo(), !dbg !124, !phasar.instruction.id !126, ID: 61
%cmp = icmp eq i32 %call21, 0, !dbg !127, !phasar.instruction.id !128, ID: 62
call void @llvm.dbg.declare(metadata i32* %a23, metadata !133, metadata !29), !dbg !135, !phasar.instruction.id !136, ID: 66
store i32 1, i32* %a23, align 4, !dbg !135, !phasar.instruction.id !137, ID: 67
call void @llvm.dbg.declare(metadata i32* %a25, metadata !140, metadata !29), !dbg !142, !phasar.instruction.id !143, ID: 69
store i32 3, i32* %a25, align 4, !dbg !142, !phasar.instruction.id !144, ID: 70
call void @llvm.dbg.declare(metadata i32* %a28, metadata !147, metadata !29), !dbg !148, !phasar.instruction.id !149, ID: 73
store i32 1, i32* %a28, align 4, !dbg !148, !phasar.instruction.id !150, ID: 74
call void @llvm.dbg.declare(metadata i32* %a29, metadata !153, metadata !29), !dbg !154, !phasar.instruction.id !155, ID: 76
store i32 1, i32* %a29, align 4, !dbg !154, !phasar.instruction.id !156, ID: 77
%6 = load i32, i32* %rc, align 4, !dbg !186, !phasar.instruction.id !187, ID: 92
%7 = load i32, i32* %rc, align 4, !dbg !197, !phasar.instruction.id !198, ID: 97
call void @llvm.dbg.declare(metadata i32* %a39, metadata !190, metadata !29), !dbg !192, !phasar.instruction.id !193, ID: 94
store i32 0, i32* %a39, align 4, !dbg !192, !phasar.instruction.id !194, ID: 95


